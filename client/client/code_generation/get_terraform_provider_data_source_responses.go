// Code generated by go-swagger; DO NOT EDIT.

package code_generation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetTerraformProviderDataSourceReader is a Reader for the GetTerraformProviderDataSource structure.
type GetTerraformProviderDataSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTerraformProviderDataSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTerraformProviderDataSourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetTerraformProviderDataSourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTerraformProviderDataSourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetTerraformProviderDataSourceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTerraformProviderDataSourceOK creates a GetTerraformProviderDataSourceOK with default headers values
func NewGetTerraformProviderDataSourceOK() *GetTerraformProviderDataSourceOK {
	return &GetTerraformProviderDataSourceOK{}
}

/*
GetTerraformProviderDataSourceOK describes a response with status code 200, with default header values.

The information of the DataSource
*/
type GetTerraformProviderDataSourceOK struct {
	Payload *GetTerraformProviderDataSourceOKBody
}

// IsSuccess returns true when this get terraform provider data source o k response has a 2xx status code
func (o *GetTerraformProviderDataSourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get terraform provider data source o k response has a 3xx status code
func (o *GetTerraformProviderDataSourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform provider data source o k response has a 4xx status code
func (o *GetTerraformProviderDataSourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get terraform provider data source o k response has a 5xx status code
func (o *GetTerraformProviderDataSourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform provider data source o k response a status code equal to that given
func (o *GetTerraformProviderDataSourceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get terraform provider data source o k response
func (o *GetTerraformProviderDataSourceOK) Code() int {
	return 200
}

func (o *GetTerraformProviderDataSourceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources/{resource_canonical}][%d] getTerraformProviderDataSourceOK %s", 200, payload)
}

func (o *GetTerraformProviderDataSourceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources/{resource_canonical}][%d] getTerraformProviderDataSourceOK %s", 200, payload)
}

func (o *GetTerraformProviderDataSourceOK) GetPayload() *GetTerraformProviderDataSourceOKBody {
	return o.Payload
}

func (o *GetTerraformProviderDataSourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTerraformProviderDataSourceOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformProviderDataSourceForbidden creates a GetTerraformProviderDataSourceForbidden with default headers values
func NewGetTerraformProviderDataSourceForbidden() *GetTerraformProviderDataSourceForbidden {
	return &GetTerraformProviderDataSourceForbidden{}
}

/*
GetTerraformProviderDataSourceForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetTerraformProviderDataSourceForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get terraform provider data source forbidden response has a 2xx status code
func (o *GetTerraformProviderDataSourceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform provider data source forbidden response has a 3xx status code
func (o *GetTerraformProviderDataSourceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform provider data source forbidden response has a 4xx status code
func (o *GetTerraformProviderDataSourceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform provider data source forbidden response has a 5xx status code
func (o *GetTerraformProviderDataSourceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform provider data source forbidden response a status code equal to that given
func (o *GetTerraformProviderDataSourceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get terraform provider data source forbidden response
func (o *GetTerraformProviderDataSourceForbidden) Code() int {
	return 403
}

func (o *GetTerraformProviderDataSourceForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources/{resource_canonical}][%d] getTerraformProviderDataSourceForbidden %s", 403, payload)
}

func (o *GetTerraformProviderDataSourceForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources/{resource_canonical}][%d] getTerraformProviderDataSourceForbidden %s", 403, payload)
}

func (o *GetTerraformProviderDataSourceForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetTerraformProviderDataSourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformProviderDataSourceNotFound creates a GetTerraformProviderDataSourceNotFound with default headers values
func NewGetTerraformProviderDataSourceNotFound() *GetTerraformProviderDataSourceNotFound {
	return &GetTerraformProviderDataSourceNotFound{}
}

/*
GetTerraformProviderDataSourceNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetTerraformProviderDataSourceNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get terraform provider data source not found response has a 2xx status code
func (o *GetTerraformProviderDataSourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get terraform provider data source not found response has a 3xx status code
func (o *GetTerraformProviderDataSourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get terraform provider data source not found response has a 4xx status code
func (o *GetTerraformProviderDataSourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get terraform provider data source not found response has a 5xx status code
func (o *GetTerraformProviderDataSourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get terraform provider data source not found response a status code equal to that given
func (o *GetTerraformProviderDataSourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get terraform provider data source not found response
func (o *GetTerraformProviderDataSourceNotFound) Code() int {
	return 404
}

func (o *GetTerraformProviderDataSourceNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources/{resource_canonical}][%d] getTerraformProviderDataSourceNotFound %s", 404, payload)
}

func (o *GetTerraformProviderDataSourceNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources/{resource_canonical}][%d] getTerraformProviderDataSourceNotFound %s", 404, payload)
}

func (o *GetTerraformProviderDataSourceNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetTerraformProviderDataSourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTerraformProviderDataSourceDefault creates a GetTerraformProviderDataSourceDefault with default headers values
func NewGetTerraformProviderDataSourceDefault(code int) *GetTerraformProviderDataSourceDefault {
	return &GetTerraformProviderDataSourceDefault{
		_statusCode: code,
	}
}

/*
GetTerraformProviderDataSourceDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetTerraformProviderDataSourceDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get terraform provider data source default response has a 2xx status code
func (o *GetTerraformProviderDataSourceDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get terraform provider data source default response has a 3xx status code
func (o *GetTerraformProviderDataSourceDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get terraform provider data source default response has a 4xx status code
func (o *GetTerraformProviderDataSourceDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get terraform provider data source default response has a 5xx status code
func (o *GetTerraformProviderDataSourceDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get terraform provider data source default response a status code equal to that given
func (o *GetTerraformProviderDataSourceDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get terraform provider data source default response
func (o *GetTerraformProviderDataSourceDefault) Code() int {
	return o._statusCode
}

func (o *GetTerraformProviderDataSourceDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources/{resource_canonical}][%d] getTerraformProviderDataSource default %s", o._statusCode, payload)
}

func (o *GetTerraformProviderDataSourceDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources/{resource_canonical}][%d] getTerraformProviderDataSource default %s", o._statusCode, payload)
}

func (o *GetTerraformProviderDataSourceDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetTerraformProviderDataSourceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetTerraformProviderDataSourceOKBody get terraform provider data source o k body
swagger:model GetTerraformProviderDataSourceOKBody
*/
type GetTerraformProviderDataSourceOKBody struct {

	// data
	// Required: true
	Data *models.TerraformProviderResource `json:"data"`
}

// Validate validates this get terraform provider data source o k body
func (o *GetTerraformProviderDataSourceOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTerraformProviderDataSourceOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getTerraformProviderDataSourceOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getTerraformProviderDataSourceOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getTerraformProviderDataSourceOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get terraform provider data source o k body based on the context it is used
func (o *GetTerraformProviderDataSourceOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTerraformProviderDataSourceOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getTerraformProviderDataSourceOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getTerraformProviderDataSourceOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTerraformProviderDataSourceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTerraformProviderDataSourceOKBody) UnmarshalBinary(b []byte) error {
	var res GetTerraformProviderDataSourceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
