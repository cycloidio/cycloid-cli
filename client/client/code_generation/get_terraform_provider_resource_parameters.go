// Code generated by go-swagger; DO NOT EDIT.

package code_generation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetTerraformProviderResourceParams creates a new GetTerraformProviderResourceParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTerraformProviderResourceParams() *GetTerraformProviderResourceParams {
	return &GetTerraformProviderResourceParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTerraformProviderResourceParamsWithTimeout creates a new GetTerraformProviderResourceParams object
// with the ability to set a timeout on a request.
func NewGetTerraformProviderResourceParamsWithTimeout(timeout time.Duration) *GetTerraformProviderResourceParams {
	return &GetTerraformProviderResourceParams{
		timeout: timeout,
	}
}

// NewGetTerraformProviderResourceParamsWithContext creates a new GetTerraformProviderResourceParams object
// with the ability to set a context for a request.
func NewGetTerraformProviderResourceParamsWithContext(ctx context.Context) *GetTerraformProviderResourceParams {
	return &GetTerraformProviderResourceParams{
		Context: ctx,
	}
}

// NewGetTerraformProviderResourceParamsWithHTTPClient creates a new GetTerraformProviderResourceParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTerraformProviderResourceParamsWithHTTPClient(client *http.Client) *GetTerraformProviderResourceParams {
	return &GetTerraformProviderResourceParams{
		HTTPClient: client,
	}
}

/*
GetTerraformProviderResourceParams contains all the parameters to send to the API endpoint

	for the get terraform provider resource operation.

	Typically these are written to a http.Request.
*/
type GetTerraformProviderResourceParams struct {

	/* OrganizationCanonical.

	   A canonical of an organization.
	*/
	OrganizationCanonical string

	/* ProviderCanonical.

	   A canonical of a Provider
	*/
	ProviderCanonical string

	/* ResourceCanonical.

	   A canonical of a Resource
	*/
	ResourceCanonical string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get terraform provider resource params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTerraformProviderResourceParams) WithDefaults() *GetTerraformProviderResourceParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get terraform provider resource params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTerraformProviderResourceParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) WithTimeout(timeout time.Duration) *GetTerraformProviderResourceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) WithContext(ctx context.Context) *GetTerraformProviderResourceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) WithHTTPClient(client *http.Client) *GetTerraformProviderResourceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrganizationCanonical adds the organizationCanonical to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) WithOrganizationCanonical(organizationCanonical string) *GetTerraformProviderResourceParams {
	o.SetOrganizationCanonical(organizationCanonical)
	return o
}

// SetOrganizationCanonical adds the organizationCanonical to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) SetOrganizationCanonical(organizationCanonical string) {
	o.OrganizationCanonical = organizationCanonical
}

// WithProviderCanonical adds the providerCanonical to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) WithProviderCanonical(providerCanonical string) *GetTerraformProviderResourceParams {
	o.SetProviderCanonical(providerCanonical)
	return o
}

// SetProviderCanonical adds the providerCanonical to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) SetProviderCanonical(providerCanonical string) {
	o.ProviderCanonical = providerCanonical
}

// WithResourceCanonical adds the resourceCanonical to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) WithResourceCanonical(resourceCanonical string) *GetTerraformProviderResourceParams {
	o.SetResourceCanonical(resourceCanonical)
	return o
}

// SetResourceCanonical adds the resourceCanonical to the get terraform provider resource params
func (o *GetTerraformProviderResourceParams) SetResourceCanonical(resourceCanonical string) {
	o.ResourceCanonical = resourceCanonical
}

// WriteToRequest writes these params to a swagger request
func (o *GetTerraformProviderResourceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param organization_canonical
	if err := r.SetPathParam("organization_canonical", o.OrganizationCanonical); err != nil {
		return err
	}

	// path param provider_canonical
	if err := r.SetPathParam("provider_canonical", o.ProviderCanonical); err != nil {
		return err
	}

	// path param resource_canonical
	if err := r.SetPathParam("resource_canonical", o.ResourceCanonical); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
