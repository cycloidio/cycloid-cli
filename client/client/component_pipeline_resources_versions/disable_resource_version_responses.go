// Code generated by go-swagger; DO NOT EDIT.

package component_pipeline_resources_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// DisableResourceVersionReader is a Reader for the DisableResourceVersion structure.
type DisableResourceVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DisableResourceVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDisableResourceVersionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDisableResourceVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDisableResourceVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDisableResourceVersionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDisableResourceVersionNoContent creates a DisableResourceVersionNoContent with default headers values
func NewDisableResourceVersionNoContent() *DisableResourceVersionNoContent {
	return &DisableResourceVersionNoContent{}
}

/*
DisableResourceVersionNoContent describes a response with status code 204, with default header values.

Resource version have been disabled
*/
type DisableResourceVersionNoContent struct {
}

// IsSuccess returns true when this disable resource version no content response has a 2xx status code
func (o *DisableResourceVersionNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this disable resource version no content response has a 3xx status code
func (o *DisableResourceVersionNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable resource version no content response has a 4xx status code
func (o *DisableResourceVersionNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this disable resource version no content response has a 5xx status code
func (o *DisableResourceVersionNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this disable resource version no content response a status code equal to that given
func (o *DisableResourceVersionNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the disable resource version no content response
func (o *DisableResourceVersionNoContent) Code() int {
	return 204
}

func (o *DisableResourceVersionNoContent) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/disable][%d] disableResourceVersionNoContent", 204)
}

func (o *DisableResourceVersionNoContent) String() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/disable][%d] disableResourceVersionNoContent", 204)
}

func (o *DisableResourceVersionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDisableResourceVersionForbidden creates a DisableResourceVersionForbidden with default headers values
func NewDisableResourceVersionForbidden() *DisableResourceVersionForbidden {
	return &DisableResourceVersionForbidden{}
}

/*
DisableResourceVersionForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type DisableResourceVersionForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this disable resource version forbidden response has a 2xx status code
func (o *DisableResourceVersionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disable resource version forbidden response has a 3xx status code
func (o *DisableResourceVersionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable resource version forbidden response has a 4xx status code
func (o *DisableResourceVersionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this disable resource version forbidden response has a 5xx status code
func (o *DisableResourceVersionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this disable resource version forbidden response a status code equal to that given
func (o *DisableResourceVersionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the disable resource version forbidden response
func (o *DisableResourceVersionForbidden) Code() int {
	return 403
}

func (o *DisableResourceVersionForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/disable][%d] disableResourceVersionForbidden %s", 403, payload)
}

func (o *DisableResourceVersionForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/disable][%d] disableResourceVersionForbidden %s", 403, payload)
}

func (o *DisableResourceVersionForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DisableResourceVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableResourceVersionNotFound creates a DisableResourceVersionNotFound with default headers values
func NewDisableResourceVersionNotFound() *DisableResourceVersionNotFound {
	return &DisableResourceVersionNotFound{}
}

/*
DisableResourceVersionNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type DisableResourceVersionNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this disable resource version not found response has a 2xx status code
func (o *DisableResourceVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this disable resource version not found response has a 3xx status code
func (o *DisableResourceVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this disable resource version not found response has a 4xx status code
func (o *DisableResourceVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this disable resource version not found response has a 5xx status code
func (o *DisableResourceVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this disable resource version not found response a status code equal to that given
func (o *DisableResourceVersionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the disable resource version not found response
func (o *DisableResourceVersionNotFound) Code() int {
	return 404
}

func (o *DisableResourceVersionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/disable][%d] disableResourceVersionNotFound %s", 404, payload)
}

func (o *DisableResourceVersionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/disable][%d] disableResourceVersionNotFound %s", 404, payload)
}

func (o *DisableResourceVersionNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DisableResourceVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDisableResourceVersionDefault creates a DisableResourceVersionDefault with default headers values
func NewDisableResourceVersionDefault(code int) *DisableResourceVersionDefault {
	return &DisableResourceVersionDefault{
		_statusCode: code,
	}
}

/*
DisableResourceVersionDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type DisableResourceVersionDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this disable resource version default response has a 2xx status code
func (o *DisableResourceVersionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this disable resource version default response has a 3xx status code
func (o *DisableResourceVersionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this disable resource version default response has a 4xx status code
func (o *DisableResourceVersionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this disable resource version default response has a 5xx status code
func (o *DisableResourceVersionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this disable resource version default response a status code equal to that given
func (o *DisableResourceVersionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the disable resource version default response
func (o *DisableResourceVersionDefault) Code() int {
	return o._statusCode
}

func (o *DisableResourceVersionDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/disable][%d] disableResourceVersion default %s", o._statusCode, payload)
}

func (o *DisableResourceVersionDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/disable][%d] disableResourceVersion default %s", o._statusCode, payload)
}

func (o *DisableResourceVersionDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DisableResourceVersionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
