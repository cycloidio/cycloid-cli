// Code generated by go-swagger; DO NOT EDIT.

package component_pipeline_resources_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetResourceVersionsReader is a Reader for the GetResourceVersions structure.
type GetResourceVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetResourceVersionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetResourceVersionsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetResourceVersionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetResourceVersionsOK creates a GetResourceVersionsOK with default headers values
func NewGetResourceVersionsOK() *GetResourceVersionsOK {
	return &GetResourceVersionsOK{}
}

/*
GetResourceVersionsOK describes a response with status code 200, with default header values.

Get versions of a specified resource.
*/
type GetResourceVersionsOK struct {
	Payload *GetResourceVersionsOKBody
}

// IsSuccess returns true when this get resource versions o k response has a 2xx status code
func (o *GetResourceVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource versions o k response has a 3xx status code
func (o *GetResourceVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource versions o k response has a 4xx status code
func (o *GetResourceVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource versions o k response has a 5xx status code
func (o *GetResourceVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource versions o k response a status code equal to that given
func (o *GetResourceVersionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource versions o k response
func (o *GetResourceVersionsOK) Code() int {
	return 200
}

func (o *GetResourceVersionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersionsOK %s", 200, payload)
}

func (o *GetResourceVersionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersionsOK %s", 200, payload)
}

func (o *GetResourceVersionsOK) GetPayload() *GetResourceVersionsOKBody {
	return o.Payload
}

func (o *GetResourceVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetResourceVersionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceVersionsForbidden creates a GetResourceVersionsForbidden with default headers values
func NewGetResourceVersionsForbidden() *GetResourceVersionsForbidden {
	return &GetResourceVersionsForbidden{}
}

/*
GetResourceVersionsForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetResourceVersionsForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get resource versions forbidden response has a 2xx status code
func (o *GetResourceVersionsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource versions forbidden response has a 3xx status code
func (o *GetResourceVersionsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource versions forbidden response has a 4xx status code
func (o *GetResourceVersionsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource versions forbidden response has a 5xx status code
func (o *GetResourceVersionsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource versions forbidden response a status code equal to that given
func (o *GetResourceVersionsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resource versions forbidden response
func (o *GetResourceVersionsForbidden) Code() int {
	return 403
}

func (o *GetResourceVersionsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersionsForbidden %s", 403, payload)
}

func (o *GetResourceVersionsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersionsForbidden %s", 403, payload)
}

func (o *GetResourceVersionsForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetResourceVersionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceVersionsNotFound creates a GetResourceVersionsNotFound with default headers values
func NewGetResourceVersionsNotFound() *GetResourceVersionsNotFound {
	return &GetResourceVersionsNotFound{}
}

/*
GetResourceVersionsNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetResourceVersionsNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get resource versions not found response has a 2xx status code
func (o *GetResourceVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource versions not found response has a 3xx status code
func (o *GetResourceVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource versions not found response has a 4xx status code
func (o *GetResourceVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource versions not found response has a 5xx status code
func (o *GetResourceVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource versions not found response a status code equal to that given
func (o *GetResourceVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource versions not found response
func (o *GetResourceVersionsNotFound) Code() int {
	return 404
}

func (o *GetResourceVersionsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersionsNotFound %s", 404, payload)
}

func (o *GetResourceVersionsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersionsNotFound %s", 404, payload)
}

func (o *GetResourceVersionsNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetResourceVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceVersionsUnprocessableEntity creates a GetResourceVersionsUnprocessableEntity with default headers values
func NewGetResourceVersionsUnprocessableEntity() *GetResourceVersionsUnprocessableEntity {
	return &GetResourceVersionsUnprocessableEntity{}
}

/*
GetResourceVersionsUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type GetResourceVersionsUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get resource versions unprocessable entity response has a 2xx status code
func (o *GetResourceVersionsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource versions unprocessable entity response has a 3xx status code
func (o *GetResourceVersionsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource versions unprocessable entity response has a 4xx status code
func (o *GetResourceVersionsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource versions unprocessable entity response has a 5xx status code
func (o *GetResourceVersionsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource versions unprocessable entity response a status code equal to that given
func (o *GetResourceVersionsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get resource versions unprocessable entity response
func (o *GetResourceVersionsUnprocessableEntity) Code() int {
	return 422
}

func (o *GetResourceVersionsUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersionsUnprocessableEntity %s", 422, payload)
}

func (o *GetResourceVersionsUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersionsUnprocessableEntity %s", 422, payload)
}

func (o *GetResourceVersionsUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetResourceVersionsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceVersionsDefault creates a GetResourceVersionsDefault with default headers values
func NewGetResourceVersionsDefault(code int) *GetResourceVersionsDefault {
	return &GetResourceVersionsDefault{
		_statusCode: code,
	}
}

/*
GetResourceVersionsDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetResourceVersionsDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get resource versions default response has a 2xx status code
func (o *GetResourceVersionsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get resource versions default response has a 3xx status code
func (o *GetResourceVersionsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get resource versions default response has a 4xx status code
func (o *GetResourceVersionsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get resource versions default response has a 5xx status code
func (o *GetResourceVersionsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get resource versions default response a status code equal to that given
func (o *GetResourceVersionsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get resource versions default response
func (o *GetResourceVersionsDefault) Code() int {
	return o._statusCode
}

func (o *GetResourceVersionsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersions default %s", o._statusCode, payload)
}

func (o *GetResourceVersionsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions][%d] getResourceVersions default %s", o._statusCode, payload)
}

func (o *GetResourceVersionsDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetResourceVersionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetResourceVersionsOKBody get resource versions o k body
swagger:model GetResourceVersionsOKBody
*/
type GetResourceVersionsOKBody struct {

	// data
	// Required: true
	Data []*models.ResourceVersion `json:"data"`

	// pagination concourse
	// Required: true
	PaginationConcourse *models.PaginationConcourse `json:"pagination_concourse"`
}

// Validate validates this get resource versions o k body
func (o *GetResourceVersionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePaginationConcourse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourceVersionsOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getResourceVersionsOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getResourceVersionsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getResourceVersionsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetResourceVersionsOKBody) validatePaginationConcourse(formats strfmt.Registry) error {

	if err := validate.Required("getResourceVersionsOK"+"."+"pagination_concourse", "body", o.PaginationConcourse); err != nil {
		return err
	}

	if o.PaginationConcourse != nil {
		if err := o.PaginationConcourse.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getResourceVersionsOK" + "." + "pagination_concourse")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getResourceVersionsOK" + "." + "pagination_concourse")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get resource versions o k body based on the context it is used
func (o *GetResourceVersionsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePaginationConcourse(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetResourceVersionsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getResourceVersionsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getResourceVersionsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetResourceVersionsOKBody) contextValidatePaginationConcourse(ctx context.Context, formats strfmt.Registry) error {

	if o.PaginationConcourse != nil {

		if err := o.PaginationConcourse.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getResourceVersionsOK" + "." + "pagination_concourse")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getResourceVersionsOK" + "." + "pagination_concourse")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetResourceVersionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetResourceVersionsOKBody) UnmarshalBinary(b []byte) error {
	var res GetResourceVersionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
