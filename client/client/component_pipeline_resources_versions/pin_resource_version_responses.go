// Code generated by go-swagger; DO NOT EDIT.

package component_pipeline_resources_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// PinResourceVersionReader is a Reader for the PinResourceVersion structure.
type PinResourceVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PinResourceVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPinResourceVersionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPinResourceVersionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPinResourceVersionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPinResourceVersionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPinResourceVersionNoContent creates a PinResourceVersionNoContent with default headers values
func NewPinResourceVersionNoContent() *PinResourceVersionNoContent {
	return &PinResourceVersionNoContent{}
}

/*
PinResourceVersionNoContent describes a response with status code 204, with default header values.

Resource version has been pinned
*/
type PinResourceVersionNoContent struct {
}

// IsSuccess returns true when this pin resource version no content response has a 2xx status code
func (o *PinResourceVersionNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this pin resource version no content response has a 3xx status code
func (o *PinResourceVersionNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pin resource version no content response has a 4xx status code
func (o *PinResourceVersionNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this pin resource version no content response has a 5xx status code
func (o *PinResourceVersionNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this pin resource version no content response a status code equal to that given
func (o *PinResourceVersionNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the pin resource version no content response
func (o *PinResourceVersionNoContent) Code() int {
	return 204
}

func (o *PinResourceVersionNoContent) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/pin][%d] pinResourceVersionNoContent", 204)
}

func (o *PinResourceVersionNoContent) String() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/pin][%d] pinResourceVersionNoContent", 204)
}

func (o *PinResourceVersionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPinResourceVersionForbidden creates a PinResourceVersionForbidden with default headers values
func NewPinResourceVersionForbidden() *PinResourceVersionForbidden {
	return &PinResourceVersionForbidden{}
}

/*
PinResourceVersionForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type PinResourceVersionForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this pin resource version forbidden response has a 2xx status code
func (o *PinResourceVersionForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pin resource version forbidden response has a 3xx status code
func (o *PinResourceVersionForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pin resource version forbidden response has a 4xx status code
func (o *PinResourceVersionForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this pin resource version forbidden response has a 5xx status code
func (o *PinResourceVersionForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this pin resource version forbidden response a status code equal to that given
func (o *PinResourceVersionForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the pin resource version forbidden response
func (o *PinResourceVersionForbidden) Code() int {
	return 403
}

func (o *PinResourceVersionForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/pin][%d] pinResourceVersionForbidden %s", 403, payload)
}

func (o *PinResourceVersionForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/pin][%d] pinResourceVersionForbidden %s", 403, payload)
}

func (o *PinResourceVersionForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *PinResourceVersionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinResourceVersionNotFound creates a PinResourceVersionNotFound with default headers values
func NewPinResourceVersionNotFound() *PinResourceVersionNotFound {
	return &PinResourceVersionNotFound{}
}

/*
PinResourceVersionNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type PinResourceVersionNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this pin resource version not found response has a 2xx status code
func (o *PinResourceVersionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this pin resource version not found response has a 3xx status code
func (o *PinResourceVersionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this pin resource version not found response has a 4xx status code
func (o *PinResourceVersionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this pin resource version not found response has a 5xx status code
func (o *PinResourceVersionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this pin resource version not found response a status code equal to that given
func (o *PinResourceVersionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the pin resource version not found response
func (o *PinResourceVersionNotFound) Code() int {
	return 404
}

func (o *PinResourceVersionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/pin][%d] pinResourceVersionNotFound %s", 404, payload)
}

func (o *PinResourceVersionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/pin][%d] pinResourceVersionNotFound %s", 404, payload)
}

func (o *PinResourceVersionNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *PinResourceVersionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPinResourceVersionDefault creates a PinResourceVersionDefault with default headers values
func NewPinResourceVersionDefault(code int) *PinResourceVersionDefault {
	return &PinResourceVersionDefault{
		_statusCode: code,
	}
}

/*
PinResourceVersionDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type PinResourceVersionDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this pin resource version default response has a 2xx status code
func (o *PinResourceVersionDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this pin resource version default response has a 3xx status code
func (o *PinResourceVersionDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this pin resource version default response has a 4xx status code
func (o *PinResourceVersionDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this pin resource version default response has a 5xx status code
func (o *PinResourceVersionDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this pin resource version default response a status code equal to that given
func (o *PinResourceVersionDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the pin resource version default response
func (o *PinResourceVersionDefault) Code() int {
	return o._statusCode
}

func (o *PinResourceVersionDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/pin][%d] pinResourceVersion default %s", o._statusCode, payload)
}

func (o *PinResourceVersionDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/pin][%d] pinResourceVersion default %s", o._statusCode, payload)
}

func (o *PinResourceVersionDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *PinResourceVersionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
