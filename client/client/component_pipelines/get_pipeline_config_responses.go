// Code generated by go-swagger; DO NOT EDIT.

package component_pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetPipelineConfigReader is a Reader for the GetPipelineConfig structure.
type GetPipelineConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPipelineConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPipelineConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetPipelineConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPipelineConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetPipelineConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPipelineConfigOK creates a GetPipelineConfigOK with default headers values
func NewGetPipelineConfigOK() *GetPipelineConfigOK {
	return &GetPipelineConfigOK{}
}

/*
GetPipelineConfigOK describes a response with status code 200, with default header values.

This endpoint returns the config of the pipeline.
*/
type GetPipelineConfigOK struct {
	Payload *GetPipelineConfigOKBody
}

// IsSuccess returns true when this get pipeline config o k response has a 2xx status code
func (o *GetPipelineConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get pipeline config o k response has a 3xx status code
func (o *GetPipelineConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pipeline config o k response has a 4xx status code
func (o *GetPipelineConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get pipeline config o k response has a 5xx status code
func (o *GetPipelineConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get pipeline config o k response a status code equal to that given
func (o *GetPipelineConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get pipeline config o k response
func (o *GetPipelineConfigOK) Code() int {
	return 200
}

func (o *GetPipelineConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/config][%d] getPipelineConfigOK %s", 200, payload)
}

func (o *GetPipelineConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/config][%d] getPipelineConfigOK %s", 200, payload)
}

func (o *GetPipelineConfigOK) GetPayload() *GetPipelineConfigOKBody {
	return o.Payload
}

func (o *GetPipelineConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetPipelineConfigOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPipelineConfigForbidden creates a GetPipelineConfigForbidden with default headers values
func NewGetPipelineConfigForbidden() *GetPipelineConfigForbidden {
	return &GetPipelineConfigForbidden{}
}

/*
GetPipelineConfigForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetPipelineConfigForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get pipeline config forbidden response has a 2xx status code
func (o *GetPipelineConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pipeline config forbidden response has a 3xx status code
func (o *GetPipelineConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pipeline config forbidden response has a 4xx status code
func (o *GetPipelineConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pipeline config forbidden response has a 5xx status code
func (o *GetPipelineConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get pipeline config forbidden response a status code equal to that given
func (o *GetPipelineConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get pipeline config forbidden response
func (o *GetPipelineConfigForbidden) Code() int {
	return 403
}

func (o *GetPipelineConfigForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/config][%d] getPipelineConfigForbidden %s", 403, payload)
}

func (o *GetPipelineConfigForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/config][%d] getPipelineConfigForbidden %s", 403, payload)
}

func (o *GetPipelineConfigForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetPipelineConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPipelineConfigNotFound creates a GetPipelineConfigNotFound with default headers values
func NewGetPipelineConfigNotFound() *GetPipelineConfigNotFound {
	return &GetPipelineConfigNotFound{}
}

/*
GetPipelineConfigNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetPipelineConfigNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get pipeline config not found response has a 2xx status code
func (o *GetPipelineConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pipeline config not found response has a 3xx status code
func (o *GetPipelineConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pipeline config not found response has a 4xx status code
func (o *GetPipelineConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pipeline config not found response has a 5xx status code
func (o *GetPipelineConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get pipeline config not found response a status code equal to that given
func (o *GetPipelineConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get pipeline config not found response
func (o *GetPipelineConfigNotFound) Code() int {
	return 404
}

func (o *GetPipelineConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/config][%d] getPipelineConfigNotFound %s", 404, payload)
}

func (o *GetPipelineConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/config][%d] getPipelineConfigNotFound %s", 404, payload)
}

func (o *GetPipelineConfigNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetPipelineConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPipelineConfigDefault creates a GetPipelineConfigDefault with default headers values
func NewGetPipelineConfigDefault(code int) *GetPipelineConfigDefault {
	return &GetPipelineConfigDefault{
		_statusCode: code,
	}
}

/*
GetPipelineConfigDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetPipelineConfigDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get pipeline config default response has a 2xx status code
func (o *GetPipelineConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get pipeline config default response has a 3xx status code
func (o *GetPipelineConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get pipeline config default response has a 4xx status code
func (o *GetPipelineConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get pipeline config default response has a 5xx status code
func (o *GetPipelineConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get pipeline config default response a status code equal to that given
func (o *GetPipelineConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get pipeline config default response
func (o *GetPipelineConfigDefault) Code() int {
	return o._statusCode
}

func (o *GetPipelineConfigDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/config][%d] getPipelineConfig default %s", o._statusCode, payload)
}

func (o *GetPipelineConfigDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/config][%d] getPipelineConfig default %s", o._statusCode, payload)
}

func (o *GetPipelineConfigDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetPipelineConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetPipelineConfigOKBody get pipeline config o k body
swagger:model GetPipelineConfigOKBody
*/
type GetPipelineConfigOKBody struct {

	// data
	// Required: true
	Data *string `json:"data"`
}

// Validate validates this get pipeline config o k body
func (o *GetPipelineConfigOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPipelineConfigOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getPipelineConfigOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get pipeline config o k body based on context it is used
func (o *GetPipelineConfigOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPipelineConfigOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPipelineConfigOKBody) UnmarshalBinary(b []byte) error {
	var res GetPipelineConfigOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
