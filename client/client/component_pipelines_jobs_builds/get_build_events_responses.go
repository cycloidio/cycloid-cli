// Code generated by go-swagger; DO NOT EDIT.

package component_pipelines_jobs_builds

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetBuildEventsReader is a Reader for the GetBuildEvents structure.
type GetBuildEventsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBuildEventsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBuildEventsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetBuildEventsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBuildEventsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetBuildEventsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBuildEventsOK creates a GetBuildEventsOK with default headers values
func NewGetBuildEventsOK() *GetBuildEventsOK {
	return &GetBuildEventsOK{}
}

/*
GetBuildEventsOK describes a response with status code 200, with default header values.

Stream is starting
*/
type GetBuildEventsOK struct {
	ContentType string
}

// IsSuccess returns true when this get build events o k response has a 2xx status code
func (o *GetBuildEventsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get build events o k response has a 3xx status code
func (o *GetBuildEventsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build events o k response has a 4xx status code
func (o *GetBuildEventsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get build events o k response has a 5xx status code
func (o *GetBuildEventsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get build events o k response a status code equal to that given
func (o *GetBuildEventsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get build events o k response
func (o *GetBuildEventsOK) Code() int {
	return 200
}

func (o *GetBuildEventsOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/builds/{build_id}/events][%d] getBuildEventsOK", 200)
}

func (o *GetBuildEventsOK) String() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/builds/{build_id}/events][%d] getBuildEventsOK", 200)
}

func (o *GetBuildEventsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Type
	hdrContentType := response.GetHeader("Content-Type")

	if hdrContentType != "" {
		o.ContentType = hdrContentType
	}

	return nil
}

// NewGetBuildEventsForbidden creates a GetBuildEventsForbidden with default headers values
func NewGetBuildEventsForbidden() *GetBuildEventsForbidden {
	return &GetBuildEventsForbidden{}
}

/*
GetBuildEventsForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetBuildEventsForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get build events forbidden response has a 2xx status code
func (o *GetBuildEventsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get build events forbidden response has a 3xx status code
func (o *GetBuildEventsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build events forbidden response has a 4xx status code
func (o *GetBuildEventsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get build events forbidden response has a 5xx status code
func (o *GetBuildEventsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get build events forbidden response a status code equal to that given
func (o *GetBuildEventsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get build events forbidden response
func (o *GetBuildEventsForbidden) Code() int {
	return 403
}

func (o *GetBuildEventsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/builds/{build_id}/events][%d] getBuildEventsForbidden %s", 403, payload)
}

func (o *GetBuildEventsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/builds/{build_id}/events][%d] getBuildEventsForbidden %s", 403, payload)
}

func (o *GetBuildEventsForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetBuildEventsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildEventsNotFound creates a GetBuildEventsNotFound with default headers values
func NewGetBuildEventsNotFound() *GetBuildEventsNotFound {
	return &GetBuildEventsNotFound{}
}

/*
GetBuildEventsNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetBuildEventsNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get build events not found response has a 2xx status code
func (o *GetBuildEventsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get build events not found response has a 3xx status code
func (o *GetBuildEventsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build events not found response has a 4xx status code
func (o *GetBuildEventsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get build events not found response has a 5xx status code
func (o *GetBuildEventsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get build events not found response a status code equal to that given
func (o *GetBuildEventsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get build events not found response
func (o *GetBuildEventsNotFound) Code() int {
	return 404
}

func (o *GetBuildEventsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/builds/{build_id}/events][%d] getBuildEventsNotFound %s", 404, payload)
}

func (o *GetBuildEventsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/builds/{build_id}/events][%d] getBuildEventsNotFound %s", 404, payload)
}

func (o *GetBuildEventsNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetBuildEventsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildEventsDefault creates a GetBuildEventsDefault with default headers values
func NewGetBuildEventsDefault(code int) *GetBuildEventsDefault {
	return &GetBuildEventsDefault{
		_statusCode: code,
	}
}

/*
GetBuildEventsDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetBuildEventsDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get build events default response has a 2xx status code
func (o *GetBuildEventsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get build events default response has a 3xx status code
func (o *GetBuildEventsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get build events default response has a 4xx status code
func (o *GetBuildEventsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get build events default response has a 5xx status code
func (o *GetBuildEventsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get build events default response a status code equal to that given
func (o *GetBuildEventsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get build events default response
func (o *GetBuildEventsDefault) Code() int {
	return o._statusCode
}

func (o *GetBuildEventsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/builds/{build_id}/events][%d] getBuildEvents default %s", o._statusCode, payload)
}

func (o *GetBuildEventsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/pipelines/{inpath_pipeline_name}/builds/{build_id}/events][%d] getBuildEvents default %s", o._statusCode, payload)
}

func (o *GetBuildEventsDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetBuildEventsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
