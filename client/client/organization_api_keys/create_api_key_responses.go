// Code generated by go-swagger; DO NOT EDIT.

package organization_api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// CreateAPIKeyReader is a Reader for the CreateAPIKey structure.
type CreateAPIKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAPIKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAPIKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewCreateAPIKeyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 411:
		result := NewCreateAPIKeyLengthRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateAPIKeyUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateAPIKeyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateAPIKeyOK creates a CreateAPIKeyOK with default headers values
func NewCreateAPIKeyOK() *CreateAPIKeyOK {
	return &CreateAPIKeyOK{}
}

/*
CreateAPIKeyOK describes a response with status code 200, with default header values.

API key created. The body contains the information of the new API key of the organization.
*/
type CreateAPIKeyOK struct {
	Payload *CreateAPIKeyOKBody
}

// IsSuccess returns true when this create Api key o k response has a 2xx status code
func (o *CreateAPIKeyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create Api key o k response has a 3xx status code
func (o *CreateAPIKeyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Api key o k response has a 4xx status code
func (o *CreateAPIKeyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create Api key o k response has a 5xx status code
func (o *CreateAPIKeyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create Api key o k response a status code equal to that given
func (o *CreateAPIKeyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create Api key o k response
func (o *CreateAPIKeyOK) Code() int {
	return 200
}

func (o *CreateAPIKeyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createApiKeyOK %s", 200, payload)
}

func (o *CreateAPIKeyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createApiKeyOK %s", 200, payload)
}

func (o *CreateAPIKeyOK) GetPayload() *CreateAPIKeyOKBody {
	return o.Payload
}

func (o *CreateAPIKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateAPIKeyOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAPIKeyNotFound creates a CreateAPIKeyNotFound with default headers values
func NewCreateAPIKeyNotFound() *CreateAPIKeyNotFound {
	return &CreateAPIKeyNotFound{}
}

/*
CreateAPIKeyNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type CreateAPIKeyNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create Api key not found response has a 2xx status code
func (o *CreateAPIKeyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Api key not found response has a 3xx status code
func (o *CreateAPIKeyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Api key not found response has a 4xx status code
func (o *CreateAPIKeyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Api key not found response has a 5xx status code
func (o *CreateAPIKeyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create Api key not found response a status code equal to that given
func (o *CreateAPIKeyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create Api key not found response
func (o *CreateAPIKeyNotFound) Code() int {
	return 404
}

func (o *CreateAPIKeyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createApiKeyNotFound %s", 404, payload)
}

func (o *CreateAPIKeyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createApiKeyNotFound %s", 404, payload)
}

func (o *CreateAPIKeyNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateAPIKeyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAPIKeyLengthRequired creates a CreateAPIKeyLengthRequired with default headers values
func NewCreateAPIKeyLengthRequired() *CreateAPIKeyLengthRequired {
	return &CreateAPIKeyLengthRequired{}
}

/*
CreateAPIKeyLengthRequired describes a response with status code 411, with default header values.

The request has a body but it doesn't have a Content-Length header.
*/
type CreateAPIKeyLengthRequired struct {
}

// IsSuccess returns true when this create Api key length required response has a 2xx status code
func (o *CreateAPIKeyLengthRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Api key length required response has a 3xx status code
func (o *CreateAPIKeyLengthRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Api key length required response has a 4xx status code
func (o *CreateAPIKeyLengthRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Api key length required response has a 5xx status code
func (o *CreateAPIKeyLengthRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this create Api key length required response a status code equal to that given
func (o *CreateAPIKeyLengthRequired) IsCode(code int) bool {
	return code == 411
}

// Code gets the status code for the create Api key length required response
func (o *CreateAPIKeyLengthRequired) Code() int {
	return 411
}

func (o *CreateAPIKeyLengthRequired) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createApiKeyLengthRequired", 411)
}

func (o *CreateAPIKeyLengthRequired) String() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createApiKeyLengthRequired", 411)
}

func (o *CreateAPIKeyLengthRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAPIKeyUnprocessableEntity creates a CreateAPIKeyUnprocessableEntity with default headers values
func NewCreateAPIKeyUnprocessableEntity() *CreateAPIKeyUnprocessableEntity {
	return &CreateAPIKeyUnprocessableEntity{}
}

/*
CreateAPIKeyUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type CreateAPIKeyUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create Api key unprocessable entity response has a 2xx status code
func (o *CreateAPIKeyUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create Api key unprocessable entity response has a 3xx status code
func (o *CreateAPIKeyUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create Api key unprocessable entity response has a 4xx status code
func (o *CreateAPIKeyUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create Api key unprocessable entity response has a 5xx status code
func (o *CreateAPIKeyUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create Api key unprocessable entity response a status code equal to that given
func (o *CreateAPIKeyUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create Api key unprocessable entity response
func (o *CreateAPIKeyUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateAPIKeyUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createApiKeyUnprocessableEntity %s", 422, payload)
}

func (o *CreateAPIKeyUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createApiKeyUnprocessableEntity %s", 422, payload)
}

func (o *CreateAPIKeyUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateAPIKeyUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAPIKeyDefault creates a CreateAPIKeyDefault with default headers values
func NewCreateAPIKeyDefault(code int) *CreateAPIKeyDefault {
	return &CreateAPIKeyDefault{
		_statusCode: code,
	}
}

/*
CreateAPIKeyDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type CreateAPIKeyDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create API key default response has a 2xx status code
func (o *CreateAPIKeyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create API key default response has a 3xx status code
func (o *CreateAPIKeyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create API key default response has a 4xx status code
func (o *CreateAPIKeyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create API key default response has a 5xx status code
func (o *CreateAPIKeyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create API key default response a status code equal to that given
func (o *CreateAPIKeyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create API key default response
func (o *CreateAPIKeyDefault) Code() int {
	return o._statusCode
}

func (o *CreateAPIKeyDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createAPIKey default %s", o._statusCode, payload)
}

func (o *CreateAPIKeyDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/api_keys][%d] createAPIKey default %s", o._statusCode, payload)
}

func (o *CreateAPIKeyDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateAPIKeyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateAPIKeyOKBody create API key o k body
swagger:model CreateAPIKeyOKBody
*/
type CreateAPIKeyOKBody struct {

	// data
	// Required: true
	Data *models.APIKey `json:"data"`
}

// Validate validates this create API key o k body
func (o *CreateAPIKeyOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateAPIKeyOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("createApiKeyOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createApiKeyOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createApiKeyOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create API key o k body based on the context it is used
func (o *CreateAPIKeyOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateAPIKeyOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createApiKeyOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createApiKeyOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateAPIKeyOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateAPIKeyOKBody) UnmarshalBinary(b []byte) error {
	var res CreateAPIKeyOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
