// Code generated by go-swagger; DO NOT EDIT.

package organization_api_keys

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteAPIKeyParams creates a new DeleteAPIKeyParams object
// with the default values initialized.
func NewDeleteAPIKeyParams() *DeleteAPIKeyParams {
	var ()
	return &DeleteAPIKeyParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAPIKeyParamsWithTimeout creates a new DeleteAPIKeyParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteAPIKeyParamsWithTimeout(timeout time.Duration) *DeleteAPIKeyParams {
	var ()
	return &DeleteAPIKeyParams{

		timeout: timeout,
	}
}

// NewDeleteAPIKeyParamsWithContext creates a new DeleteAPIKeyParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteAPIKeyParamsWithContext(ctx context.Context) *DeleteAPIKeyParams {
	var ()
	return &DeleteAPIKeyParams{

		Context: ctx,
	}
}

// NewDeleteAPIKeyParamsWithHTTPClient creates a new DeleteAPIKeyParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteAPIKeyParamsWithHTTPClient(client *http.Client) *DeleteAPIKeyParams {
	var ()
	return &DeleteAPIKeyParams{
		HTTPClient: client,
	}
}

/*DeleteAPIKeyParams contains all the parameters to send to the API endpoint
for the delete API key operation typically these are written to a http.Request
*/
type DeleteAPIKeyParams struct {

	/*APIKeyCanonical
	  A canonical of an API key.

	*/
	APIKeyCanonical string
	/*OrganizationCanonical
	  A canonical of an organization.

	*/
	OrganizationCanonical string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete API key params
func (o *DeleteAPIKeyParams) WithTimeout(timeout time.Duration) *DeleteAPIKeyParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete API key params
func (o *DeleteAPIKeyParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete API key params
func (o *DeleteAPIKeyParams) WithContext(ctx context.Context) *DeleteAPIKeyParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete API key params
func (o *DeleteAPIKeyParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete API key params
func (o *DeleteAPIKeyParams) WithHTTPClient(client *http.Client) *DeleteAPIKeyParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete API key params
func (o *DeleteAPIKeyParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIKeyCanonical adds the aPIKeyCanonical to the delete API key params
func (o *DeleteAPIKeyParams) WithAPIKeyCanonical(aPIKeyCanonical string) *DeleteAPIKeyParams {
	o.SetAPIKeyCanonical(aPIKeyCanonical)
	return o
}

// SetAPIKeyCanonical adds the apiKeyCanonical to the delete API key params
func (o *DeleteAPIKeyParams) SetAPIKeyCanonical(aPIKeyCanonical string) {
	o.APIKeyCanonical = aPIKeyCanonical
}

// WithOrganizationCanonical adds the organizationCanonical to the delete API key params
func (o *DeleteAPIKeyParams) WithOrganizationCanonical(organizationCanonical string) *DeleteAPIKeyParams {
	o.SetOrganizationCanonical(organizationCanonical)
	return o
}

// SetOrganizationCanonical adds the organizationCanonical to the delete API key params
func (o *DeleteAPIKeyParams) SetOrganizationCanonical(organizationCanonical string) {
	o.OrganizationCanonical = organizationCanonical
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAPIKeyParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param api_key_canonical
	if err := r.SetPathParam("api_key_canonical", o.APIKeyCanonical); err != nil {
		return err
	}

	// path param organization_canonical
	if err := r.SetPathParam("organization_canonical", o.OrganizationCanonical); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
