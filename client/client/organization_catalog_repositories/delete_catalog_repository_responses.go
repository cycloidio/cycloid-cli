// Code generated by go-swagger; DO NOT EDIT.

package organization_catalog_repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// DeleteCatalogRepositoryReader is a Reader for the DeleteCatalogRepository structure.
type DeleteCatalogRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCatalogRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteCatalogRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteCatalogRepositoryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteCatalogRepositoryNoContent creates a DeleteCatalogRepositoryNoContent with default headers values
func NewDeleteCatalogRepositoryNoContent() *DeleteCatalogRepositoryNoContent {
	return &DeleteCatalogRepositoryNoContent{}
}

/*DeleteCatalogRepositoryNoContent handles this case with default header values.

Organization Catalog Repositories has been deleted
*/
type DeleteCatalogRepositoryNoContent struct {
}

func (o *DeleteCatalogRepositoryNoContent) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/catalog_repositories/{catalog_repository_canonical}][%d] deleteCatalogRepositoryNoContent ", 204)
}

func (o *DeleteCatalogRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCatalogRepositoryDefault creates a DeleteCatalogRepositoryDefault with default headers values
func NewDeleteCatalogRepositoryDefault(code int) *DeleteCatalogRepositoryDefault {
	return &DeleteCatalogRepositoryDefault{
		_statusCode: code,
	}
}

/*DeleteCatalogRepositoryDefault handles this case with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type DeleteCatalogRepositoryDefault struct {
	_statusCode int

	Payload *models.ErrorPayload
}

// Code gets the status code for the delete catalog repository default response
func (o *DeleteCatalogRepositoryDefault) Code() int {
	return o._statusCode
}

func (o *DeleteCatalogRepositoryDefault) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/catalog_repositories/{catalog_repository_canonical}][%d] deleteCatalogRepository default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteCatalogRepositoryDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteCatalogRepositoryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
