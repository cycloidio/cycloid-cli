// Code generated by go-swagger; DO NOT EDIT.

package organization_catalog_repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// ValidateCatalogRepositoryReader is a Reader for the ValidateCatalogRepository structure.
type ValidateCatalogRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateCatalogRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewValidateCatalogRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewValidateCatalogRepositoryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateCatalogRepositoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 411:
		result := NewValidateCatalogRepositoryLengthRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewValidateCatalogRepositoryUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewValidateCatalogRepositoryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewValidateCatalogRepositoryNoContent creates a ValidateCatalogRepositoryNoContent with default headers values
func NewValidateCatalogRepositoryNoContent() *ValidateCatalogRepositoryNoContent {
	return &ValidateCatalogRepositoryNoContent{}
}

/*ValidateCatalogRepositoryNoContent handles this case with default header values.

The catalog repository has been validated
*/
type ValidateCatalogRepositoryNoContent struct {
}

func (o *ValidateCatalogRepositoryNoContent) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/catalog_repositories/{catalog_repository_canonical}/validate][%d] validateCatalogRepositoryNoContent ", 204)
}

func (o *ValidateCatalogRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateCatalogRepositoryForbidden creates a ValidateCatalogRepositoryForbidden with default headers values
func NewValidateCatalogRepositoryForbidden() *ValidateCatalogRepositoryForbidden {
	return &ValidateCatalogRepositoryForbidden{}
}

/*ValidateCatalogRepositoryForbidden handles this case with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type ValidateCatalogRepositoryForbidden struct {
	Payload *models.ErrorPayload
}

func (o *ValidateCatalogRepositoryForbidden) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/catalog_repositories/{catalog_repository_canonical}/validate][%d] validateCatalogRepositoryForbidden  %+v", 403, o.Payload)
}

func (o *ValidateCatalogRepositoryForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateCatalogRepositoryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateCatalogRepositoryNotFound creates a ValidateCatalogRepositoryNotFound with default headers values
func NewValidateCatalogRepositoryNotFound() *ValidateCatalogRepositoryNotFound {
	return &ValidateCatalogRepositoryNotFound{}
}

/*ValidateCatalogRepositoryNotFound handles this case with default header values.

The response sent when any of the entities present in the path is not found.
*/
type ValidateCatalogRepositoryNotFound struct {
	Payload *models.ErrorPayload
}

func (o *ValidateCatalogRepositoryNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/catalog_repositories/{catalog_repository_canonical}/validate][%d] validateCatalogRepositoryNotFound  %+v", 404, o.Payload)
}

func (o *ValidateCatalogRepositoryNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateCatalogRepositoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateCatalogRepositoryLengthRequired creates a ValidateCatalogRepositoryLengthRequired with default headers values
func NewValidateCatalogRepositoryLengthRequired() *ValidateCatalogRepositoryLengthRequired {
	return &ValidateCatalogRepositoryLengthRequired{}
}

/*ValidateCatalogRepositoryLengthRequired handles this case with default header values.

The request has a body but it doesn't have a Content-Length header.
*/
type ValidateCatalogRepositoryLengthRequired struct {
}

func (o *ValidateCatalogRepositoryLengthRequired) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/catalog_repositories/{catalog_repository_canonical}/validate][%d] validateCatalogRepositoryLengthRequired ", 411)
}

func (o *ValidateCatalogRepositoryLengthRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateCatalogRepositoryUnprocessableEntity creates a ValidateCatalogRepositoryUnprocessableEntity with default headers values
func NewValidateCatalogRepositoryUnprocessableEntity() *ValidateCatalogRepositoryUnprocessableEntity {
	return &ValidateCatalogRepositoryUnprocessableEntity{}
}

/*ValidateCatalogRepositoryUnprocessableEntity handles this case with default header values.

All the custom errors that are generated from the Cycloid API
*/
type ValidateCatalogRepositoryUnprocessableEntity struct {
	Payload *models.ErrorPayload
}

func (o *ValidateCatalogRepositoryUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/catalog_repositories/{catalog_repository_canonical}/validate][%d] validateCatalogRepositoryUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ValidateCatalogRepositoryUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateCatalogRepositoryUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateCatalogRepositoryDefault creates a ValidateCatalogRepositoryDefault with default headers values
func NewValidateCatalogRepositoryDefault(code int) *ValidateCatalogRepositoryDefault {
	return &ValidateCatalogRepositoryDefault{
		_statusCode: code,
	}
}

/*ValidateCatalogRepositoryDefault handles this case with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type ValidateCatalogRepositoryDefault struct {
	_statusCode int

	Payload *models.ErrorPayload
}

// Code gets the status code for the validate catalog repository default response
func (o *ValidateCatalogRepositoryDefault) Code() int {
	return o._statusCode
}

func (o *ValidateCatalogRepositoryDefault) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/catalog_repositories/{catalog_repository_canonical}/validate][%d] validateCatalogRepository default  %+v", o._statusCode, o.Payload)
}

func (o *ValidateCatalogRepositoryDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateCatalogRepositoryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
