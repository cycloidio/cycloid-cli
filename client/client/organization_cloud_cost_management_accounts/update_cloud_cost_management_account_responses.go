// Code generated by go-swagger; DO NOT EDIT.

package organization_cloud_cost_management_accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// UpdateCloudCostManagementAccountReader is a Reader for the UpdateCloudCostManagementAccount structure.
type UpdateCloudCostManagementAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCloudCostManagementAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCloudCostManagementAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateCloudCostManagementAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCloudCostManagementAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateCloudCostManagementAccountUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateCloudCostManagementAccountDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateCloudCostManagementAccountOK creates a UpdateCloudCostManagementAccountOK with default headers values
func NewUpdateCloudCostManagementAccountOK() *UpdateCloudCostManagementAccountOK {
	return &UpdateCloudCostManagementAccountOK{}
}

/*
UpdateCloudCostManagementAccountOK describes a response with status code 200, with default header values.

CloudCostManagementAccount updated.
*/
type UpdateCloudCostManagementAccountOK struct {
	Payload *UpdateCloudCostManagementAccountOKBody
}

// IsSuccess returns true when this update cloud cost management account o k response has a 2xx status code
func (o *UpdateCloudCostManagementAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cloud cost management account o k response has a 3xx status code
func (o *UpdateCloudCostManagementAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cloud cost management account o k response has a 4xx status code
func (o *UpdateCloudCostManagementAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cloud cost management account o k response has a 5xx status code
func (o *UpdateCloudCostManagementAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cloud cost management account o k response a status code equal to that given
func (o *UpdateCloudCostManagementAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cloud cost management account o k response
func (o *UpdateCloudCostManagementAccountOK) Code() int {
	return 200
}

func (o *UpdateCloudCostManagementAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccountOK %s", 200, payload)
}

func (o *UpdateCloudCostManagementAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccountOK %s", 200, payload)
}

func (o *UpdateCloudCostManagementAccountOK) GetPayload() *UpdateCloudCostManagementAccountOKBody {
	return o.Payload
}

func (o *UpdateCloudCostManagementAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateCloudCostManagementAccountOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCloudCostManagementAccountForbidden creates a UpdateCloudCostManagementAccountForbidden with default headers values
func NewUpdateCloudCostManagementAccountForbidden() *UpdateCloudCostManagementAccountForbidden {
	return &UpdateCloudCostManagementAccountForbidden{}
}

/*
UpdateCloudCostManagementAccountForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type UpdateCloudCostManagementAccountForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this update cloud cost management account forbidden response has a 2xx status code
func (o *UpdateCloudCostManagementAccountForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cloud cost management account forbidden response has a 3xx status code
func (o *UpdateCloudCostManagementAccountForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cloud cost management account forbidden response has a 4xx status code
func (o *UpdateCloudCostManagementAccountForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cloud cost management account forbidden response has a 5xx status code
func (o *UpdateCloudCostManagementAccountForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cloud cost management account forbidden response a status code equal to that given
func (o *UpdateCloudCostManagementAccountForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cloud cost management account forbidden response
func (o *UpdateCloudCostManagementAccountForbidden) Code() int {
	return 403
}

func (o *UpdateCloudCostManagementAccountForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccountForbidden %s", 403, payload)
}

func (o *UpdateCloudCostManagementAccountForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccountForbidden %s", 403, payload)
}

func (o *UpdateCloudCostManagementAccountForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateCloudCostManagementAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCloudCostManagementAccountNotFound creates a UpdateCloudCostManagementAccountNotFound with default headers values
func NewUpdateCloudCostManagementAccountNotFound() *UpdateCloudCostManagementAccountNotFound {
	return &UpdateCloudCostManagementAccountNotFound{}
}

/*
UpdateCloudCostManagementAccountNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type UpdateCloudCostManagementAccountNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this update cloud cost management account not found response has a 2xx status code
func (o *UpdateCloudCostManagementAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cloud cost management account not found response has a 3xx status code
func (o *UpdateCloudCostManagementAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cloud cost management account not found response has a 4xx status code
func (o *UpdateCloudCostManagementAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cloud cost management account not found response has a 5xx status code
func (o *UpdateCloudCostManagementAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cloud cost management account not found response a status code equal to that given
func (o *UpdateCloudCostManagementAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update cloud cost management account not found response
func (o *UpdateCloudCostManagementAccountNotFound) Code() int {
	return 404
}

func (o *UpdateCloudCostManagementAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccountNotFound %s", 404, payload)
}

func (o *UpdateCloudCostManagementAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccountNotFound %s", 404, payload)
}

func (o *UpdateCloudCostManagementAccountNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateCloudCostManagementAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCloudCostManagementAccountUnprocessableEntity creates a UpdateCloudCostManagementAccountUnprocessableEntity with default headers values
func NewUpdateCloudCostManagementAccountUnprocessableEntity() *UpdateCloudCostManagementAccountUnprocessableEntity {
	return &UpdateCloudCostManagementAccountUnprocessableEntity{}
}

/*
UpdateCloudCostManagementAccountUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type UpdateCloudCostManagementAccountUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this update cloud cost management account unprocessable entity response has a 2xx status code
func (o *UpdateCloudCostManagementAccountUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cloud cost management account unprocessable entity response has a 3xx status code
func (o *UpdateCloudCostManagementAccountUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cloud cost management account unprocessable entity response has a 4xx status code
func (o *UpdateCloudCostManagementAccountUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cloud cost management account unprocessable entity response has a 5xx status code
func (o *UpdateCloudCostManagementAccountUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update cloud cost management account unprocessable entity response a status code equal to that given
func (o *UpdateCloudCostManagementAccountUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update cloud cost management account unprocessable entity response
func (o *UpdateCloudCostManagementAccountUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateCloudCostManagementAccountUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccountUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCloudCostManagementAccountUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccountUnprocessableEntity %s", 422, payload)
}

func (o *UpdateCloudCostManagementAccountUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateCloudCostManagementAccountUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCloudCostManagementAccountDefault creates a UpdateCloudCostManagementAccountDefault with default headers values
func NewUpdateCloudCostManagementAccountDefault(code int) *UpdateCloudCostManagementAccountDefault {
	return &UpdateCloudCostManagementAccountDefault{
		_statusCode: code,
	}
}

/*
UpdateCloudCostManagementAccountDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type UpdateCloudCostManagementAccountDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this update cloud cost management account default response has a 2xx status code
func (o *UpdateCloudCostManagementAccountDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update cloud cost management account default response has a 3xx status code
func (o *UpdateCloudCostManagementAccountDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update cloud cost management account default response has a 4xx status code
func (o *UpdateCloudCostManagementAccountDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update cloud cost management account default response has a 5xx status code
func (o *UpdateCloudCostManagementAccountDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update cloud cost management account default response a status code equal to that given
func (o *UpdateCloudCostManagementAccountDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update cloud cost management account default response
func (o *UpdateCloudCostManagementAccountDefault) Code() int {
	return o._statusCode
}

func (o *UpdateCloudCostManagementAccountDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccount default %s", o._statusCode, payload)
}

func (o *UpdateCloudCostManagementAccountDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/cloud_cost_management/accounts/{cloud_cost_management_account_canonical}][%d] updateCloudCostManagementAccount default %s", o._statusCode, payload)
}

func (o *UpdateCloudCostManagementAccountDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateCloudCostManagementAccountDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
UpdateCloudCostManagementAccountOKBody update cloud cost management account o k body
swagger:model UpdateCloudCostManagementAccountOKBody
*/
type UpdateCloudCostManagementAccountOKBody struct {

	// data
	// Required: true
	Data *models.CloudCostManagementAccount `json:"data"`
}

// Validate validates this update cloud cost management account o k body
func (o *UpdateCloudCostManagementAccountOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateCloudCostManagementAccountOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("updateCloudCostManagementAccountOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updateCloudCostManagementAccountOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("updateCloudCostManagementAccountOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this update cloud cost management account o k body based on the context it is used
func (o *UpdateCloudCostManagementAccountOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateCloudCostManagementAccountOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updateCloudCostManagementAccountOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("updateCloudCostManagementAccountOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateCloudCostManagementAccountOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateCloudCostManagementAccountOKBody) UnmarshalBinary(b []byte) error {
	var res UpdateCloudCostManagementAccountOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
