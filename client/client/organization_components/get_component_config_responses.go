// Code generated by go-swagger; DO NOT EDIT.

package organization_components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetComponentConfigReader is a Reader for the GetComponentConfig structure.
type GetComponentConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComponentConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComponentConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetComponentConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetComponentConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetComponentConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetComponentConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetComponentConfigOK creates a GetComponentConfigOK with default headers values
func NewGetComponentConfigOK() *GetComponentConfigOK {
	return &GetComponentConfigOK{}
}

/*
GetComponentConfigOK describes a response with status code 200, with default header values.

Config that's used by the component
*/
type GetComponentConfigOK struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *GetComponentConfigOKBody
}

// IsSuccess returns true when this get component config o k response has a 2xx status code
func (o *GetComponentConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get component config o k response has a 3xx status code
func (o *GetComponentConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config o k response has a 4xx status code
func (o *GetComponentConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component config o k response has a 5xx status code
func (o *GetComponentConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get component config o k response a status code equal to that given
func (o *GetComponentConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get component config o k response
func (o *GetComponentConfigOK) Code() int {
	return 200
}

func (o *GetComponentConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfigOK %s", 200, payload)
}

func (o *GetComponentConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfigOK %s", 200, payload)
}

func (o *GetComponentConfigOK) GetPayload() *GetComponentConfigOKBody {
	return o.Payload
}

func (o *GetComponentConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(GetComponentConfigOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentConfigForbidden creates a GetComponentConfigForbidden with default headers values
func NewGetComponentConfigForbidden() *GetComponentConfigForbidden {
	return &GetComponentConfigForbidden{}
}

/*
GetComponentConfigForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetComponentConfigForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component config forbidden response has a 2xx status code
func (o *GetComponentConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component config forbidden response has a 3xx status code
func (o *GetComponentConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config forbidden response has a 4xx status code
func (o *GetComponentConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component config forbidden response has a 5xx status code
func (o *GetComponentConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get component config forbidden response a status code equal to that given
func (o *GetComponentConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get component config forbidden response
func (o *GetComponentConfigForbidden) Code() int {
	return 403
}

func (o *GetComponentConfigForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfigForbidden %s", 403, payload)
}

func (o *GetComponentConfigForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfigForbidden %s", 403, payload)
}

func (o *GetComponentConfigForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentConfigNotFound creates a GetComponentConfigNotFound with default headers values
func NewGetComponentConfigNotFound() *GetComponentConfigNotFound {
	return &GetComponentConfigNotFound{}
}

/*
GetComponentConfigNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetComponentConfigNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component config not found response has a 2xx status code
func (o *GetComponentConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component config not found response has a 3xx status code
func (o *GetComponentConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config not found response has a 4xx status code
func (o *GetComponentConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component config not found response has a 5xx status code
func (o *GetComponentConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get component config not found response a status code equal to that given
func (o *GetComponentConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get component config not found response
func (o *GetComponentConfigNotFound) Code() int {
	return 404
}

func (o *GetComponentConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfigNotFound %s", 404, payload)
}

func (o *GetComponentConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfigNotFound %s", 404, payload)
}

func (o *GetComponentConfigNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentConfigUnprocessableEntity creates a GetComponentConfigUnprocessableEntity with default headers values
func NewGetComponentConfigUnprocessableEntity() *GetComponentConfigUnprocessableEntity {
	return &GetComponentConfigUnprocessableEntity{}
}

/*
GetComponentConfigUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type GetComponentConfigUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component config unprocessable entity response has a 2xx status code
func (o *GetComponentConfigUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component config unprocessable entity response has a 3xx status code
func (o *GetComponentConfigUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component config unprocessable entity response has a 4xx status code
func (o *GetComponentConfigUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component config unprocessable entity response has a 5xx status code
func (o *GetComponentConfigUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get component config unprocessable entity response a status code equal to that given
func (o *GetComponentConfigUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get component config unprocessable entity response
func (o *GetComponentConfigUnprocessableEntity) Code() int {
	return 422
}

func (o *GetComponentConfigUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfigUnprocessableEntity %s", 422, payload)
}

func (o *GetComponentConfigUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfigUnprocessableEntity %s", 422, payload)
}

func (o *GetComponentConfigUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentConfigDefault creates a GetComponentConfigDefault with default headers values
func NewGetComponentConfigDefault(code int) *GetComponentConfigDefault {
	return &GetComponentConfigDefault{
		_statusCode: code,
	}
}

/*
GetComponentConfigDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetComponentConfigDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component config default response has a 2xx status code
func (o *GetComponentConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get component config default response has a 3xx status code
func (o *GetComponentConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get component config default response has a 4xx status code
func (o *GetComponentConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get component config default response has a 5xx status code
func (o *GetComponentConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get component config default response a status code equal to that given
func (o *GetComponentConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get component config default response
func (o *GetComponentConfigDefault) Code() int {
	return o._statusCode
}

func (o *GetComponentConfigDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfig default %s", o._statusCode, payload)
}

func (o *GetComponentConfigDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/config][%d] getComponentConfig default %s", o._statusCode, payload)
}

func (o *GetComponentConfigDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetComponentConfigOKBody get component config o k body
swagger:model GetComponentConfigOKBody
*/
type GetComponentConfigOKBody struct {

	// data
	Data models.FormVariables `json:"data,omitempty"`
}

// Validate validates this get component config o k body
func (o *GetComponentConfigOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetComponentConfigOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getComponentConfigOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getComponentConfigOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get component config o k body based on the context it is used
func (o *GetComponentConfigOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetComponentConfigOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if err := o.Data.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("getComponentConfigOK" + "." + "data")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("getComponentConfigOK" + "." + "data")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetComponentConfigOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetComponentConfigOKBody) UnmarshalBinary(b []byte) error {
	var res GetComponentConfigOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
