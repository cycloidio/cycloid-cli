// Code generated by go-swagger; DO NOT EDIT.

package organization_components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetComponentInfrastructureReader is a Reader for the GetComponentInfrastructure structure.
type GetComponentInfrastructureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComponentInfrastructureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComponentInfrastructureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetComponentInfrastructureForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetComponentInfrastructureNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetComponentInfrastructureDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetComponentInfrastructureOK creates a GetComponentInfrastructureOK with default headers values
func NewGetComponentInfrastructureOK() *GetComponentInfrastructureOK {
	return &GetComponentInfrastructureOK{}
}

/*
GetComponentInfrastructureOK describes a response with status code 200, with default header values.

The infrastructure of the Component
*/
type GetComponentInfrastructureOK struct {
	Payload *GetComponentInfrastructureOKBody
}

// IsSuccess returns true when this get component infrastructure o k response has a 2xx status code
func (o *GetComponentInfrastructureOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get component infrastructure o k response has a 3xx status code
func (o *GetComponentInfrastructureOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component infrastructure o k response has a 4xx status code
func (o *GetComponentInfrastructureOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component infrastructure o k response has a 5xx status code
func (o *GetComponentInfrastructureOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get component infrastructure o k response a status code equal to that given
func (o *GetComponentInfrastructureOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get component infrastructure o k response
func (o *GetComponentInfrastructureOK) Code() int {
	return 200
}

func (o *GetComponentInfrastructureOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/infrastructure][%d] getComponentInfrastructureOK %s", 200, payload)
}

func (o *GetComponentInfrastructureOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/infrastructure][%d] getComponentInfrastructureOK %s", 200, payload)
}

func (o *GetComponentInfrastructureOK) GetPayload() *GetComponentInfrastructureOKBody {
	return o.Payload
}

func (o *GetComponentInfrastructureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetComponentInfrastructureOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentInfrastructureForbidden creates a GetComponentInfrastructureForbidden with default headers values
func NewGetComponentInfrastructureForbidden() *GetComponentInfrastructureForbidden {
	return &GetComponentInfrastructureForbidden{}
}

/*
GetComponentInfrastructureForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetComponentInfrastructureForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component infrastructure forbidden response has a 2xx status code
func (o *GetComponentInfrastructureForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component infrastructure forbidden response has a 3xx status code
func (o *GetComponentInfrastructureForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component infrastructure forbidden response has a 4xx status code
func (o *GetComponentInfrastructureForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component infrastructure forbidden response has a 5xx status code
func (o *GetComponentInfrastructureForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get component infrastructure forbidden response a status code equal to that given
func (o *GetComponentInfrastructureForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get component infrastructure forbidden response
func (o *GetComponentInfrastructureForbidden) Code() int {
	return 403
}

func (o *GetComponentInfrastructureForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/infrastructure][%d] getComponentInfrastructureForbidden %s", 403, payload)
}

func (o *GetComponentInfrastructureForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/infrastructure][%d] getComponentInfrastructureForbidden %s", 403, payload)
}

func (o *GetComponentInfrastructureForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentInfrastructureForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentInfrastructureNotFound creates a GetComponentInfrastructureNotFound with default headers values
func NewGetComponentInfrastructureNotFound() *GetComponentInfrastructureNotFound {
	return &GetComponentInfrastructureNotFound{}
}

/*
GetComponentInfrastructureNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetComponentInfrastructureNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component infrastructure not found response has a 2xx status code
func (o *GetComponentInfrastructureNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component infrastructure not found response has a 3xx status code
func (o *GetComponentInfrastructureNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component infrastructure not found response has a 4xx status code
func (o *GetComponentInfrastructureNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component infrastructure not found response has a 5xx status code
func (o *GetComponentInfrastructureNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get component infrastructure not found response a status code equal to that given
func (o *GetComponentInfrastructureNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get component infrastructure not found response
func (o *GetComponentInfrastructureNotFound) Code() int {
	return 404
}

func (o *GetComponentInfrastructureNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/infrastructure][%d] getComponentInfrastructureNotFound %s", 404, payload)
}

func (o *GetComponentInfrastructureNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/infrastructure][%d] getComponentInfrastructureNotFound %s", 404, payload)
}

func (o *GetComponentInfrastructureNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentInfrastructureNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentInfrastructureDefault creates a GetComponentInfrastructureDefault with default headers values
func NewGetComponentInfrastructureDefault(code int) *GetComponentInfrastructureDefault {
	return &GetComponentInfrastructureDefault{
		_statusCode: code,
	}
}

/*
GetComponentInfrastructureDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetComponentInfrastructureDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component infrastructure default response has a 2xx status code
func (o *GetComponentInfrastructureDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get component infrastructure default response has a 3xx status code
func (o *GetComponentInfrastructureDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get component infrastructure default response has a 4xx status code
func (o *GetComponentInfrastructureDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get component infrastructure default response has a 5xx status code
func (o *GetComponentInfrastructureDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get component infrastructure default response a status code equal to that given
func (o *GetComponentInfrastructureDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get component infrastructure default response
func (o *GetComponentInfrastructureDefault) Code() int {
	return o._statusCode
}

func (o *GetComponentInfrastructureDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/infrastructure][%d] getComponentInfrastructure default %s", o._statusCode, payload)
}

func (o *GetComponentInfrastructureDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}/infrastructure][%d] getComponentInfrastructure default %s", o._statusCode, payload)
}

func (o *GetComponentInfrastructureDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentInfrastructureDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetComponentInfrastructureOKBody get component infrastructure o k body
swagger:model GetComponentInfrastructureOKBody
*/
type GetComponentInfrastructureOKBody struct {

	// data
	// Required: true
	Data *models.Infrastructure `json:"data"`
}

// Validate validates this get component infrastructure o k body
func (o *GetComponentInfrastructureOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetComponentInfrastructureOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getComponentInfrastructureOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getComponentInfrastructureOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getComponentInfrastructureOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get component infrastructure o k body based on the context it is used
func (o *GetComponentInfrastructureOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetComponentInfrastructureOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getComponentInfrastructureOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getComponentInfrastructureOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetComponentInfrastructureOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetComponentInfrastructureOKBody) UnmarshalBinary(b []byte) error {
	var res GetComponentInfrastructureOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
