// Code generated by go-swagger; DO NOT EDIT.

package organization_components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetComponentReader is a Reader for the GetComponent structure.
type GetComponentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetComponentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetComponentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetComponentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetComponentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetComponentUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetComponentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetComponentOK creates a GetComponentOK with default headers values
func NewGetComponentOK() *GetComponentOK {
	return &GetComponentOK{}
}

/*
GetComponentOK describes a response with status code 200, with default header values.

Component
*/
type GetComponentOK struct {
	Payload *GetComponentOKBody
}

// IsSuccess returns true when this get component o k response has a 2xx status code
func (o *GetComponentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get component o k response has a 3xx status code
func (o *GetComponentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component o k response has a 4xx status code
func (o *GetComponentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get component o k response has a 5xx status code
func (o *GetComponentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get component o k response a status code equal to that given
func (o *GetComponentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get component o k response
func (o *GetComponentOK) Code() int {
	return 200
}

func (o *GetComponentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponentOK %s", 200, payload)
}

func (o *GetComponentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponentOK %s", 200, payload)
}

func (o *GetComponentOK) GetPayload() *GetComponentOKBody {
	return o.Payload
}

func (o *GetComponentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetComponentOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentForbidden creates a GetComponentForbidden with default headers values
func NewGetComponentForbidden() *GetComponentForbidden {
	return &GetComponentForbidden{}
}

/*
GetComponentForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetComponentForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component forbidden response has a 2xx status code
func (o *GetComponentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component forbidden response has a 3xx status code
func (o *GetComponentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component forbidden response has a 4xx status code
func (o *GetComponentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component forbidden response has a 5xx status code
func (o *GetComponentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get component forbidden response a status code equal to that given
func (o *GetComponentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get component forbidden response
func (o *GetComponentForbidden) Code() int {
	return 403
}

func (o *GetComponentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponentForbidden %s", 403, payload)
}

func (o *GetComponentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponentForbidden %s", 403, payload)
}

func (o *GetComponentForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentNotFound creates a GetComponentNotFound with default headers values
func NewGetComponentNotFound() *GetComponentNotFound {
	return &GetComponentNotFound{}
}

/*
GetComponentNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetComponentNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component not found response has a 2xx status code
func (o *GetComponentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component not found response has a 3xx status code
func (o *GetComponentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component not found response has a 4xx status code
func (o *GetComponentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component not found response has a 5xx status code
func (o *GetComponentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get component not found response a status code equal to that given
func (o *GetComponentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get component not found response
func (o *GetComponentNotFound) Code() int {
	return 404
}

func (o *GetComponentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponentNotFound %s", 404, payload)
}

func (o *GetComponentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponentNotFound %s", 404, payload)
}

func (o *GetComponentNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentUnprocessableEntity creates a GetComponentUnprocessableEntity with default headers values
func NewGetComponentUnprocessableEntity() *GetComponentUnprocessableEntity {
	return &GetComponentUnprocessableEntity{}
}

/*
GetComponentUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type GetComponentUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component unprocessable entity response has a 2xx status code
func (o *GetComponentUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get component unprocessable entity response has a 3xx status code
func (o *GetComponentUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get component unprocessable entity response has a 4xx status code
func (o *GetComponentUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get component unprocessable entity response has a 5xx status code
func (o *GetComponentUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get component unprocessable entity response a status code equal to that given
func (o *GetComponentUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get component unprocessable entity response
func (o *GetComponentUnprocessableEntity) Code() int {
	return 422
}

func (o *GetComponentUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponentUnprocessableEntity %s", 422, payload)
}

func (o *GetComponentUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponentUnprocessableEntity %s", 422, payload)
}

func (o *GetComponentUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentDefault creates a GetComponentDefault with default headers values
func NewGetComponentDefault(code int) *GetComponentDefault {
	return &GetComponentDefault{
		_statusCode: code,
	}
}

/*
GetComponentDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetComponentDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get component default response has a 2xx status code
func (o *GetComponentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get component default response has a 3xx status code
func (o *GetComponentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get component default response has a 4xx status code
func (o *GetComponentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get component default response has a 5xx status code
func (o *GetComponentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get component default response a status code equal to that given
func (o *GetComponentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get component default response
func (o *GetComponentDefault) Code() int {
	return o._statusCode
}

func (o *GetComponentDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponent default %s", o._statusCode, payload)
}

func (o *GetComponentDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/components/{component_canonical}][%d] getComponent default %s", o._statusCode, payload)
}

func (o *GetComponentDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetComponentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetComponentOKBody get component o k body
swagger:model GetComponentOKBody
*/
type GetComponentOKBody struct {

	// data
	// Required: true
	Data *models.Component `json:"data"`
}

// Validate validates this get component o k body
func (o *GetComponentOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetComponentOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getComponentOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getComponentOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getComponentOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get component o k body based on the context it is used
func (o *GetComponentOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetComponentOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getComponentOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getComponentOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetComponentOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetComponentOKBody) UnmarshalBinary(b []byte) error {
	var res GetComponentOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
