// Code generated by go-swagger; DO NOT EDIT.

package organization_config_repositories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// DeleteConfigRepositoryReader is a Reader for the DeleteConfigRepository structure.
type DeleteConfigRepositoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteConfigRepositoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteConfigRepositoryNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteConfigRepositoryDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteConfigRepositoryNoContent creates a DeleteConfigRepositoryNoContent with default headers values
func NewDeleteConfigRepositoryNoContent() *DeleteConfigRepositoryNoContent {
	return &DeleteConfigRepositoryNoContent{}
}

/*
DeleteConfigRepositoryNoContent describes a response with status code 204, with default header values.

Organization Config repository has been deleted
*/
type DeleteConfigRepositoryNoContent struct {
}

// IsSuccess returns true when this delete config repository no content response has a 2xx status code
func (o *DeleteConfigRepositoryNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete config repository no content response has a 3xx status code
func (o *DeleteConfigRepositoryNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete config repository no content response has a 4xx status code
func (o *DeleteConfigRepositoryNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete config repository no content response has a 5xx status code
func (o *DeleteConfigRepositoryNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete config repository no content response a status code equal to that given
func (o *DeleteConfigRepositoryNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete config repository no content response
func (o *DeleteConfigRepositoryNoContent) Code() int {
	return 204
}

func (o *DeleteConfigRepositoryNoContent) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/config_repositories/{config_repository_canonical}][%d] deleteConfigRepositoryNoContent", 204)
}

func (o *DeleteConfigRepositoryNoContent) String() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/config_repositories/{config_repository_canonical}][%d] deleteConfigRepositoryNoContent", 204)
}

func (o *DeleteConfigRepositoryNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteConfigRepositoryDefault creates a DeleteConfigRepositoryDefault with default headers values
func NewDeleteConfigRepositoryDefault(code int) *DeleteConfigRepositoryDefault {
	return &DeleteConfigRepositoryDefault{
		_statusCode: code,
	}
}

/*
DeleteConfigRepositoryDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type DeleteConfigRepositoryDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this delete config repository default response has a 2xx status code
func (o *DeleteConfigRepositoryDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete config repository default response has a 3xx status code
func (o *DeleteConfigRepositoryDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete config repository default response has a 4xx status code
func (o *DeleteConfigRepositoryDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete config repository default response has a 5xx status code
func (o *DeleteConfigRepositoryDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete config repository default response a status code equal to that given
func (o *DeleteConfigRepositoryDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete config repository default response
func (o *DeleteConfigRepositoryDefault) Code() int {
	return o._statusCode
}

func (o *DeleteConfigRepositoryDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/config_repositories/{config_repository_canonical}][%d] deleteConfigRepository default %s", o._statusCode, payload)
}

func (o *DeleteConfigRepositoryDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/config_repositories/{config_repository_canonical}][%d] deleteConfigRepository default %s", o._statusCode, payload)
}

func (o *DeleteConfigRepositoryDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteConfigRepositoryDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
