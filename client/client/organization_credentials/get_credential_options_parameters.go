// Code generated by go-swagger; DO NOT EDIT.

package organization_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCredentialOptionsParams creates a new GetCredentialOptionsParams object
// with the default values initialized.
func NewGetCredentialOptionsParams() *GetCredentialOptionsParams {
	var ()
	return &GetCredentialOptionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCredentialOptionsParamsWithTimeout creates a new GetCredentialOptionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCredentialOptionsParamsWithTimeout(timeout time.Duration) *GetCredentialOptionsParams {
	var ()
	return &GetCredentialOptionsParams{

		timeout: timeout,
	}
}

// NewGetCredentialOptionsParamsWithContext creates a new GetCredentialOptionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCredentialOptionsParamsWithContext(ctx context.Context) *GetCredentialOptionsParams {
	var ()
	return &GetCredentialOptionsParams{

		Context: ctx,
	}
}

// NewGetCredentialOptionsParamsWithHTTPClient creates a new GetCredentialOptionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCredentialOptionsParamsWithHTTPClient(client *http.Client) *GetCredentialOptionsParams {
	var ()
	return &GetCredentialOptionsParams{
		HTTPClient: client,
	}
}

/*GetCredentialOptionsParams contains all the parameters to send to the API endpoint
for the get credential options operation typically these are written to a http.Request
*/
type GetCredentialOptionsParams struct {

	/*CredentialCanonical
	  A Credential canonical

	*/
	CredentialCanonical string
	/*OrganizationCanonical
	  A canonical of an organization.

	*/
	OrganizationCanonical string
	/*Service*/
	Service string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get credential options params
func (o *GetCredentialOptionsParams) WithTimeout(timeout time.Duration) *GetCredentialOptionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get credential options params
func (o *GetCredentialOptionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get credential options params
func (o *GetCredentialOptionsParams) WithContext(ctx context.Context) *GetCredentialOptionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get credential options params
func (o *GetCredentialOptionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get credential options params
func (o *GetCredentialOptionsParams) WithHTTPClient(client *http.Client) *GetCredentialOptionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get credential options params
func (o *GetCredentialOptionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCredentialCanonical adds the credentialCanonical to the get credential options params
func (o *GetCredentialOptionsParams) WithCredentialCanonical(credentialCanonical string) *GetCredentialOptionsParams {
	o.SetCredentialCanonical(credentialCanonical)
	return o
}

// SetCredentialCanonical adds the credentialCanonical to the get credential options params
func (o *GetCredentialOptionsParams) SetCredentialCanonical(credentialCanonical string) {
	o.CredentialCanonical = credentialCanonical
}

// WithOrganizationCanonical adds the organizationCanonical to the get credential options params
func (o *GetCredentialOptionsParams) WithOrganizationCanonical(organizationCanonical string) *GetCredentialOptionsParams {
	o.SetOrganizationCanonical(organizationCanonical)
	return o
}

// SetOrganizationCanonical adds the organizationCanonical to the get credential options params
func (o *GetCredentialOptionsParams) SetOrganizationCanonical(organizationCanonical string) {
	o.OrganizationCanonical = organizationCanonical
}

// WithService adds the service to the get credential options params
func (o *GetCredentialOptionsParams) WithService(service string) *GetCredentialOptionsParams {
	o.SetService(service)
	return o
}

// SetService adds the service to the get credential options params
func (o *GetCredentialOptionsParams) SetService(service string) {
	o.Service = service
}

// WriteToRequest writes these params to a swagger request
func (o *GetCredentialOptionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param credential_canonical
	if err := r.SetPathParam("credential_canonical", o.CredentialCanonical); err != nil {
		return err
	}

	// path param organization_canonical
	if err := r.SetPathParam("organization_canonical", o.OrganizationCanonical); err != nil {
		return err
	}

	// query param service
	qrService := o.Service
	qService := qrService
	if qService != "" {
		if err := r.SetQueryParam("service", qService); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
