// Code generated by go-swagger; DO NOT EDIT.

package organization_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// GetCredentialOptionsReader is a Reader for the GetCredentialOptions structure.
type GetCredentialOptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCredentialOptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCredentialOptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetCredentialOptionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCredentialOptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetCredentialOptionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCredentialOptionsOK creates a GetCredentialOptionsOK with default headers values
func NewGetCredentialOptionsOK() *GetCredentialOptionsOK {
	return &GetCredentialOptionsOK{}
}

/*GetCredentialOptionsOK handles this case with default header values.

Service-specific options for the Credential with the specified ID.
*/
type GetCredentialOptionsOK struct {
	Payload *GetCredentialOptionsOKBody
}

func (o *GetCredentialOptionsOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/credentials/{credential_canonical}/options][%d] getCredentialOptionsOK  %+v", 200, o.Payload)
}

func (o *GetCredentialOptionsOK) GetPayload() *GetCredentialOptionsOKBody {
	return o.Payload
}

func (o *GetCredentialOptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCredentialOptionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialOptionsForbidden creates a GetCredentialOptionsForbidden with default headers values
func NewGetCredentialOptionsForbidden() *GetCredentialOptionsForbidden {
	return &GetCredentialOptionsForbidden{}
}

/*GetCredentialOptionsForbidden handles this case with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetCredentialOptionsForbidden struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

func (o *GetCredentialOptionsForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/credentials/{credential_canonical}/options][%d] getCredentialOptionsForbidden  %+v", 403, o.Payload)
}

func (o *GetCredentialOptionsForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetCredentialOptionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialOptionsNotFound creates a GetCredentialOptionsNotFound with default headers values
func NewGetCredentialOptionsNotFound() *GetCredentialOptionsNotFound {
	return &GetCredentialOptionsNotFound{}
}

/*GetCredentialOptionsNotFound handles this case with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetCredentialOptionsNotFound struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

func (o *GetCredentialOptionsNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/credentials/{credential_canonical}/options][%d] getCredentialOptionsNotFound  %+v", 404, o.Payload)
}

func (o *GetCredentialOptionsNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetCredentialOptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCredentialOptionsDefault creates a GetCredentialOptionsDefault with default headers values
func NewGetCredentialOptionsDefault(code int) *GetCredentialOptionsDefault {
	return &GetCredentialOptionsDefault{
		_statusCode: code,
	}
}

/*GetCredentialOptionsDefault handles this case with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetCredentialOptionsDefault struct {
	_statusCode int

	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

// Code gets the status code for the get credential options default response
func (o *GetCredentialOptionsDefault) Code() int {
	return o._statusCode
}

func (o *GetCredentialOptionsDefault) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/credentials/{credential_canonical}/options][%d] getCredentialOptions default  %+v", o._statusCode, o.Payload)
}

func (o *GetCredentialOptionsDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetCredentialOptionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCredentialOptionsOKBody get credential options o k body
swagger:model GetCredentialOptionsOKBody
*/
type GetCredentialOptionsOKBody struct {

	// The credential options. The shape of the items could be anything,  since each service can have very different options.
	// Required: true
	Data interface{} `json:"data"`
}

// Validate validates this get credential options o k body
func (o *GetCredentialOptionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetCredentialOptionsOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getCredentialOptionsOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetCredentialOptionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCredentialOptionsOKBody) UnmarshalBinary(b []byte) error {
	var res GetCredentialOptionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
