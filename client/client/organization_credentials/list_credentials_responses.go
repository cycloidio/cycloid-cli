// Code generated by go-swagger; DO NOT EDIT.

package organization_credentials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// ListCredentialsReader is a Reader for the ListCredentials structure.
type ListCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewListCredentialsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListCredentialsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewListCredentialsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListCredentialsOK creates a ListCredentialsOK with default headers values
func NewListCredentialsOK() *ListCredentialsOK {
	return &ListCredentialsOK{}
}

/*ListCredentialsOK handles this case with default header values.

List of the Credentials
*/
type ListCredentialsOK struct {
	Payload *ListCredentialsOKBody
}

func (o *ListCredentialsOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/credentials][%d] listCredentialsOK  %+v", 200, o.Payload)
}

func (o *ListCredentialsOK) GetPayload() *ListCredentialsOKBody {
	return o.Payload
}

func (o *ListCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListCredentialsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCredentialsForbidden creates a ListCredentialsForbidden with default headers values
func NewListCredentialsForbidden() *ListCredentialsForbidden {
	return &ListCredentialsForbidden{}
}

/*ListCredentialsForbidden handles this case with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type ListCredentialsForbidden struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

func (o *ListCredentialsForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/credentials][%d] listCredentialsForbidden  %+v", 403, o.Payload)
}

func (o *ListCredentialsForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ListCredentialsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCredentialsNotFound creates a ListCredentialsNotFound with default headers values
func NewListCredentialsNotFound() *ListCredentialsNotFound {
	return &ListCredentialsNotFound{}
}

/*ListCredentialsNotFound handles this case with default header values.

The response sent when any of the entities present in the path is not found.
*/
type ListCredentialsNotFound struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

func (o *ListCredentialsNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/credentials][%d] listCredentialsNotFound  %+v", 404, o.Payload)
}

func (o *ListCredentialsNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ListCredentialsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCredentialsDefault creates a ListCredentialsDefault with default headers values
func NewListCredentialsDefault(code int) *ListCredentialsDefault {
	return &ListCredentialsDefault{
		_statusCode: code,
	}
}

/*ListCredentialsDefault handles this case with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type ListCredentialsDefault struct {
	_statusCode int

	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

// Code gets the status code for the list credentials default response
func (o *ListCredentialsDefault) Code() int {
	return o._statusCode
}

func (o *ListCredentialsDefault) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/credentials][%d] listCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *ListCredentialsDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ListCredentialsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ListCredentialsOKBody list credentials o k body
swagger:model ListCredentialsOKBody
*/
type ListCredentialsOKBody struct {

	// data
	// Required: true
	Data []*models.CredentialSimple `json:"data"`

	// pagination
	// Required: true
	Pagination *models.Pagination `json:"pagination"`
}

// Validate validates this list credentials o k body
func (o *ListCredentialsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePagination(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListCredentialsOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("listCredentialsOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listCredentialsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *ListCredentialsOKBody) validatePagination(formats strfmt.Registry) error {

	if err := validate.Required("listCredentialsOK"+"."+"pagination", "body", o.Pagination); err != nil {
		return err
	}

	if o.Pagination != nil {
		if err := o.Pagination.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("listCredentialsOK" + "." + "pagination")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListCredentialsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListCredentialsOKBody) UnmarshalBinary(b []byte) error {
	var res ListCredentialsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
