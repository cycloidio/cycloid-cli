// Code generated by go-swagger; DO NOT EDIT.

package organization_forms

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// InterpolateFormsConfigReader is a Reader for the InterpolateFormsConfig structure.
type InterpolateFormsConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InterpolateFormsConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInterpolateFormsConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewInterpolateFormsConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInterpolateFormsConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewInterpolateFormsConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewInterpolateFormsConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewInterpolateFormsConfigOK creates a InterpolateFormsConfigOK with default headers values
func NewInterpolateFormsConfigOK() *InterpolateFormsConfigOK {
	return &InterpolateFormsConfigOK{}
}

/*
InterpolateFormsConfigOK describes a response with status code 200, with default header values.

Configuration generated based on the forms input
*/
type InterpolateFormsConfigOK struct {
	Payload *InterpolateFormsConfigOKBody
}

// IsSuccess returns true when this interpolate forms config o k response has a 2xx status code
func (o *InterpolateFormsConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this interpolate forms config o k response has a 3xx status code
func (o *InterpolateFormsConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this interpolate forms config o k response has a 4xx status code
func (o *InterpolateFormsConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this interpolate forms config o k response has a 5xx status code
func (o *InterpolateFormsConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this interpolate forms config o k response a status code equal to that given
func (o *InterpolateFormsConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the interpolate forms config o k response
func (o *InterpolateFormsConfigOK) Code() int {
	return 200
}

func (o *InterpolateFormsConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfigOK %s", 200, payload)
}

func (o *InterpolateFormsConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfigOK %s", 200, payload)
}

func (o *InterpolateFormsConfigOK) GetPayload() *InterpolateFormsConfigOKBody {
	return o.Payload
}

func (o *InterpolateFormsConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(InterpolateFormsConfigOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInterpolateFormsConfigForbidden creates a InterpolateFormsConfigForbidden with default headers values
func NewInterpolateFormsConfigForbidden() *InterpolateFormsConfigForbidden {
	return &InterpolateFormsConfigForbidden{}
}

/*
InterpolateFormsConfigForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type InterpolateFormsConfigForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this interpolate forms config forbidden response has a 2xx status code
func (o *InterpolateFormsConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this interpolate forms config forbidden response has a 3xx status code
func (o *InterpolateFormsConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this interpolate forms config forbidden response has a 4xx status code
func (o *InterpolateFormsConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this interpolate forms config forbidden response has a 5xx status code
func (o *InterpolateFormsConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this interpolate forms config forbidden response a status code equal to that given
func (o *InterpolateFormsConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the interpolate forms config forbidden response
func (o *InterpolateFormsConfigForbidden) Code() int {
	return 403
}

func (o *InterpolateFormsConfigForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfigForbidden %s", 403, payload)
}

func (o *InterpolateFormsConfigForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfigForbidden %s", 403, payload)
}

func (o *InterpolateFormsConfigForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *InterpolateFormsConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInterpolateFormsConfigNotFound creates a InterpolateFormsConfigNotFound with default headers values
func NewInterpolateFormsConfigNotFound() *InterpolateFormsConfigNotFound {
	return &InterpolateFormsConfigNotFound{}
}

/*
InterpolateFormsConfigNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type InterpolateFormsConfigNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this interpolate forms config not found response has a 2xx status code
func (o *InterpolateFormsConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this interpolate forms config not found response has a 3xx status code
func (o *InterpolateFormsConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this interpolate forms config not found response has a 4xx status code
func (o *InterpolateFormsConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this interpolate forms config not found response has a 5xx status code
func (o *InterpolateFormsConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this interpolate forms config not found response a status code equal to that given
func (o *InterpolateFormsConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the interpolate forms config not found response
func (o *InterpolateFormsConfigNotFound) Code() int {
	return 404
}

func (o *InterpolateFormsConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfigNotFound %s", 404, payload)
}

func (o *InterpolateFormsConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfigNotFound %s", 404, payload)
}

func (o *InterpolateFormsConfigNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *InterpolateFormsConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInterpolateFormsConfigUnprocessableEntity creates a InterpolateFormsConfigUnprocessableEntity with default headers values
func NewInterpolateFormsConfigUnprocessableEntity() *InterpolateFormsConfigUnprocessableEntity {
	return &InterpolateFormsConfigUnprocessableEntity{}
}

/*
InterpolateFormsConfigUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type InterpolateFormsConfigUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this interpolate forms config unprocessable entity response has a 2xx status code
func (o *InterpolateFormsConfigUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this interpolate forms config unprocessable entity response has a 3xx status code
func (o *InterpolateFormsConfigUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this interpolate forms config unprocessable entity response has a 4xx status code
func (o *InterpolateFormsConfigUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this interpolate forms config unprocessable entity response has a 5xx status code
func (o *InterpolateFormsConfigUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this interpolate forms config unprocessable entity response a status code equal to that given
func (o *InterpolateFormsConfigUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the interpolate forms config unprocessable entity response
func (o *InterpolateFormsConfigUnprocessableEntity) Code() int {
	return 422
}

func (o *InterpolateFormsConfigUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfigUnprocessableEntity %s", 422, payload)
}

func (o *InterpolateFormsConfigUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfigUnprocessableEntity %s", 422, payload)
}

func (o *InterpolateFormsConfigUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *InterpolateFormsConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInterpolateFormsConfigDefault creates a InterpolateFormsConfigDefault with default headers values
func NewInterpolateFormsConfigDefault(code int) *InterpolateFormsConfigDefault {
	return &InterpolateFormsConfigDefault{
		_statusCode: code,
	}
}

/*
InterpolateFormsConfigDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type InterpolateFormsConfigDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this interpolate forms config default response has a 2xx status code
func (o *InterpolateFormsConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this interpolate forms config default response has a 3xx status code
func (o *InterpolateFormsConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this interpolate forms config default response has a 4xx status code
func (o *InterpolateFormsConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this interpolate forms config default response has a 5xx status code
func (o *InterpolateFormsConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this interpolate forms config default response a status code equal to that given
func (o *InterpolateFormsConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the interpolate forms config default response
func (o *InterpolateFormsConfigDefault) Code() int {
	return o._statusCode
}

func (o *InterpolateFormsConfigDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfig default %s", o._statusCode, payload)
}

func (o *InterpolateFormsConfigDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/forms/config][%d] interpolateFormsConfig default %s", o._statusCode, payload)
}

func (o *InterpolateFormsConfigDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *InterpolateFormsConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
InterpolateFormsConfigBody interpolate forms config body
swagger:model InterpolateFormsConfigBody
*/
type InterpolateFormsConfigBody struct {

	// component canonical
	// Required: true
	// Max Length: 100
	// Min Length: 1
	// Pattern: ^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$
	ComponentCanonical *string `json:"component_canonical"`

	// It's the ref of the Stack, like 'cycloidio:stack-magento'
	// Required: true
	ServiceCatalogRef *string `json:"service_catalog_ref"`

	// use case
	// Required: true
	// Max Length: 100
	// Min Length: 1
	// Pattern: (^[a-z0-9]+(([a-z0-9\-_]+)?[a-z0-9]+)?$)
	UseCase *string `json:"use_case"`

	// vars
	// Required: true
	Vars models.FormVariables `json:"vars"`
}

// Validate validates this interpolate forms config body
func (o *InterpolateFormsConfigBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComponentCanonical(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateServiceCatalogRef(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUseCase(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateVars(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InterpolateFormsConfigBody) validateComponentCanonical(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"component_canonical", "body", o.ComponentCanonical); err != nil {
		return err
	}

	if err := validate.MinLength("body"+"."+"component_canonical", "body", *o.ComponentCanonical, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("body"+"."+"component_canonical", "body", *o.ComponentCanonical, 100); err != nil {
		return err
	}

	if err := validate.Pattern("body"+"."+"component_canonical", "body", *o.ComponentCanonical, `^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$`); err != nil {
		return err
	}

	return nil
}

func (o *InterpolateFormsConfigBody) validateServiceCatalogRef(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"service_catalog_ref", "body", o.ServiceCatalogRef); err != nil {
		return err
	}

	return nil
}

func (o *InterpolateFormsConfigBody) validateUseCase(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"use_case", "body", o.UseCase); err != nil {
		return err
	}

	if err := validate.MinLength("body"+"."+"use_case", "body", *o.UseCase, 1); err != nil {
		return err
	}

	if err := validate.MaxLength("body"+"."+"use_case", "body", *o.UseCase, 100); err != nil {
		return err
	}

	if err := validate.Pattern("body"+"."+"use_case", "body", *o.UseCase, `(^[a-z0-9]+(([a-z0-9\-_]+)?[a-z0-9]+)?$)`); err != nil {
		return err
	}

	return nil
}

func (o *InterpolateFormsConfigBody) validateVars(formats strfmt.Registry) error {

	if err := validate.Required("body"+"."+"vars", "body", o.Vars); err != nil {
		return err
	}

	if o.Vars != nil {
		if err := o.Vars.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "vars")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("body" + "." + "vars")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this interpolate forms config body based on the context it is used
func (o *InterpolateFormsConfigBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateVars(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InterpolateFormsConfigBody) contextValidateVars(ctx context.Context, formats strfmt.Registry) error {

	if err := o.Vars.ContextValidate(ctx, formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("body" + "." + "vars")
		} else if ce, ok := err.(*errors.CompositeError); ok {
			return ce.ValidateName("body" + "." + "vars")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InterpolateFormsConfigBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InterpolateFormsConfigBody) UnmarshalBinary(b []byte) error {
	var res InterpolateFormsConfigBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
InterpolateFormsConfigOKBody interpolate forms config o k body
swagger:model InterpolateFormsConfigOKBody
*/
type InterpolateFormsConfigOKBody struct {

	// data
	// Required: true
	Data *models.ServiceCatalogConfig `json:"data"`
}

// Validate validates this interpolate forms config o k body
func (o *InterpolateFormsConfigOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InterpolateFormsConfigOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("interpolateFormsConfigOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("interpolateFormsConfigOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("interpolateFormsConfigOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this interpolate forms config o k body based on the context it is used
func (o *InterpolateFormsConfigOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InterpolateFormsConfigOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("interpolateFormsConfigOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("interpolateFormsConfigOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InterpolateFormsConfigOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InterpolateFormsConfigOKBody) UnmarshalBinary(b []byte) error {
	var res InterpolateFormsConfigOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
