// Code generated by go-swagger; DO NOT EDIT.

package organization_infrastructure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetRunningInfraAWSImagesReader is a Reader for the GetRunningInfraAWSImages structure.
type GetRunningInfraAWSImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunningInfraAWSImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunningInfraAWSImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetRunningInfraAWSImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunningInfraAWSImagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetRunningInfraAWSImagesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetRunningInfraAWSImagesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRunningInfraAWSImagesOK creates a GetRunningInfraAWSImagesOK with default headers values
func NewGetRunningInfraAWSImagesOK() *GetRunningInfraAWSImagesOK {
	return &GetRunningInfraAWSImagesOK{}
}

/*
GetRunningInfraAWSImagesOK describes a response with status code 200, with default header values.

The list of AWS images which matches the scope specified by the filter.
*/
type GetRunningInfraAWSImagesOK struct {
	Payload *GetRunningInfraAWSImagesOKBody
}

// IsSuccess returns true when this get running infra a w s images o k response has a 2xx status code
func (o *GetRunningInfraAWSImagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get running infra a w s images o k response has a 3xx status code
func (o *GetRunningInfraAWSImagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get running infra a w s images o k response has a 4xx status code
func (o *GetRunningInfraAWSImagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get running infra a w s images o k response has a 5xx status code
func (o *GetRunningInfraAWSImagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get running infra a w s images o k response a status code equal to that given
func (o *GetRunningInfraAWSImagesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get running infra a w s images o k response
func (o *GetRunningInfraAWSImagesOK) Code() int {
	return 200
}

func (o *GetRunningInfraAWSImagesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImagesOK %s", 200, payload)
}

func (o *GetRunningInfraAWSImagesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImagesOK %s", 200, payload)
}

func (o *GetRunningInfraAWSImagesOK) GetPayload() *GetRunningInfraAWSImagesOKBody {
	return o.Payload
}

func (o *GetRunningInfraAWSImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetRunningInfraAWSImagesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunningInfraAWSImagesForbidden creates a GetRunningInfraAWSImagesForbidden with default headers values
func NewGetRunningInfraAWSImagesForbidden() *GetRunningInfraAWSImagesForbidden {
	return &GetRunningInfraAWSImagesForbidden{}
}

/*
GetRunningInfraAWSImagesForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetRunningInfraAWSImagesForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get running infra a w s images forbidden response has a 2xx status code
func (o *GetRunningInfraAWSImagesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get running infra a w s images forbidden response has a 3xx status code
func (o *GetRunningInfraAWSImagesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get running infra a w s images forbidden response has a 4xx status code
func (o *GetRunningInfraAWSImagesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get running infra a w s images forbidden response has a 5xx status code
func (o *GetRunningInfraAWSImagesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get running infra a w s images forbidden response a status code equal to that given
func (o *GetRunningInfraAWSImagesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get running infra a w s images forbidden response
func (o *GetRunningInfraAWSImagesForbidden) Code() int {
	return 403
}

func (o *GetRunningInfraAWSImagesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImagesForbidden %s", 403, payload)
}

func (o *GetRunningInfraAWSImagesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImagesForbidden %s", 403, payload)
}

func (o *GetRunningInfraAWSImagesForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetRunningInfraAWSImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunningInfraAWSImagesNotFound creates a GetRunningInfraAWSImagesNotFound with default headers values
func NewGetRunningInfraAWSImagesNotFound() *GetRunningInfraAWSImagesNotFound {
	return &GetRunningInfraAWSImagesNotFound{}
}

/*
GetRunningInfraAWSImagesNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetRunningInfraAWSImagesNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get running infra a w s images not found response has a 2xx status code
func (o *GetRunningInfraAWSImagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get running infra a w s images not found response has a 3xx status code
func (o *GetRunningInfraAWSImagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get running infra a w s images not found response has a 4xx status code
func (o *GetRunningInfraAWSImagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get running infra a w s images not found response has a 5xx status code
func (o *GetRunningInfraAWSImagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get running infra a w s images not found response a status code equal to that given
func (o *GetRunningInfraAWSImagesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get running infra a w s images not found response
func (o *GetRunningInfraAWSImagesNotFound) Code() int {
	return 404
}

func (o *GetRunningInfraAWSImagesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImagesNotFound %s", 404, payload)
}

func (o *GetRunningInfraAWSImagesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImagesNotFound %s", 404, payload)
}

func (o *GetRunningInfraAWSImagesNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetRunningInfraAWSImagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunningInfraAWSImagesUnprocessableEntity creates a GetRunningInfraAWSImagesUnprocessableEntity with default headers values
func NewGetRunningInfraAWSImagesUnprocessableEntity() *GetRunningInfraAWSImagesUnprocessableEntity {
	return &GetRunningInfraAWSImagesUnprocessableEntity{}
}

/*
GetRunningInfraAWSImagesUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type GetRunningInfraAWSImagesUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get running infra a w s images unprocessable entity response has a 2xx status code
func (o *GetRunningInfraAWSImagesUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get running infra a w s images unprocessable entity response has a 3xx status code
func (o *GetRunningInfraAWSImagesUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get running infra a w s images unprocessable entity response has a 4xx status code
func (o *GetRunningInfraAWSImagesUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get running infra a w s images unprocessable entity response has a 5xx status code
func (o *GetRunningInfraAWSImagesUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get running infra a w s images unprocessable entity response a status code equal to that given
func (o *GetRunningInfraAWSImagesUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get running infra a w s images unprocessable entity response
func (o *GetRunningInfraAWSImagesUnprocessableEntity) Code() int {
	return 422
}

func (o *GetRunningInfraAWSImagesUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImagesUnprocessableEntity %s", 422, payload)
}

func (o *GetRunningInfraAWSImagesUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImagesUnprocessableEntity %s", 422, payload)
}

func (o *GetRunningInfraAWSImagesUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetRunningInfraAWSImagesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunningInfraAWSImagesDefault creates a GetRunningInfraAWSImagesDefault with default headers values
func NewGetRunningInfraAWSImagesDefault(code int) *GetRunningInfraAWSImagesDefault {
	return &GetRunningInfraAWSImagesDefault{
		_statusCode: code,
	}
}

/*
GetRunningInfraAWSImagesDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetRunningInfraAWSImagesDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get running infra a w s images default response has a 2xx status code
func (o *GetRunningInfraAWSImagesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get running infra a w s images default response has a 3xx status code
func (o *GetRunningInfraAWSImagesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get running infra a w s images default response has a 4xx status code
func (o *GetRunningInfraAWSImagesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get running infra a w s images default response has a 5xx status code
func (o *GetRunningInfraAWSImagesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get running infra a w s images default response a status code equal to that given
func (o *GetRunningInfraAWSImagesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get running infra a w s images default response
func (o *GetRunningInfraAWSImagesDefault) Code() int {
	return o._statusCode
}

func (o *GetRunningInfraAWSImagesDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImages default %s", o._statusCode, payload)
}

func (o *GetRunningInfraAWSImagesDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/infrastructures/aws/images][%d] getRunningInfraAWSImages default %s", o._statusCode, payload)
}

func (o *GetRunningInfraAWSImagesDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetRunningInfraAWSImagesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetRunningInfraAWSImagesOKBody Although this response contains a collection of items, it doesn't have pagination because the AWS SDK, to request the images resources, doesn't provide any pagination mechanism.
swagger:model GetRunningInfraAWSImagesOKBody
*/
type GetRunningInfraAWSImagesOKBody struct {

	// data
	// Required: true
	Data []models.AWSInfrastructureResourceImage `json:"data"`
}

// Validate validates this get running infra a w s images o k body
func (o *GetRunningInfraAWSImagesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetRunningInfraAWSImagesOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getRunningInfraAWSImagesOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this get running infra a w s images o k body based on context it is used
func (o *GetRunningInfraAWSImagesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetRunningInfraAWSImagesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetRunningInfraAWSImagesOKBody) UnmarshalBinary(b []byte) error {
	var res GetRunningInfraAWSImagesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
