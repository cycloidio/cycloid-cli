// Code generated by go-swagger; DO NOT EDIT.

package organization_infrastructure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetRunningInfraAWSParams creates a new GetRunningInfraAWSParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRunningInfraAWSParams() *GetRunningInfraAWSParams {
	return &GetRunningInfraAWSParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRunningInfraAWSParamsWithTimeout creates a new GetRunningInfraAWSParams object
// with the ability to set a timeout on a request.
func NewGetRunningInfraAWSParamsWithTimeout(timeout time.Duration) *GetRunningInfraAWSParams {
	return &GetRunningInfraAWSParams{
		timeout: timeout,
	}
}

// NewGetRunningInfraAWSParamsWithContext creates a new GetRunningInfraAWSParams object
// with the ability to set a context for a request.
func NewGetRunningInfraAWSParamsWithContext(ctx context.Context) *GetRunningInfraAWSParams {
	return &GetRunningInfraAWSParams{
		Context: ctx,
	}
}

// NewGetRunningInfraAWSParamsWithHTTPClient creates a new GetRunningInfraAWSParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRunningInfraAWSParamsWithHTTPClient(client *http.Client) *GetRunningInfraAWSParams {
	return &GetRunningInfraAWSParams{
		HTTPClient: client,
	}
}

/*
GetRunningInfraAWSParams contains all the parameters to send to the API endpoint

	for the get running infra a w s operation.

	Typically these are written to a http.Request.
*/
type GetRunningInfraAWSParams struct {

	/* CredentialCanonical.

	   A Credential canonical
	*/
	CredentialCanonical string

	/* OrganizationCanonical.

	   A canonical of an organization.
	*/
	OrganizationCanonical string

	/* ProjectCanonical.

	   A list of projects' canonical to filter from
	*/
	ProjectCanonical *string

	/* Resource.

	   Supported AWS type of resource to query. The parameter can be specified several times in order to request for different kind of resources.
	*/
	Resource []string

	/* Tag.

	   An amazon tag, represented as `key|value` and where `key` or `value` could be omitted but not both, in order to select resources which has a `key` or a `value` whatever is its counterpart. `key` nor `value` can contains the `|` character. The parameter can be specified several times in order to request resources which match with at least one of the `tag|value` pairs
	*/
	Tag []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get running infra a w s params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRunningInfraAWSParams) WithDefaults() *GetRunningInfraAWSParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get running infra a w s params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRunningInfraAWSParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get running infra a w s params
func (o *GetRunningInfraAWSParams) WithTimeout(timeout time.Duration) *GetRunningInfraAWSParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get running infra a w s params
func (o *GetRunningInfraAWSParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get running infra a w s params
func (o *GetRunningInfraAWSParams) WithContext(ctx context.Context) *GetRunningInfraAWSParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get running infra a w s params
func (o *GetRunningInfraAWSParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get running infra a w s params
func (o *GetRunningInfraAWSParams) WithHTTPClient(client *http.Client) *GetRunningInfraAWSParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get running infra a w s params
func (o *GetRunningInfraAWSParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCredentialCanonical adds the credentialCanonical to the get running infra a w s params
func (o *GetRunningInfraAWSParams) WithCredentialCanonical(credentialCanonical string) *GetRunningInfraAWSParams {
	o.SetCredentialCanonical(credentialCanonical)
	return o
}

// SetCredentialCanonical adds the credentialCanonical to the get running infra a w s params
func (o *GetRunningInfraAWSParams) SetCredentialCanonical(credentialCanonical string) {
	o.CredentialCanonical = credentialCanonical
}

// WithOrganizationCanonical adds the organizationCanonical to the get running infra a w s params
func (o *GetRunningInfraAWSParams) WithOrganizationCanonical(organizationCanonical string) *GetRunningInfraAWSParams {
	o.SetOrganizationCanonical(organizationCanonical)
	return o
}

// SetOrganizationCanonical adds the organizationCanonical to the get running infra a w s params
func (o *GetRunningInfraAWSParams) SetOrganizationCanonical(organizationCanonical string) {
	o.OrganizationCanonical = organizationCanonical
}

// WithProjectCanonical adds the projectCanonical to the get running infra a w s params
func (o *GetRunningInfraAWSParams) WithProjectCanonical(projectCanonical *string) *GetRunningInfraAWSParams {
	o.SetProjectCanonical(projectCanonical)
	return o
}

// SetProjectCanonical adds the projectCanonical to the get running infra a w s params
func (o *GetRunningInfraAWSParams) SetProjectCanonical(projectCanonical *string) {
	o.ProjectCanonical = projectCanonical
}

// WithResource adds the resource to the get running infra a w s params
func (o *GetRunningInfraAWSParams) WithResource(resource []string) *GetRunningInfraAWSParams {
	o.SetResource(resource)
	return o
}

// SetResource adds the resource to the get running infra a w s params
func (o *GetRunningInfraAWSParams) SetResource(resource []string) {
	o.Resource = resource
}

// WithTag adds the tag to the get running infra a w s params
func (o *GetRunningInfraAWSParams) WithTag(tag []string) *GetRunningInfraAWSParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the get running infra a w s params
func (o *GetRunningInfraAWSParams) SetTag(tag []string) {
	o.Tag = tag
}

// WriteToRequest writes these params to a swagger request
func (o *GetRunningInfraAWSParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param credential_canonical
	qrCredentialCanonical := o.CredentialCanonical
	qCredentialCanonical := qrCredentialCanonical
	if qCredentialCanonical != "" {

		if err := r.SetQueryParam("credential_canonical", qCredentialCanonical); err != nil {
			return err
		}
	}

	// path param organization_canonical
	if err := r.SetPathParam("organization_canonical", o.OrganizationCanonical); err != nil {
		return err
	}

	if o.ProjectCanonical != nil {

		// query param project_canonical
		var qrProjectCanonical string

		if o.ProjectCanonical != nil {
			qrProjectCanonical = *o.ProjectCanonical
		}
		qProjectCanonical := qrProjectCanonical
		if qProjectCanonical != "" {

			if err := r.SetQueryParam("project_canonical", qProjectCanonical); err != nil {
				return err
			}
		}
	}

	if o.Resource != nil {

		// binding items for resource
		joinedResource := o.bindParamResource(reg)

		// query array param resource
		if err := r.SetQueryParam("resource", joinedResource...); err != nil {
			return err
		}
	}

	if o.Tag != nil {

		// binding items for tag
		joinedTag := o.bindParamTag(reg)

		// query array param tag
		if err := r.SetQueryParam("tag", joinedTag...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetRunningInfraAWS binds the parameter resource
func (o *GetRunningInfraAWSParams) bindParamResource(formats strfmt.Registry) []string {
	resourceIR := o.Resource

	var resourceIC []string
	for _, resourceIIR := range resourceIR { // explode []string

		resourceIIV := resourceIIR // string as string
		resourceIC = append(resourceIC, resourceIIV)
	}

	// items.CollectionFormat: "multi"
	resourceIS := swag.JoinByFormat(resourceIC, "multi")

	return resourceIS
}

// bindParamGetRunningInfraAWS binds the parameter tag
func (o *GetRunningInfraAWSParams) bindParamTag(formats strfmt.Registry) []string {
	tagIR := o.Tag

	var tagIC []string
	for _, tagIIR := range tagIR { // explode []string

		tagIIV := tagIIR // string as string
		tagIC = append(tagIC, tagIIV)
	}

	// items.CollectionFormat: "multi"
	tagIS := swag.JoinByFormat(tagIC, "multi")

	return tagIS
}
