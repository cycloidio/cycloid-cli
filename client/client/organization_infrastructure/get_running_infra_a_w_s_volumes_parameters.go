// Code generated by go-swagger; DO NOT EDIT.

package organization_infrastructure

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetRunningInfraAWSVolumesParams creates a new GetRunningInfraAWSVolumesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetRunningInfraAWSVolumesParams() *GetRunningInfraAWSVolumesParams {
	return &GetRunningInfraAWSVolumesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetRunningInfraAWSVolumesParamsWithTimeout creates a new GetRunningInfraAWSVolumesParams object
// with the ability to set a timeout on a request.
func NewGetRunningInfraAWSVolumesParamsWithTimeout(timeout time.Duration) *GetRunningInfraAWSVolumesParams {
	return &GetRunningInfraAWSVolumesParams{
		timeout: timeout,
	}
}

// NewGetRunningInfraAWSVolumesParamsWithContext creates a new GetRunningInfraAWSVolumesParams object
// with the ability to set a context for a request.
func NewGetRunningInfraAWSVolumesParamsWithContext(ctx context.Context) *GetRunningInfraAWSVolumesParams {
	return &GetRunningInfraAWSVolumesParams{
		Context: ctx,
	}
}

// NewGetRunningInfraAWSVolumesParamsWithHTTPClient creates a new GetRunningInfraAWSVolumesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetRunningInfraAWSVolumesParamsWithHTTPClient(client *http.Client) *GetRunningInfraAWSVolumesParams {
	return &GetRunningInfraAWSVolumesParams{
		HTTPClient: client,
	}
}

/*
GetRunningInfraAWSVolumesParams contains all the parameters to send to the API endpoint

	for the get running infra a w s volumes operation.

	Typically these are written to a http.Request.
*/
type GetRunningInfraAWSVolumesParams struct {

	/* CredentialCanonical.

	   A Credential canonical
	*/
	CredentialCanonical string

	/* Next.

	   The token to retrieve the next page of results
	*/
	Next *string

	/* OrganizationCanonical.

	   A canonical of an organization.
	*/
	OrganizationCanonical string

	/* PageSize.

	   The number of items at most which the response can have.

	   Format: uint32
	   Default: 1000
	*/
	PageSize *uint32

	/* ProjectCanonical.

	   A list of projects' canonical to filter from
	*/
	ProjectCanonical *string

	/* Tag.

	   An amazon tag, represented as `key|value` and where `key` or `value` could be omitted but not both, in order to select resources which has a `key` or a `value` whatever is its counterpart. `key` nor `value` can contains the `|` character. The parameter can be specified several times in order to request resources which match with at least one of the `tag|value` pairs
	*/
	Tag []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get running infra a w s volumes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRunningInfraAWSVolumesParams) WithDefaults() *GetRunningInfraAWSVolumesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get running infra a w s volumes params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetRunningInfraAWSVolumesParams) SetDefaults() {
	var (
		pageSizeDefault = uint32(1000)
	)

	val := GetRunningInfraAWSVolumesParams{
		PageSize: &pageSizeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) WithTimeout(timeout time.Duration) *GetRunningInfraAWSVolumesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) WithContext(ctx context.Context) *GetRunningInfraAWSVolumesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) WithHTTPClient(client *http.Client) *GetRunningInfraAWSVolumesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCredentialCanonical adds the credentialCanonical to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) WithCredentialCanonical(credentialCanonical string) *GetRunningInfraAWSVolumesParams {
	o.SetCredentialCanonical(credentialCanonical)
	return o
}

// SetCredentialCanonical adds the credentialCanonical to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) SetCredentialCanonical(credentialCanonical string) {
	o.CredentialCanonical = credentialCanonical
}

// WithNext adds the next to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) WithNext(next *string) *GetRunningInfraAWSVolumesParams {
	o.SetNext(next)
	return o
}

// SetNext adds the next to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) SetNext(next *string) {
	o.Next = next
}

// WithOrganizationCanonical adds the organizationCanonical to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) WithOrganizationCanonical(organizationCanonical string) *GetRunningInfraAWSVolumesParams {
	o.SetOrganizationCanonical(organizationCanonical)
	return o
}

// SetOrganizationCanonical adds the organizationCanonical to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) SetOrganizationCanonical(organizationCanonical string) {
	o.OrganizationCanonical = organizationCanonical
}

// WithPageSize adds the pageSize to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) WithPageSize(pageSize *uint32) *GetRunningInfraAWSVolumesParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) SetPageSize(pageSize *uint32) {
	o.PageSize = pageSize
}

// WithProjectCanonical adds the projectCanonical to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) WithProjectCanonical(projectCanonical *string) *GetRunningInfraAWSVolumesParams {
	o.SetProjectCanonical(projectCanonical)
	return o
}

// SetProjectCanonical adds the projectCanonical to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) SetProjectCanonical(projectCanonical *string) {
	o.ProjectCanonical = projectCanonical
}

// WithTag adds the tag to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) WithTag(tag []string) *GetRunningInfraAWSVolumesParams {
	o.SetTag(tag)
	return o
}

// SetTag adds the tag to the get running infra a w s volumes params
func (o *GetRunningInfraAWSVolumesParams) SetTag(tag []string) {
	o.Tag = tag
}

// WriteToRequest writes these params to a swagger request
func (o *GetRunningInfraAWSVolumesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param credential_canonical
	qrCredentialCanonical := o.CredentialCanonical
	qCredentialCanonical := qrCredentialCanonical
	if qCredentialCanonical != "" {

		if err := r.SetQueryParam("credential_canonical", qCredentialCanonical); err != nil {
			return err
		}
	}

	if o.Next != nil {

		// query param next
		var qrNext string

		if o.Next != nil {
			qrNext = *o.Next
		}
		qNext := qrNext
		if qNext != "" {

			if err := r.SetQueryParam("next", qNext); err != nil {
				return err
			}
		}
	}

	// path param organization_canonical
	if err := r.SetPathParam("organization_canonical", o.OrganizationCanonical); err != nil {
		return err
	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize uint32

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatUint32(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.ProjectCanonical != nil {

		// query param project_canonical
		var qrProjectCanonical string

		if o.ProjectCanonical != nil {
			qrProjectCanonical = *o.ProjectCanonical
		}
		qProjectCanonical := qrProjectCanonical
		if qProjectCanonical != "" {

			if err := r.SetQueryParam("project_canonical", qProjectCanonical); err != nil {
				return err
			}
		}
	}

	if o.Tag != nil {

		// binding items for tag
		joinedTag := o.bindParamTag(reg)

		// query array param tag
		if err := r.SetQueryParam("tag", joinedTag...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamGetRunningInfraAWSVolumes binds the parameter tag
func (o *GetRunningInfraAWSVolumesParams) bindParamTag(formats strfmt.Registry) []string {
	tagIR := o.Tag

	var tagIC []string
	for _, tagIIR := range tagIR { // explode []string

		tagIIV := tagIIR // string as string
		tagIC = append(tagIC, tagIIV)
	}

	// items.CollectionFormat: "multi"
	tagIS := swag.JoinByFormat(tagIC, "multi")

	return tagIS
}
