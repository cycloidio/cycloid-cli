// Code generated by go-swagger; DO NOT EDIT.

package organization_infrastructure_policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInfraPoliciesParams creates a new GetInfraPoliciesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInfraPoliciesParams() *GetInfraPoliciesParams {
	return &GetInfraPoliciesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInfraPoliciesParamsWithTimeout creates a new GetInfraPoliciesParams object
// with the ability to set a timeout on a request.
func NewGetInfraPoliciesParamsWithTimeout(timeout time.Duration) *GetInfraPoliciesParams {
	return &GetInfraPoliciesParams{
		timeout: timeout,
	}
}

// NewGetInfraPoliciesParamsWithContext creates a new GetInfraPoliciesParams object
// with the ability to set a context for a request.
func NewGetInfraPoliciesParamsWithContext(ctx context.Context) *GetInfraPoliciesParams {
	return &GetInfraPoliciesParams{
		Context: ctx,
	}
}

// NewGetInfraPoliciesParamsWithHTTPClient creates a new GetInfraPoliciesParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInfraPoliciesParamsWithHTTPClient(client *http.Client) *GetInfraPoliciesParams {
	return &GetInfraPoliciesParams{
		HTTPClient: client,
	}
}

/*
GetInfraPoliciesParams contains all the parameters to send to the API endpoint

	for the get infra policies operation.

	Typically these are written to a http.Request.
*/
type GetInfraPoliciesParams struct {

	/* InfraPolicyCanonical.

	   Search by infra policy canonical
	*/
	InfraPolicyCanonical *string

	/* InfraPolicyCreatedAt.

	   Search by InfraPolicy's creation date

	   Format: uint64
	*/
	InfraPolicyCreatedAt *uint64

	/* InfraPolicyEnabled.

	   Search by InfraPolicy's enabled
	*/
	InfraPolicyEnabled *bool

	/* InfraPolicyName.

	   Search by InfraPolicy's name
	*/
	InfraPolicyName *string

	/* InfraPolicySeverity.

	   Search by InfraPolicy's severity
	*/
	InfraPolicySeverity *string

	/* OrderBy.

	   Allows to order the list of items. Example usage: field_name:asc. Multiple order_by parameters are allowed, applied in the order they are specified.

	*/
	OrderBy *string

	/* OrganizationCanonical.

	   A canonical of an organization.
	*/
	OrganizationCanonical string

	/* PageIndex.

	   The page number to request. The first page is 1.

	   Format: uint32
	   Default: 1
	*/
	PageIndex *uint32

	/* PageSize.

	   The number of items at most which the response can have.

	   Format: uint32
	   Default: 1000
	*/
	PageSize *uint32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get infra policies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInfraPoliciesParams) WithDefaults() *GetInfraPoliciesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get infra policies params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInfraPoliciesParams) SetDefaults() {
	var (
		pageIndexDefault = uint32(1)

		pageSizeDefault = uint32(1000)
	)

	val := GetInfraPoliciesParams{
		PageIndex: &pageIndexDefault,
		PageSize:  &pageSizeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get infra policies params
func (o *GetInfraPoliciesParams) WithTimeout(timeout time.Duration) *GetInfraPoliciesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get infra policies params
func (o *GetInfraPoliciesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get infra policies params
func (o *GetInfraPoliciesParams) WithContext(ctx context.Context) *GetInfraPoliciesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get infra policies params
func (o *GetInfraPoliciesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get infra policies params
func (o *GetInfraPoliciesParams) WithHTTPClient(client *http.Client) *GetInfraPoliciesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get infra policies params
func (o *GetInfraPoliciesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInfraPolicyCanonical adds the infraPolicyCanonical to the get infra policies params
func (o *GetInfraPoliciesParams) WithInfraPolicyCanonical(infraPolicyCanonical *string) *GetInfraPoliciesParams {
	o.SetInfraPolicyCanonical(infraPolicyCanonical)
	return o
}

// SetInfraPolicyCanonical adds the infraPolicyCanonical to the get infra policies params
func (o *GetInfraPoliciesParams) SetInfraPolicyCanonical(infraPolicyCanonical *string) {
	o.InfraPolicyCanonical = infraPolicyCanonical
}

// WithInfraPolicyCreatedAt adds the infraPolicyCreatedAt to the get infra policies params
func (o *GetInfraPoliciesParams) WithInfraPolicyCreatedAt(infraPolicyCreatedAt *uint64) *GetInfraPoliciesParams {
	o.SetInfraPolicyCreatedAt(infraPolicyCreatedAt)
	return o
}

// SetInfraPolicyCreatedAt adds the infraPolicyCreatedAt to the get infra policies params
func (o *GetInfraPoliciesParams) SetInfraPolicyCreatedAt(infraPolicyCreatedAt *uint64) {
	o.InfraPolicyCreatedAt = infraPolicyCreatedAt
}

// WithInfraPolicyEnabled adds the infraPolicyEnabled to the get infra policies params
func (o *GetInfraPoliciesParams) WithInfraPolicyEnabled(infraPolicyEnabled *bool) *GetInfraPoliciesParams {
	o.SetInfraPolicyEnabled(infraPolicyEnabled)
	return o
}

// SetInfraPolicyEnabled adds the infraPolicyEnabled to the get infra policies params
func (o *GetInfraPoliciesParams) SetInfraPolicyEnabled(infraPolicyEnabled *bool) {
	o.InfraPolicyEnabled = infraPolicyEnabled
}

// WithInfraPolicyName adds the infraPolicyName to the get infra policies params
func (o *GetInfraPoliciesParams) WithInfraPolicyName(infraPolicyName *string) *GetInfraPoliciesParams {
	o.SetInfraPolicyName(infraPolicyName)
	return o
}

// SetInfraPolicyName adds the infraPolicyName to the get infra policies params
func (o *GetInfraPoliciesParams) SetInfraPolicyName(infraPolicyName *string) {
	o.InfraPolicyName = infraPolicyName
}

// WithInfraPolicySeverity adds the infraPolicySeverity to the get infra policies params
func (o *GetInfraPoliciesParams) WithInfraPolicySeverity(infraPolicySeverity *string) *GetInfraPoliciesParams {
	o.SetInfraPolicySeverity(infraPolicySeverity)
	return o
}

// SetInfraPolicySeverity adds the infraPolicySeverity to the get infra policies params
func (o *GetInfraPoliciesParams) SetInfraPolicySeverity(infraPolicySeverity *string) {
	o.InfraPolicySeverity = infraPolicySeverity
}

// WithOrderBy adds the orderBy to the get infra policies params
func (o *GetInfraPoliciesParams) WithOrderBy(orderBy *string) *GetInfraPoliciesParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the get infra policies params
func (o *GetInfraPoliciesParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithOrganizationCanonical adds the organizationCanonical to the get infra policies params
func (o *GetInfraPoliciesParams) WithOrganizationCanonical(organizationCanonical string) *GetInfraPoliciesParams {
	o.SetOrganizationCanonical(organizationCanonical)
	return o
}

// SetOrganizationCanonical adds the organizationCanonical to the get infra policies params
func (o *GetInfraPoliciesParams) SetOrganizationCanonical(organizationCanonical string) {
	o.OrganizationCanonical = organizationCanonical
}

// WithPageIndex adds the pageIndex to the get infra policies params
func (o *GetInfraPoliciesParams) WithPageIndex(pageIndex *uint32) *GetInfraPoliciesParams {
	o.SetPageIndex(pageIndex)
	return o
}

// SetPageIndex adds the pageIndex to the get infra policies params
func (o *GetInfraPoliciesParams) SetPageIndex(pageIndex *uint32) {
	o.PageIndex = pageIndex
}

// WithPageSize adds the pageSize to the get infra policies params
func (o *GetInfraPoliciesParams) WithPageSize(pageSize *uint32) *GetInfraPoliciesParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get infra policies params
func (o *GetInfraPoliciesParams) SetPageSize(pageSize *uint32) {
	o.PageSize = pageSize
}

// WriteToRequest writes these params to a swagger request
func (o *GetInfraPoliciesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.InfraPolicyCanonical != nil {

		// query param infra_policy_canonical
		var qrInfraPolicyCanonical string

		if o.InfraPolicyCanonical != nil {
			qrInfraPolicyCanonical = *o.InfraPolicyCanonical
		}
		qInfraPolicyCanonical := qrInfraPolicyCanonical
		if qInfraPolicyCanonical != "" {

			if err := r.SetQueryParam("infra_policy_canonical", qInfraPolicyCanonical); err != nil {
				return err
			}
		}
	}

	if o.InfraPolicyCreatedAt != nil {

		// query param infra_policy_created_at
		var qrInfraPolicyCreatedAt uint64

		if o.InfraPolicyCreatedAt != nil {
			qrInfraPolicyCreatedAt = *o.InfraPolicyCreatedAt
		}
		qInfraPolicyCreatedAt := swag.FormatUint64(qrInfraPolicyCreatedAt)
		if qInfraPolicyCreatedAt != "" {

			if err := r.SetQueryParam("infra_policy_created_at", qInfraPolicyCreatedAt); err != nil {
				return err
			}
		}
	}

	if o.InfraPolicyEnabled != nil {

		// query param infra_policy_enabled
		var qrInfraPolicyEnabled bool

		if o.InfraPolicyEnabled != nil {
			qrInfraPolicyEnabled = *o.InfraPolicyEnabled
		}
		qInfraPolicyEnabled := swag.FormatBool(qrInfraPolicyEnabled)
		if qInfraPolicyEnabled != "" {

			if err := r.SetQueryParam("infra_policy_enabled", qInfraPolicyEnabled); err != nil {
				return err
			}
		}
	}

	if o.InfraPolicyName != nil {

		// query param infra_policy_name
		var qrInfraPolicyName string

		if o.InfraPolicyName != nil {
			qrInfraPolicyName = *o.InfraPolicyName
		}
		qInfraPolicyName := qrInfraPolicyName
		if qInfraPolicyName != "" {

			if err := r.SetQueryParam("infra_policy_name", qInfraPolicyName); err != nil {
				return err
			}
		}
	}

	if o.InfraPolicySeverity != nil {

		// query param infra_policy_severity
		var qrInfraPolicySeverity string

		if o.InfraPolicySeverity != nil {
			qrInfraPolicySeverity = *o.InfraPolicySeverity
		}
		qInfraPolicySeverity := qrInfraPolicySeverity
		if qInfraPolicySeverity != "" {

			if err := r.SetQueryParam("infra_policy_severity", qInfraPolicySeverity); err != nil {
				return err
			}
		}
	}

	if o.OrderBy != nil {

		// query param order_by
		var qrOrderBy string

		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {

			if err := r.SetQueryParam("order_by", qOrderBy); err != nil {
				return err
			}
		}
	}

	// path param organization_canonical
	if err := r.SetPathParam("organization_canonical", o.OrganizationCanonical); err != nil {
		return err
	}

	if o.PageIndex != nil {

		// query param page_index
		var qrPageIndex uint32

		if o.PageIndex != nil {
			qrPageIndex = *o.PageIndex
		}
		qPageIndex := swag.FormatUint32(qrPageIndex)
		if qPageIndex != "" {

			if err := r.SetQueryParam("page_index", qPageIndex); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize uint32

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatUint32(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
