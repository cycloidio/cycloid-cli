// Code generated by go-swagger; DO NOT EDIT.

package organization_inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// CreateOrUpdateStateReader is a Reader for the CreateOrUpdateState structure.
type CreateOrUpdateStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrUpdateStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewCreateOrUpdateStateNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCreateOrUpdateStateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateOrUpdateStateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 411:
		result := NewCreateOrUpdateStateLengthRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateOrUpdateStateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 423:
		result := NewCreateOrUpdateStateLocked()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateOrUpdateStateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateOrUpdateStateNoContent creates a CreateOrUpdateStateNoContent with default headers values
func NewCreateOrUpdateStateNoContent() *CreateOrUpdateStateNoContent {
	return &CreateOrUpdateStateNoContent{}
}

/*
CreateOrUpdateStateNoContent describes a response with status code 204, with default header values.

Success update
*/
type CreateOrUpdateStateNoContent struct {
}

// IsSuccess returns true when this create or update state no content response has a 2xx status code
func (o *CreateOrUpdateStateNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create or update state no content response has a 3xx status code
func (o *CreateOrUpdateStateNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update state no content response has a 4xx status code
func (o *CreateOrUpdateStateNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this create or update state no content response has a 5xx status code
func (o *CreateOrUpdateStateNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update state no content response a status code equal to that given
func (o *CreateOrUpdateStateNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the create or update state no content response
func (o *CreateOrUpdateStateNoContent) Code() int {
	return 204
}

func (o *CreateOrUpdateStateNoContent) Error() string {
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateNoContent", 204)
}

func (o *CreateOrUpdateStateNoContent) String() string {
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateNoContent", 204)
}

func (o *CreateOrUpdateStateNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateStateForbidden creates a CreateOrUpdateStateForbidden with default headers values
func NewCreateOrUpdateStateForbidden() *CreateOrUpdateStateForbidden {
	return &CreateOrUpdateStateForbidden{}
}

/*
CreateOrUpdateStateForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type CreateOrUpdateStateForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create or update state forbidden response has a 2xx status code
func (o *CreateOrUpdateStateForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update state forbidden response has a 3xx status code
func (o *CreateOrUpdateStateForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update state forbidden response has a 4xx status code
func (o *CreateOrUpdateStateForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update state forbidden response has a 5xx status code
func (o *CreateOrUpdateStateForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update state forbidden response a status code equal to that given
func (o *CreateOrUpdateStateForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create or update state forbidden response
func (o *CreateOrUpdateStateForbidden) Code() int {
	return 403
}

func (o *CreateOrUpdateStateForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateForbidden %s", 403, payload)
}

func (o *CreateOrUpdateStateForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateForbidden %s", 403, payload)
}

func (o *CreateOrUpdateStateForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateOrUpdateStateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrUpdateStateNotFound creates a CreateOrUpdateStateNotFound with default headers values
func NewCreateOrUpdateStateNotFound() *CreateOrUpdateStateNotFound {
	return &CreateOrUpdateStateNotFound{}
}

/*
CreateOrUpdateStateNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type CreateOrUpdateStateNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create or update state not found response has a 2xx status code
func (o *CreateOrUpdateStateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update state not found response has a 3xx status code
func (o *CreateOrUpdateStateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update state not found response has a 4xx status code
func (o *CreateOrUpdateStateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update state not found response has a 5xx status code
func (o *CreateOrUpdateStateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update state not found response a status code equal to that given
func (o *CreateOrUpdateStateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create or update state not found response
func (o *CreateOrUpdateStateNotFound) Code() int {
	return 404
}

func (o *CreateOrUpdateStateNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateNotFound %s", 404, payload)
}

func (o *CreateOrUpdateStateNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateNotFound %s", 404, payload)
}

func (o *CreateOrUpdateStateNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateOrUpdateStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrUpdateStateLengthRequired creates a CreateOrUpdateStateLengthRequired with default headers values
func NewCreateOrUpdateStateLengthRequired() *CreateOrUpdateStateLengthRequired {
	return &CreateOrUpdateStateLengthRequired{}
}

/*
CreateOrUpdateStateLengthRequired describes a response with status code 411, with default header values.

The request has a body but it doesn't have a Content-Length header.
*/
type CreateOrUpdateStateLengthRequired struct {
}

// IsSuccess returns true when this create or update state length required response has a 2xx status code
func (o *CreateOrUpdateStateLengthRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update state length required response has a 3xx status code
func (o *CreateOrUpdateStateLengthRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update state length required response has a 4xx status code
func (o *CreateOrUpdateStateLengthRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update state length required response has a 5xx status code
func (o *CreateOrUpdateStateLengthRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update state length required response a status code equal to that given
func (o *CreateOrUpdateStateLengthRequired) IsCode(code int) bool {
	return code == 411
}

// Code gets the status code for the create or update state length required response
func (o *CreateOrUpdateStateLengthRequired) Code() int {
	return 411
}

func (o *CreateOrUpdateStateLengthRequired) Error() string {
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateLengthRequired", 411)
}

func (o *CreateOrUpdateStateLengthRequired) String() string {
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateLengthRequired", 411)
}

func (o *CreateOrUpdateStateLengthRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateStateUnprocessableEntity creates a CreateOrUpdateStateUnprocessableEntity with default headers values
func NewCreateOrUpdateStateUnprocessableEntity() *CreateOrUpdateStateUnprocessableEntity {
	return &CreateOrUpdateStateUnprocessableEntity{}
}

/*
CreateOrUpdateStateUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type CreateOrUpdateStateUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create or update state unprocessable entity response has a 2xx status code
func (o *CreateOrUpdateStateUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update state unprocessable entity response has a 3xx status code
func (o *CreateOrUpdateStateUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update state unprocessable entity response has a 4xx status code
func (o *CreateOrUpdateStateUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update state unprocessable entity response has a 5xx status code
func (o *CreateOrUpdateStateUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update state unprocessable entity response a status code equal to that given
func (o *CreateOrUpdateStateUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create or update state unprocessable entity response
func (o *CreateOrUpdateStateUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateOrUpdateStateUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateUnprocessableEntity %s", 422, payload)
}

func (o *CreateOrUpdateStateUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateUnprocessableEntity %s", 422, payload)
}

func (o *CreateOrUpdateStateUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateOrUpdateStateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrUpdateStateLocked creates a CreateOrUpdateStateLocked with default headers values
func NewCreateOrUpdateStateLocked() *CreateOrUpdateStateLocked {
	return &CreateOrUpdateStateLocked{}
}

/*
CreateOrUpdateStateLocked describes a response with status code 423, with default header values.

The operation couldn't be executed or completed because the state is locked.
*/
type CreateOrUpdateStateLocked struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create or update state locked response has a 2xx status code
func (o *CreateOrUpdateStateLocked) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update state locked response has a 3xx status code
func (o *CreateOrUpdateStateLocked) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update state locked response has a 4xx status code
func (o *CreateOrUpdateStateLocked) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update state locked response has a 5xx status code
func (o *CreateOrUpdateStateLocked) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update state locked response a status code equal to that given
func (o *CreateOrUpdateStateLocked) IsCode(code int) bool {
	return code == 423
}

// Code gets the status code for the create or update state locked response
func (o *CreateOrUpdateStateLocked) Code() int {
	return 423
}

func (o *CreateOrUpdateStateLocked) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateLocked %s", 423, payload)
}

func (o *CreateOrUpdateStateLocked) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateStateLocked %s", 423, payload)
}

func (o *CreateOrUpdateStateLocked) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateOrUpdateStateLocked) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrUpdateStateDefault creates a CreateOrUpdateStateDefault with default headers values
func NewCreateOrUpdateStateDefault(code int) *CreateOrUpdateStateDefault {
	return &CreateOrUpdateStateDefault{
		_statusCode: code,
	}
}

/*
CreateOrUpdateStateDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type CreateOrUpdateStateDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create or update state default response has a 2xx status code
func (o *CreateOrUpdateStateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create or update state default response has a 3xx status code
func (o *CreateOrUpdateStateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create or update state default response has a 4xx status code
func (o *CreateOrUpdateStateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create or update state default response has a 5xx status code
func (o *CreateOrUpdateStateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create or update state default response a status code equal to that given
func (o *CreateOrUpdateStateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create or update state default response
func (o *CreateOrUpdateStateDefault) Code() int {
	return o._statusCode
}

func (o *CreateOrUpdateStateDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateState default %s", o._statusCode, payload)
}

func (o *CreateOrUpdateStateDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory][%d] createOrUpdateState default %s", o._statusCode, payload)
}

func (o *CreateOrUpdateStateDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateOrUpdateStateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
