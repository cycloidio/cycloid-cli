// Code generated by go-swagger; DO NOT EDIT.

package organization_inventory

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetInventoryResourceReader is a Reader for the GetInventoryResource structure.
type GetInventoryResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInventoryResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInventoryResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetInventoryResourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInventoryResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetInventoryResourceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetInventoryResourceOK creates a GetInventoryResourceOK with default headers values
func NewGetInventoryResourceOK() *GetInventoryResourceOK {
	return &GetInventoryResourceOK{}
}

/*
GetInventoryResourceOK describes a response with status code 200, with default header values.

Resource with the given ID
*/
type GetInventoryResourceOK struct {
	Payload *GetInventoryResourceOKBody
}

// IsSuccess returns true when this get inventory resource o k response has a 2xx status code
func (o *GetInventoryResourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get inventory resource o k response has a 3xx status code
func (o *GetInventoryResourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inventory resource o k response has a 4xx status code
func (o *GetInventoryResourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get inventory resource o k response has a 5xx status code
func (o *GetInventoryResourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get inventory resource o k response a status code equal to that given
func (o *GetInventoryResourceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get inventory resource o k response
func (o *GetInventoryResourceOK) Code() int {
	return 200
}

func (o *GetInventoryResourceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/inventory/resources/{inventory_resource_id}][%d] getInventoryResourceOK %s", 200, payload)
}

func (o *GetInventoryResourceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/inventory/resources/{inventory_resource_id}][%d] getInventoryResourceOK %s", 200, payload)
}

func (o *GetInventoryResourceOK) GetPayload() *GetInventoryResourceOKBody {
	return o.Payload
}

func (o *GetInventoryResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetInventoryResourceOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryResourceForbidden creates a GetInventoryResourceForbidden with default headers values
func NewGetInventoryResourceForbidden() *GetInventoryResourceForbidden {
	return &GetInventoryResourceForbidden{}
}

/*
GetInventoryResourceForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetInventoryResourceForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get inventory resource forbidden response has a 2xx status code
func (o *GetInventoryResourceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inventory resource forbidden response has a 3xx status code
func (o *GetInventoryResourceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inventory resource forbidden response has a 4xx status code
func (o *GetInventoryResourceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inventory resource forbidden response has a 5xx status code
func (o *GetInventoryResourceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get inventory resource forbidden response a status code equal to that given
func (o *GetInventoryResourceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get inventory resource forbidden response
func (o *GetInventoryResourceForbidden) Code() int {
	return 403
}

func (o *GetInventoryResourceForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/inventory/resources/{inventory_resource_id}][%d] getInventoryResourceForbidden %s", 403, payload)
}

func (o *GetInventoryResourceForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/inventory/resources/{inventory_resource_id}][%d] getInventoryResourceForbidden %s", 403, payload)
}

func (o *GetInventoryResourceForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetInventoryResourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryResourceNotFound creates a GetInventoryResourceNotFound with default headers values
func NewGetInventoryResourceNotFound() *GetInventoryResourceNotFound {
	return &GetInventoryResourceNotFound{}
}

/*
GetInventoryResourceNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetInventoryResourceNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get inventory resource not found response has a 2xx status code
func (o *GetInventoryResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inventory resource not found response has a 3xx status code
func (o *GetInventoryResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inventory resource not found response has a 4xx status code
func (o *GetInventoryResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inventory resource not found response has a 5xx status code
func (o *GetInventoryResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get inventory resource not found response a status code equal to that given
func (o *GetInventoryResourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get inventory resource not found response
func (o *GetInventoryResourceNotFound) Code() int {
	return 404
}

func (o *GetInventoryResourceNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/inventory/resources/{inventory_resource_id}][%d] getInventoryResourceNotFound %s", 404, payload)
}

func (o *GetInventoryResourceNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/inventory/resources/{inventory_resource_id}][%d] getInventoryResourceNotFound %s", 404, payload)
}

func (o *GetInventoryResourceNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetInventoryResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryResourceDefault creates a GetInventoryResourceDefault with default headers values
func NewGetInventoryResourceDefault(code int) *GetInventoryResourceDefault {
	return &GetInventoryResourceDefault{
		_statusCode: code,
	}
}

/*
GetInventoryResourceDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetInventoryResourceDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get inventory resource default response has a 2xx status code
func (o *GetInventoryResourceDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get inventory resource default response has a 3xx status code
func (o *GetInventoryResourceDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get inventory resource default response has a 4xx status code
func (o *GetInventoryResourceDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get inventory resource default response has a 5xx status code
func (o *GetInventoryResourceDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get inventory resource default response a status code equal to that given
func (o *GetInventoryResourceDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get inventory resource default response
func (o *GetInventoryResourceDefault) Code() int {
	return o._statusCode
}

func (o *GetInventoryResourceDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/inventory/resources/{inventory_resource_id}][%d] getInventoryResource default %s", o._statusCode, payload)
}

func (o *GetInventoryResourceDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/inventory/resources/{inventory_resource_id}][%d] getInventoryResource default %s", o._statusCode, payload)
}

func (o *GetInventoryResourceDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetInventoryResourceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetInventoryResourceOKBody get inventory resource o k body
swagger:model GetInventoryResourceOKBody
*/
type GetInventoryResourceOKBody struct {

	// data
	// Required: true
	Data *models.InventoryResource `json:"data"`
}

// Validate validates this get inventory resource o k body
func (o *GetInventoryResourceOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetInventoryResourceOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getInventoryResourceOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getInventoryResourceOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getInventoryResourceOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get inventory resource o k body based on the context it is used
func (o *GetInventoryResourceOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetInventoryResourceOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getInventoryResourceOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getInventoryResourceOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetInventoryResourceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetInventoryResourceOKBody) UnmarshalBinary(b []byte) error {
	var res GetInventoryResourceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
