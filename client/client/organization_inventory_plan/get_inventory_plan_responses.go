// Code generated by go-swagger; DO NOT EDIT.

package organization_inventory_plan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetInventoryPlanReader is a Reader for the GetInventoryPlan structure.
type GetInventoryPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetInventoryPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetInventoryPlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetInventoryPlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetInventoryPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetInventoryPlanDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetInventoryPlanOK creates a GetInventoryPlanOK with default headers values
func NewGetInventoryPlanOK() *GetInventoryPlanOK {
	return &GetInventoryPlanOK{}
}

/*
GetInventoryPlanOK describes a response with status code 200, with default header values.

Get the plan of an inventory
*/
type GetInventoryPlanOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get inventory plan o k response has a 2xx status code
func (o *GetInventoryPlanOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get inventory plan o k response has a 3xx status code
func (o *GetInventoryPlanOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inventory plan o k response has a 4xx status code
func (o *GetInventoryPlanOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get inventory plan o k response has a 5xx status code
func (o *GetInventoryPlanOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get inventory plan o k response a status code equal to that given
func (o *GetInventoryPlanOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get inventory plan o k response
func (o *GetInventoryPlanOK) Code() int {
	return 200
}

func (o *GetInventoryPlanOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inventory-plan][%d] getInventoryPlanOK %s", 200, payload)
}

func (o *GetInventoryPlanOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inventory-plan][%d] getInventoryPlanOK %s", 200, payload)
}

func (o *GetInventoryPlanOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetInventoryPlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryPlanForbidden creates a GetInventoryPlanForbidden with default headers values
func NewGetInventoryPlanForbidden() *GetInventoryPlanForbidden {
	return &GetInventoryPlanForbidden{}
}

/*
GetInventoryPlanForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetInventoryPlanForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get inventory plan forbidden response has a 2xx status code
func (o *GetInventoryPlanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inventory plan forbidden response has a 3xx status code
func (o *GetInventoryPlanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inventory plan forbidden response has a 4xx status code
func (o *GetInventoryPlanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inventory plan forbidden response has a 5xx status code
func (o *GetInventoryPlanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get inventory plan forbidden response a status code equal to that given
func (o *GetInventoryPlanForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get inventory plan forbidden response
func (o *GetInventoryPlanForbidden) Code() int {
	return 403
}

func (o *GetInventoryPlanForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inventory-plan][%d] getInventoryPlanForbidden %s", 403, payload)
}

func (o *GetInventoryPlanForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inventory-plan][%d] getInventoryPlanForbidden %s", 403, payload)
}

func (o *GetInventoryPlanForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetInventoryPlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryPlanNotFound creates a GetInventoryPlanNotFound with default headers values
func NewGetInventoryPlanNotFound() *GetInventoryPlanNotFound {
	return &GetInventoryPlanNotFound{}
}

/*
GetInventoryPlanNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetInventoryPlanNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get inventory plan not found response has a 2xx status code
func (o *GetInventoryPlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get inventory plan not found response has a 3xx status code
func (o *GetInventoryPlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get inventory plan not found response has a 4xx status code
func (o *GetInventoryPlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get inventory plan not found response has a 5xx status code
func (o *GetInventoryPlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get inventory plan not found response a status code equal to that given
func (o *GetInventoryPlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get inventory plan not found response
func (o *GetInventoryPlanNotFound) Code() int {
	return 404
}

func (o *GetInventoryPlanNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inventory-plan][%d] getInventoryPlanNotFound %s", 404, payload)
}

func (o *GetInventoryPlanNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inventory-plan][%d] getInventoryPlanNotFound %s", 404, payload)
}

func (o *GetInventoryPlanNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetInventoryPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetInventoryPlanDefault creates a GetInventoryPlanDefault with default headers values
func NewGetInventoryPlanDefault(code int) *GetInventoryPlanDefault {
	return &GetInventoryPlanDefault{
		_statusCode: code,
	}
}

/*
GetInventoryPlanDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetInventoryPlanDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get inventory plan default response has a 2xx status code
func (o *GetInventoryPlanDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get inventory plan default response has a 3xx status code
func (o *GetInventoryPlanDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get inventory plan default response has a 4xx status code
func (o *GetInventoryPlanDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get inventory plan default response has a 5xx status code
func (o *GetInventoryPlanDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get inventory plan default response a status code equal to that given
func (o *GetInventoryPlanDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get inventory plan default response
func (o *GetInventoryPlanDefault) Code() int {
	return o._statusCode
}

func (o *GetInventoryPlanDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inventory-plan][%d] getInventoryPlan default %s", o._statusCode, payload)
}

func (o *GetInventoryPlanDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /inventory-plan][%d] getInventoryPlan default %s", o._statusCode, payload)
}

func (o *GetInventoryPlanDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetInventoryPlanDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
