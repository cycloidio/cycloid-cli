// Code generated by go-swagger; DO NOT EDIT.

package organization_inventory_plan

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// SetInventoryPlanReader is a Reader for the SetInventoryPlan structure.
type SetInventoryPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetInventoryPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewSetInventoryPlanNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewSetInventoryPlanForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetInventoryPlanNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 411:
		result := NewSetInventoryPlanLengthRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewSetInventoryPlanUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSetInventoryPlanDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSetInventoryPlanNoContent creates a SetInventoryPlanNoContent with default headers values
func NewSetInventoryPlanNoContent() *SetInventoryPlanNoContent {
	return &SetInventoryPlanNoContent{}
}

/*
SetInventoryPlanNoContent describes a response with status code 204, with default header values.

Success update
*/
type SetInventoryPlanNoContent struct {
}

// IsSuccess returns true when this set inventory plan no content response has a 2xx status code
func (o *SetInventoryPlanNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set inventory plan no content response has a 3xx status code
func (o *SetInventoryPlanNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set inventory plan no content response has a 4xx status code
func (o *SetInventoryPlanNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this set inventory plan no content response has a 5xx status code
func (o *SetInventoryPlanNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this set inventory plan no content response a status code equal to that given
func (o *SetInventoryPlanNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the set inventory plan no content response
func (o *SetInventoryPlanNoContent) Code() int {
	return 204
}

func (o *SetInventoryPlanNoContent) Error() string {
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanNoContent", 204)
}

func (o *SetInventoryPlanNoContent) String() string {
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanNoContent", 204)
}

func (o *SetInventoryPlanNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetInventoryPlanForbidden creates a SetInventoryPlanForbidden with default headers values
func NewSetInventoryPlanForbidden() *SetInventoryPlanForbidden {
	return &SetInventoryPlanForbidden{}
}

/*
SetInventoryPlanForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type SetInventoryPlanForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this set inventory plan forbidden response has a 2xx status code
func (o *SetInventoryPlanForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set inventory plan forbidden response has a 3xx status code
func (o *SetInventoryPlanForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set inventory plan forbidden response has a 4xx status code
func (o *SetInventoryPlanForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set inventory plan forbidden response has a 5xx status code
func (o *SetInventoryPlanForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set inventory plan forbidden response a status code equal to that given
func (o *SetInventoryPlanForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set inventory plan forbidden response
func (o *SetInventoryPlanForbidden) Code() int {
	return 403
}

func (o *SetInventoryPlanForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanForbidden %s", 403, payload)
}

func (o *SetInventoryPlanForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanForbidden %s", 403, payload)
}

func (o *SetInventoryPlanForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *SetInventoryPlanForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetInventoryPlanNotFound creates a SetInventoryPlanNotFound with default headers values
func NewSetInventoryPlanNotFound() *SetInventoryPlanNotFound {
	return &SetInventoryPlanNotFound{}
}

/*
SetInventoryPlanNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type SetInventoryPlanNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this set inventory plan not found response has a 2xx status code
func (o *SetInventoryPlanNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set inventory plan not found response has a 3xx status code
func (o *SetInventoryPlanNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set inventory plan not found response has a 4xx status code
func (o *SetInventoryPlanNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set inventory plan not found response has a 5xx status code
func (o *SetInventoryPlanNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set inventory plan not found response a status code equal to that given
func (o *SetInventoryPlanNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set inventory plan not found response
func (o *SetInventoryPlanNotFound) Code() int {
	return 404
}

func (o *SetInventoryPlanNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanNotFound %s", 404, payload)
}

func (o *SetInventoryPlanNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanNotFound %s", 404, payload)
}

func (o *SetInventoryPlanNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *SetInventoryPlanNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetInventoryPlanLengthRequired creates a SetInventoryPlanLengthRequired with default headers values
func NewSetInventoryPlanLengthRequired() *SetInventoryPlanLengthRequired {
	return &SetInventoryPlanLengthRequired{}
}

/*
SetInventoryPlanLengthRequired describes a response with status code 411, with default header values.

The request has a body but it doesn't have a Content-Length header.
*/
type SetInventoryPlanLengthRequired struct {
}

// IsSuccess returns true when this set inventory plan length required response has a 2xx status code
func (o *SetInventoryPlanLengthRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set inventory plan length required response has a 3xx status code
func (o *SetInventoryPlanLengthRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set inventory plan length required response has a 4xx status code
func (o *SetInventoryPlanLengthRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this set inventory plan length required response has a 5xx status code
func (o *SetInventoryPlanLengthRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this set inventory plan length required response a status code equal to that given
func (o *SetInventoryPlanLengthRequired) IsCode(code int) bool {
	return code == 411
}

// Code gets the status code for the set inventory plan length required response
func (o *SetInventoryPlanLengthRequired) Code() int {
	return 411
}

func (o *SetInventoryPlanLengthRequired) Error() string {
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanLengthRequired", 411)
}

func (o *SetInventoryPlanLengthRequired) String() string {
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanLengthRequired", 411)
}

func (o *SetInventoryPlanLengthRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetInventoryPlanUnprocessableEntity creates a SetInventoryPlanUnprocessableEntity with default headers values
func NewSetInventoryPlanUnprocessableEntity() *SetInventoryPlanUnprocessableEntity {
	return &SetInventoryPlanUnprocessableEntity{}
}

/*
SetInventoryPlanUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type SetInventoryPlanUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this set inventory plan unprocessable entity response has a 2xx status code
func (o *SetInventoryPlanUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set inventory plan unprocessable entity response has a 3xx status code
func (o *SetInventoryPlanUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set inventory plan unprocessable entity response has a 4xx status code
func (o *SetInventoryPlanUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this set inventory plan unprocessable entity response has a 5xx status code
func (o *SetInventoryPlanUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this set inventory plan unprocessable entity response a status code equal to that given
func (o *SetInventoryPlanUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the set inventory plan unprocessable entity response
func (o *SetInventoryPlanUnprocessableEntity) Code() int {
	return 422
}

func (o *SetInventoryPlanUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanUnprocessableEntity %s", 422, payload)
}

func (o *SetInventoryPlanUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlanUnprocessableEntity %s", 422, payload)
}

func (o *SetInventoryPlanUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *SetInventoryPlanUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetInventoryPlanDefault creates a SetInventoryPlanDefault with default headers values
func NewSetInventoryPlanDefault(code int) *SetInventoryPlanDefault {
	return &SetInventoryPlanDefault{
		_statusCode: code,
	}
}

/*
SetInventoryPlanDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type SetInventoryPlanDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this set inventory plan default response has a 2xx status code
func (o *SetInventoryPlanDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this set inventory plan default response has a 3xx status code
func (o *SetInventoryPlanDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this set inventory plan default response has a 4xx status code
func (o *SetInventoryPlanDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this set inventory plan default response has a 5xx status code
func (o *SetInventoryPlanDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this set inventory plan default response a status code equal to that given
func (o *SetInventoryPlanDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the set inventory plan default response
func (o *SetInventoryPlanDefault) Code() int {
	return o._statusCode
}

func (o *SetInventoryPlanDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlan default %s", o._statusCode, payload)
}

func (o *SetInventoryPlanDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /inventory-plan][%d] setInventoryPlan default %s", o._statusCode, payload)
}

func (o *SetInventoryPlanDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *SetInventoryPlanDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
