// Code generated by go-swagger; DO NOT EDIT.

package organization_kpis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// DeleteKpiReader is a Reader for the DeleteKpi structure.
type DeleteKpiReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteKpiReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteKpiNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteKpiForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteKpiNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteKpiDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteKpiNoContent creates a DeleteKpiNoContent with default headers values
func NewDeleteKpiNoContent() *DeleteKpiNoContent {
	return &DeleteKpiNoContent{}
}

/*DeleteKpiNoContent handles this case with default header values.

Organization's KPI has been deleted
*/
type DeleteKpiNoContent struct {
}

func (o *DeleteKpiNoContent) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/kpis/{kpi_canonical}][%d] deleteKpiNoContent ", 204)
}

func (o *DeleteKpiNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteKpiForbidden creates a DeleteKpiForbidden with default headers values
func NewDeleteKpiForbidden() *DeleteKpiForbidden {
	return &DeleteKpiForbidden{}
}

/*DeleteKpiForbidden handles this case with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type DeleteKpiForbidden struct {
	Payload *models.ErrorPayload
}

func (o *DeleteKpiForbidden) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/kpis/{kpi_canonical}][%d] deleteKpiForbidden  %+v", 403, o.Payload)
}

func (o *DeleteKpiForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteKpiForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKpiNotFound creates a DeleteKpiNotFound with default headers values
func NewDeleteKpiNotFound() *DeleteKpiNotFound {
	return &DeleteKpiNotFound{}
}

/*DeleteKpiNotFound handles this case with default header values.

The response sent when any of the entities present in the path is not found.
*/
type DeleteKpiNotFound struct {
	Payload *models.ErrorPayload
}

func (o *DeleteKpiNotFound) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/kpis/{kpi_canonical}][%d] deleteKpiNotFound  %+v", 404, o.Payload)
}

func (o *DeleteKpiNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteKpiNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteKpiDefault creates a DeleteKpiDefault with default headers values
func NewDeleteKpiDefault(code int) *DeleteKpiDefault {
	return &DeleteKpiDefault{
		_statusCode: code,
	}
}

/*DeleteKpiDefault handles this case with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type DeleteKpiDefault struct {
	_statusCode int

	Payload *models.ErrorPayload
}

// Code gets the status code for the delete kpi default response
func (o *DeleteKpiDefault) Code() int {
	return o._statusCode
}

func (o *DeleteKpiDefault) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/kpis/{kpi_canonical}][%d] deleteKpi default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteKpiDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteKpiDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
