// Code generated by go-swagger; DO NOT EDIT.

package organization_logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetProjEnvLogEntriesReader is a Reader for the GetProjEnvLogEntries structure.
type GetProjEnvLogEntriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjEnvLogEntriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjEnvLogEntriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetProjEnvLogEntriesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjEnvLogEntriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetProjEnvLogEntriesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetProjEnvLogEntriesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetProjEnvLogEntriesOK creates a GetProjEnvLogEntriesOK with default headers values
func NewGetProjEnvLogEntriesOK() *GetProjEnvLogEntriesOK {
	return &GetProjEnvLogEntriesOK{}
}

/*
GetProjEnvLogEntriesOK describes a response with status code 200, with default header values.

The list of log's entries which are comprehended by the begin and end timestamps and are selected by the optional query.
*/
type GetProjEnvLogEntriesOK struct {
	Payload *GetProjEnvLogEntriesOKBody
}

// IsSuccess returns true when this get proj env log entries o k response has a 2xx status code
func (o *GetProjEnvLogEntriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get proj env log entries o k response has a 3xx status code
func (o *GetProjEnvLogEntriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get proj env log entries o k response has a 4xx status code
func (o *GetProjEnvLogEntriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get proj env log entries o k response has a 5xx status code
func (o *GetProjEnvLogEntriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get proj env log entries o k response a status code equal to that given
func (o *GetProjEnvLogEntriesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get proj env log entries o k response
func (o *GetProjEnvLogEntriesOK) Code() int {
	return 200
}

func (o *GetProjEnvLogEntriesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntriesOK %s", 200, payload)
}

func (o *GetProjEnvLogEntriesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntriesOK %s", 200, payload)
}

func (o *GetProjEnvLogEntriesOK) GetPayload() *GetProjEnvLogEntriesOKBody {
	return o.Payload
}

func (o *GetProjEnvLogEntriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetProjEnvLogEntriesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjEnvLogEntriesForbidden creates a GetProjEnvLogEntriesForbidden with default headers values
func NewGetProjEnvLogEntriesForbidden() *GetProjEnvLogEntriesForbidden {
	return &GetProjEnvLogEntriesForbidden{}
}

/*
GetProjEnvLogEntriesForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetProjEnvLogEntriesForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get proj env log entries forbidden response has a 2xx status code
func (o *GetProjEnvLogEntriesForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get proj env log entries forbidden response has a 3xx status code
func (o *GetProjEnvLogEntriesForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get proj env log entries forbidden response has a 4xx status code
func (o *GetProjEnvLogEntriesForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get proj env log entries forbidden response has a 5xx status code
func (o *GetProjEnvLogEntriesForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get proj env log entries forbidden response a status code equal to that given
func (o *GetProjEnvLogEntriesForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get proj env log entries forbidden response
func (o *GetProjEnvLogEntriesForbidden) Code() int {
	return 403
}

func (o *GetProjEnvLogEntriesForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntriesForbidden %s", 403, payload)
}

func (o *GetProjEnvLogEntriesForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntriesForbidden %s", 403, payload)
}

func (o *GetProjEnvLogEntriesForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetProjEnvLogEntriesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjEnvLogEntriesNotFound creates a GetProjEnvLogEntriesNotFound with default headers values
func NewGetProjEnvLogEntriesNotFound() *GetProjEnvLogEntriesNotFound {
	return &GetProjEnvLogEntriesNotFound{}
}

/*
GetProjEnvLogEntriesNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetProjEnvLogEntriesNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get proj env log entries not found response has a 2xx status code
func (o *GetProjEnvLogEntriesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get proj env log entries not found response has a 3xx status code
func (o *GetProjEnvLogEntriesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get proj env log entries not found response has a 4xx status code
func (o *GetProjEnvLogEntriesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get proj env log entries not found response has a 5xx status code
func (o *GetProjEnvLogEntriesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get proj env log entries not found response a status code equal to that given
func (o *GetProjEnvLogEntriesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get proj env log entries not found response
func (o *GetProjEnvLogEntriesNotFound) Code() int {
	return 404
}

func (o *GetProjEnvLogEntriesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntriesNotFound %s", 404, payload)
}

func (o *GetProjEnvLogEntriesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntriesNotFound %s", 404, payload)
}

func (o *GetProjEnvLogEntriesNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetProjEnvLogEntriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjEnvLogEntriesUnprocessableEntity creates a GetProjEnvLogEntriesUnprocessableEntity with default headers values
func NewGetProjEnvLogEntriesUnprocessableEntity() *GetProjEnvLogEntriesUnprocessableEntity {
	return &GetProjEnvLogEntriesUnprocessableEntity{}
}

/*
GetProjEnvLogEntriesUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type GetProjEnvLogEntriesUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get proj env log entries unprocessable entity response has a 2xx status code
func (o *GetProjEnvLogEntriesUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get proj env log entries unprocessable entity response has a 3xx status code
func (o *GetProjEnvLogEntriesUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get proj env log entries unprocessable entity response has a 4xx status code
func (o *GetProjEnvLogEntriesUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get proj env log entries unprocessable entity response has a 5xx status code
func (o *GetProjEnvLogEntriesUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get proj env log entries unprocessable entity response a status code equal to that given
func (o *GetProjEnvLogEntriesUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get proj env log entries unprocessable entity response
func (o *GetProjEnvLogEntriesUnprocessableEntity) Code() int {
	return 422
}

func (o *GetProjEnvLogEntriesUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntriesUnprocessableEntity %s", 422, payload)
}

func (o *GetProjEnvLogEntriesUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntriesUnprocessableEntity %s", 422, payload)
}

func (o *GetProjEnvLogEntriesUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetProjEnvLogEntriesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjEnvLogEntriesDefault creates a GetProjEnvLogEntriesDefault with default headers values
func NewGetProjEnvLogEntriesDefault(code int) *GetProjEnvLogEntriesDefault {
	return &GetProjEnvLogEntriesDefault{
		_statusCode: code,
	}
}

/*
GetProjEnvLogEntriesDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetProjEnvLogEntriesDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get proj env log entries default response has a 2xx status code
func (o *GetProjEnvLogEntriesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get proj env log entries default response has a 3xx status code
func (o *GetProjEnvLogEntriesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get proj env log entries default response has a 4xx status code
func (o *GetProjEnvLogEntriesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get proj env log entries default response has a 5xx status code
func (o *GetProjEnvLogEntriesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get proj env log entries default response a status code equal to that given
func (o *GetProjEnvLogEntriesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get proj env log entries default response
func (o *GetProjEnvLogEntriesDefault) Code() int {
	return o._statusCode
}

func (o *GetProjEnvLogEntriesDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntries default %s", o._statusCode, payload)
}

func (o *GetProjEnvLogEntriesDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}][%d] getProjEnvLogEntries default %s", o._statusCode, payload)
}

func (o *GetProjEnvLogEntriesDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetProjEnvLogEntriesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetProjEnvLogEntriesOKBody The list of log lines
swagger:model GetProjEnvLogEntriesOKBody
*/
type GetProjEnvLogEntriesOKBody struct {

	// data
	// Required: true
	Data []*models.LogSourceEntry `json:"data"`
}

// Validate validates this get proj env log entries o k body
func (o *GetProjEnvLogEntriesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetProjEnvLogEntriesOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getProjEnvLogEntriesOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getProjEnvLogEntriesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getProjEnvLogEntriesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get proj env log entries o k body based on the context it is used
func (o *GetProjEnvLogEntriesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetProjEnvLogEntriesOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getProjEnvLogEntriesOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getProjEnvLogEntriesOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetProjEnvLogEntriesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetProjEnvLogEntriesOKBody) UnmarshalBinary(b []byte) error {
	var res GetProjEnvLogEntriesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
