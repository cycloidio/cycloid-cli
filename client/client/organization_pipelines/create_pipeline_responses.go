// Code generated by go-swagger; DO NOT EDIT.

package organization_pipelines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// CreatePipelineReader is a Reader for the CreatePipeline structure.
type CreatePipelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePipelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreatePipelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCreatePipelineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreatePipelineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 411:
		result := NewCreatePipelineLengthRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreatePipelineUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreatePipelineDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreatePipelineOK creates a CreatePipelineOK with default headers values
func NewCreatePipelineOK() *CreatePipelineOK {
	return &CreatePipelineOK{}
}

/*
CreatePipelineOK describes a response with status code 200, with default header values.

The information of the pipeline which has been created.
*/
type CreatePipelineOK struct {
	Payload *CreatePipelineOKBody
}

// IsSuccess returns true when this create pipeline o k response has a 2xx status code
func (o *CreatePipelineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create pipeline o k response has a 3xx status code
func (o *CreatePipelineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline o k response has a 4xx status code
func (o *CreatePipelineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create pipeline o k response has a 5xx status code
func (o *CreatePipelineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create pipeline o k response a status code equal to that given
func (o *CreatePipelineOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create pipeline o k response
func (o *CreatePipelineOK) Code() int {
	return 200
}

func (o *CreatePipelineOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineOK %s", 200, payload)
}

func (o *CreatePipelineOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineOK %s", 200, payload)
}

func (o *CreatePipelineOK) GetPayload() *CreatePipelineOKBody {
	return o.Payload
}

func (o *CreatePipelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreatePipelineOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePipelineForbidden creates a CreatePipelineForbidden with default headers values
func NewCreatePipelineForbidden() *CreatePipelineForbidden {
	return &CreatePipelineForbidden{}
}

/*
CreatePipelineForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type CreatePipelineForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create pipeline forbidden response has a 2xx status code
func (o *CreatePipelineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pipeline forbidden response has a 3xx status code
func (o *CreatePipelineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline forbidden response has a 4xx status code
func (o *CreatePipelineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pipeline forbidden response has a 5xx status code
func (o *CreatePipelineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create pipeline forbidden response a status code equal to that given
func (o *CreatePipelineForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create pipeline forbidden response
func (o *CreatePipelineForbidden) Code() int {
	return 403
}

func (o *CreatePipelineForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineForbidden %s", 403, payload)
}

func (o *CreatePipelineForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineForbidden %s", 403, payload)
}

func (o *CreatePipelineForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreatePipelineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePipelineNotFound creates a CreatePipelineNotFound with default headers values
func NewCreatePipelineNotFound() *CreatePipelineNotFound {
	return &CreatePipelineNotFound{}
}

/*
CreatePipelineNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type CreatePipelineNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create pipeline not found response has a 2xx status code
func (o *CreatePipelineNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pipeline not found response has a 3xx status code
func (o *CreatePipelineNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline not found response has a 4xx status code
func (o *CreatePipelineNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pipeline not found response has a 5xx status code
func (o *CreatePipelineNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create pipeline not found response a status code equal to that given
func (o *CreatePipelineNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create pipeline not found response
func (o *CreatePipelineNotFound) Code() int {
	return 404
}

func (o *CreatePipelineNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineNotFound %s", 404, payload)
}

func (o *CreatePipelineNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineNotFound %s", 404, payload)
}

func (o *CreatePipelineNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreatePipelineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePipelineLengthRequired creates a CreatePipelineLengthRequired with default headers values
func NewCreatePipelineLengthRequired() *CreatePipelineLengthRequired {
	return &CreatePipelineLengthRequired{}
}

/*
CreatePipelineLengthRequired describes a response with status code 411, with default header values.

The request has a body but it doesn't have a Content-Length header.
*/
type CreatePipelineLengthRequired struct {
}

// IsSuccess returns true when this create pipeline length required response has a 2xx status code
func (o *CreatePipelineLengthRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pipeline length required response has a 3xx status code
func (o *CreatePipelineLengthRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline length required response has a 4xx status code
func (o *CreatePipelineLengthRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pipeline length required response has a 5xx status code
func (o *CreatePipelineLengthRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this create pipeline length required response a status code equal to that given
func (o *CreatePipelineLengthRequired) IsCode(code int) bool {
	return code == 411
}

// Code gets the status code for the create pipeline length required response
func (o *CreatePipelineLengthRequired) Code() int {
	return 411
}

func (o *CreatePipelineLengthRequired) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineLengthRequired", 411)
}

func (o *CreatePipelineLengthRequired) String() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineLengthRequired", 411)
}

func (o *CreatePipelineLengthRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePipelineUnprocessableEntity creates a CreatePipelineUnprocessableEntity with default headers values
func NewCreatePipelineUnprocessableEntity() *CreatePipelineUnprocessableEntity {
	return &CreatePipelineUnprocessableEntity{}
}

/*
CreatePipelineUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type CreatePipelineUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create pipeline unprocessable entity response has a 2xx status code
func (o *CreatePipelineUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create pipeline unprocessable entity response has a 3xx status code
func (o *CreatePipelineUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create pipeline unprocessable entity response has a 4xx status code
func (o *CreatePipelineUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create pipeline unprocessable entity response has a 5xx status code
func (o *CreatePipelineUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create pipeline unprocessable entity response a status code equal to that given
func (o *CreatePipelineUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create pipeline unprocessable entity response
func (o *CreatePipelineUnprocessableEntity) Code() int {
	return 422
}

func (o *CreatePipelineUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineUnprocessableEntity %s", 422, payload)
}

func (o *CreatePipelineUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipelineUnprocessableEntity %s", 422, payload)
}

func (o *CreatePipelineUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreatePipelineUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePipelineDefault creates a CreatePipelineDefault with default headers values
func NewCreatePipelineDefault(code int) *CreatePipelineDefault {
	return &CreatePipelineDefault{
		_statusCode: code,
	}
}

/*
CreatePipelineDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type CreatePipelineDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create pipeline default response has a 2xx status code
func (o *CreatePipelineDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create pipeline default response has a 3xx status code
func (o *CreatePipelineDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create pipeline default response has a 4xx status code
func (o *CreatePipelineDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create pipeline default response has a 5xx status code
func (o *CreatePipelineDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create pipeline default response a status code equal to that given
func (o *CreatePipelineDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create pipeline default response
func (o *CreatePipelineDefault) Code() int {
	return o._statusCode
}

func (o *CreatePipelineDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipeline default %s", o._statusCode, payload)
}

func (o *CreatePipelineDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/projects/{project_canonical}/pipelines][%d] createPipeline default %s", o._statusCode, payload)
}

func (o *CreatePipelineDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreatePipelineDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreatePipelineOKBody create pipeline o k body
swagger:model CreatePipelineOKBody
*/
type CreatePipelineOKBody struct {

	// data
	// Required: true
	Data *models.Pipeline `json:"data"`
}

// Validate validates this create pipeline o k body
func (o *CreatePipelineOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreatePipelineOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("createPipelineOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createPipelineOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createPipelineOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create pipeline o k body based on the context it is used
func (o *CreatePipelineOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreatePipelineOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createPipelineOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createPipelineOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreatePipelineOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreatePipelineOKBody) UnmarshalBinary(b []byte) error {
	var res CreatePipelineOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
