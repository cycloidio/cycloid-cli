// Code generated by go-swagger; DO NOT EDIT.

package organization_pipelines_jobs_build

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetBuildsReader is a Reader for the GetBuilds structure.
type GetBuildsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBuildsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBuildsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetBuildsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBuildsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetBuildsUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetBuildsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBuildsOK creates a GetBuildsOK with default headers values
func NewGetBuildsOK() *GetBuildsOK {
	return &GetBuildsOK{}
}

/*
GetBuildsOK describes a response with status code 200, with default header values.

List the pipeline job's builds which authenticated user has access to.
*/
type GetBuildsOK struct {
	Payload *GetBuildsOKBody
}

// IsSuccess returns true when this get builds o k response has a 2xx status code
func (o *GetBuildsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get builds o k response has a 3xx status code
func (o *GetBuildsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get builds o k response has a 4xx status code
func (o *GetBuildsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get builds o k response has a 5xx status code
func (o *GetBuildsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get builds o k response a status code equal to that given
func (o *GetBuildsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get builds o k response
func (o *GetBuildsOK) Code() int {
	return 200
}

func (o *GetBuildsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuildsOK %s", 200, payload)
}

func (o *GetBuildsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuildsOK %s", 200, payload)
}

func (o *GetBuildsOK) GetPayload() *GetBuildsOKBody {
	return o.Payload
}

func (o *GetBuildsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetBuildsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildsForbidden creates a GetBuildsForbidden with default headers values
func NewGetBuildsForbidden() *GetBuildsForbidden {
	return &GetBuildsForbidden{}
}

/*
GetBuildsForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetBuildsForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get builds forbidden response has a 2xx status code
func (o *GetBuildsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get builds forbidden response has a 3xx status code
func (o *GetBuildsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get builds forbidden response has a 4xx status code
func (o *GetBuildsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get builds forbidden response has a 5xx status code
func (o *GetBuildsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get builds forbidden response a status code equal to that given
func (o *GetBuildsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get builds forbidden response
func (o *GetBuildsForbidden) Code() int {
	return 403
}

func (o *GetBuildsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuildsForbidden %s", 403, payload)
}

func (o *GetBuildsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuildsForbidden %s", 403, payload)
}

func (o *GetBuildsForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetBuildsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildsNotFound creates a GetBuildsNotFound with default headers values
func NewGetBuildsNotFound() *GetBuildsNotFound {
	return &GetBuildsNotFound{}
}

/*
GetBuildsNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetBuildsNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get builds not found response has a 2xx status code
func (o *GetBuildsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get builds not found response has a 3xx status code
func (o *GetBuildsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get builds not found response has a 4xx status code
func (o *GetBuildsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get builds not found response has a 5xx status code
func (o *GetBuildsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get builds not found response a status code equal to that given
func (o *GetBuildsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get builds not found response
func (o *GetBuildsNotFound) Code() int {
	return 404
}

func (o *GetBuildsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuildsNotFound %s", 404, payload)
}

func (o *GetBuildsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuildsNotFound %s", 404, payload)
}

func (o *GetBuildsNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetBuildsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildsUnprocessableEntity creates a GetBuildsUnprocessableEntity with default headers values
func NewGetBuildsUnprocessableEntity() *GetBuildsUnprocessableEntity {
	return &GetBuildsUnprocessableEntity{}
}

/*
GetBuildsUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type GetBuildsUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get builds unprocessable entity response has a 2xx status code
func (o *GetBuildsUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get builds unprocessable entity response has a 3xx status code
func (o *GetBuildsUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get builds unprocessable entity response has a 4xx status code
func (o *GetBuildsUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get builds unprocessable entity response has a 5xx status code
func (o *GetBuildsUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get builds unprocessable entity response a status code equal to that given
func (o *GetBuildsUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get builds unprocessable entity response
func (o *GetBuildsUnprocessableEntity) Code() int {
	return 422
}

func (o *GetBuildsUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuildsUnprocessableEntity %s", 422, payload)
}

func (o *GetBuildsUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuildsUnprocessableEntity %s", 422, payload)
}

func (o *GetBuildsUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetBuildsUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildsDefault creates a GetBuildsDefault with default headers values
func NewGetBuildsDefault(code int) *GetBuildsDefault {
	return &GetBuildsDefault{
		_statusCode: code,
	}
}

/*
GetBuildsDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetBuildsDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get builds default response has a 2xx status code
func (o *GetBuildsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get builds default response has a 3xx status code
func (o *GetBuildsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get builds default response has a 4xx status code
func (o *GetBuildsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get builds default response has a 5xx status code
func (o *GetBuildsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get builds default response a status code equal to that given
func (o *GetBuildsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get builds default response
func (o *GetBuildsDefault) Code() int {
	return o._statusCode
}

func (o *GetBuildsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuilds default %s", o._statusCode, payload)
}

func (o *GetBuildsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds][%d] getBuilds default %s", o._statusCode, payload)
}

func (o *GetBuildsDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetBuildsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetBuildsOKBody get builds o k body
swagger:model GetBuildsOKBody
*/
type GetBuildsOKBody struct {

	// data
	// Required: true
	Data []*models.Build `json:"data"`

	// pagination concourse
	// Required: true
	PaginationConcourse *models.PaginationConcourse `json:"pagination_concourse"`
}

// Validate validates this get builds o k body
func (o *GetBuildsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePaginationConcourse(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBuildsOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("getBuildsOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	for i := 0; i < len(o.Data); i++ {
		if swag.IsZero(o.Data[i]) { // not required
			continue
		}

		if o.Data[i] != nil {
			if err := o.Data[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getBuildsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getBuildsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetBuildsOKBody) validatePaginationConcourse(formats strfmt.Registry) error {

	if err := validate.Required("getBuildsOK"+"."+"pagination_concourse", "body", o.PaginationConcourse); err != nil {
		return err
	}

	if o.PaginationConcourse != nil {
		if err := o.PaginationConcourse.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBuildsOK" + "." + "pagination_concourse")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBuildsOK" + "." + "pagination_concourse")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get builds o k body based on the context it is used
func (o *GetBuildsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePaginationConcourse(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetBuildsOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(o.Data); i++ {

		if o.Data[i] != nil {

			if swag.IsZero(o.Data[i]) { // not required
				return nil
			}

			if err := o.Data[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getBuildsOK" + "." + "data" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getBuildsOK" + "." + "data" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetBuildsOKBody) contextValidatePaginationConcourse(ctx context.Context, formats strfmt.Registry) error {

	if o.PaginationConcourse != nil {

		if err := o.PaginationConcourse.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getBuildsOK" + "." + "pagination_concourse")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getBuildsOK" + "." + "pagination_concourse")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetBuildsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetBuildsOKBody) UnmarshalBinary(b []byte) error {
	var res GetBuildsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
