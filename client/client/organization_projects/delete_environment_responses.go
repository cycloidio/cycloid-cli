// Code generated by go-swagger; DO NOT EDIT.

package organization_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// DeleteEnvironmentReader is a Reader for the DeleteEnvironment structure.
type DeleteEnvironmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteEnvironmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteEnvironmentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteEnvironmentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteEnvironmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteEnvironmentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteEnvironmentNoContent creates a DeleteEnvironmentNoContent with default headers values
func NewDeleteEnvironmentNoContent() *DeleteEnvironmentNoContent {
	return &DeleteEnvironmentNoContent{}
}

/*
DeleteEnvironmentNoContent describes a response with status code 204, with default header values.

Project environment has been deleted.
*/
type DeleteEnvironmentNoContent struct {
}

// IsSuccess returns true when this delete environment no content response has a 2xx status code
func (o *DeleteEnvironmentNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete environment no content response has a 3xx status code
func (o *DeleteEnvironmentNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete environment no content response has a 4xx status code
func (o *DeleteEnvironmentNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete environment no content response has a 5xx status code
func (o *DeleteEnvironmentNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete environment no content response a status code equal to that given
func (o *DeleteEnvironmentNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete environment no content response
func (o *DeleteEnvironmentNoContent) Code() int {
	return 204
}

func (o *DeleteEnvironmentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}][%d] deleteEnvironmentNoContent", 204)
}

func (o *DeleteEnvironmentNoContent) String() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}][%d] deleteEnvironmentNoContent", 204)
}

func (o *DeleteEnvironmentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteEnvironmentForbidden creates a DeleteEnvironmentForbidden with default headers values
func NewDeleteEnvironmentForbidden() *DeleteEnvironmentForbidden {
	return &DeleteEnvironmentForbidden{}
}

/*
DeleteEnvironmentForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type DeleteEnvironmentForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this delete environment forbidden response has a 2xx status code
func (o *DeleteEnvironmentForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete environment forbidden response has a 3xx status code
func (o *DeleteEnvironmentForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete environment forbidden response has a 4xx status code
func (o *DeleteEnvironmentForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete environment forbidden response has a 5xx status code
func (o *DeleteEnvironmentForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete environment forbidden response a status code equal to that given
func (o *DeleteEnvironmentForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete environment forbidden response
func (o *DeleteEnvironmentForbidden) Code() int {
	return 403
}

func (o *DeleteEnvironmentForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}][%d] deleteEnvironmentForbidden %s", 403, payload)
}

func (o *DeleteEnvironmentForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}][%d] deleteEnvironmentForbidden %s", 403, payload)
}

func (o *DeleteEnvironmentForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteEnvironmentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEnvironmentNotFound creates a DeleteEnvironmentNotFound with default headers values
func NewDeleteEnvironmentNotFound() *DeleteEnvironmentNotFound {
	return &DeleteEnvironmentNotFound{}
}

/*
DeleteEnvironmentNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type DeleteEnvironmentNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this delete environment not found response has a 2xx status code
func (o *DeleteEnvironmentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete environment not found response has a 3xx status code
func (o *DeleteEnvironmentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete environment not found response has a 4xx status code
func (o *DeleteEnvironmentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete environment not found response has a 5xx status code
func (o *DeleteEnvironmentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete environment not found response a status code equal to that given
func (o *DeleteEnvironmentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete environment not found response
func (o *DeleteEnvironmentNotFound) Code() int {
	return 404
}

func (o *DeleteEnvironmentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}][%d] deleteEnvironmentNotFound %s", 404, payload)
}

func (o *DeleteEnvironmentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}][%d] deleteEnvironmentNotFound %s", 404, payload)
}

func (o *DeleteEnvironmentNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteEnvironmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteEnvironmentDefault creates a DeleteEnvironmentDefault with default headers values
func NewDeleteEnvironmentDefault(code int) *DeleteEnvironmentDefault {
	return &DeleteEnvironmentDefault{
		_statusCode: code,
	}
}

/*
DeleteEnvironmentDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type DeleteEnvironmentDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this delete environment default response has a 2xx status code
func (o *DeleteEnvironmentDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete environment default response has a 3xx status code
func (o *DeleteEnvironmentDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete environment default response has a 4xx status code
func (o *DeleteEnvironmentDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete environment default response has a 5xx status code
func (o *DeleteEnvironmentDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete environment default response a status code equal to that given
func (o *DeleteEnvironmentDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete environment default response
func (o *DeleteEnvironmentDefault) Code() int {
	return o._statusCode
}

func (o *DeleteEnvironmentDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}][%d] deleteEnvironment default %s", o._statusCode, payload)
}

func (o *DeleteEnvironmentDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}][%d] deleteEnvironment default %s", o._statusCode, payload)
}

func (o *DeleteEnvironmentDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteEnvironmentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
