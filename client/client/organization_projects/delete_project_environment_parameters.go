// Code generated by go-swagger; DO NOT EDIT.

package organization_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteProjectEnvironmentParams creates a new DeleteProjectEnvironmentParams object
// with the default values initialized.
func NewDeleteProjectEnvironmentParams() *DeleteProjectEnvironmentParams {
	var ()
	return &DeleteProjectEnvironmentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteProjectEnvironmentParamsWithTimeout creates a new DeleteProjectEnvironmentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteProjectEnvironmentParamsWithTimeout(timeout time.Duration) *DeleteProjectEnvironmentParams {
	var ()
	return &DeleteProjectEnvironmentParams{

		timeout: timeout,
	}
}

// NewDeleteProjectEnvironmentParamsWithContext creates a new DeleteProjectEnvironmentParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteProjectEnvironmentParamsWithContext(ctx context.Context) *DeleteProjectEnvironmentParams {
	var ()
	return &DeleteProjectEnvironmentParams{

		Context: ctx,
	}
}

// NewDeleteProjectEnvironmentParamsWithHTTPClient creates a new DeleteProjectEnvironmentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteProjectEnvironmentParamsWithHTTPClient(client *http.Client) *DeleteProjectEnvironmentParams {
	var ()
	return &DeleteProjectEnvironmentParams{
		HTTPClient: client,
	}
}

/*DeleteProjectEnvironmentParams contains all the parameters to send to the API endpoint
for the delete project environment operation typically these are written to a http.Request
*/
type DeleteProjectEnvironmentParams struct {

	/*EnvironmentCanonical
	  The environment canonical to use as part of a path

	*/
	EnvironmentCanonical string
	/*OrganizationCanonical
	  A canonical of an organization.

	*/
	OrganizationCanonical string
	/*ProjectCanonical
	  A canonical of a project.

	*/
	ProjectCanonical string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete project environment params
func (o *DeleteProjectEnvironmentParams) WithTimeout(timeout time.Duration) *DeleteProjectEnvironmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete project environment params
func (o *DeleteProjectEnvironmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete project environment params
func (o *DeleteProjectEnvironmentParams) WithContext(ctx context.Context) *DeleteProjectEnvironmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete project environment params
func (o *DeleteProjectEnvironmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete project environment params
func (o *DeleteProjectEnvironmentParams) WithHTTPClient(client *http.Client) *DeleteProjectEnvironmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete project environment params
func (o *DeleteProjectEnvironmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEnvironmentCanonical adds the environmentCanonical to the delete project environment params
func (o *DeleteProjectEnvironmentParams) WithEnvironmentCanonical(environmentCanonical string) *DeleteProjectEnvironmentParams {
	o.SetEnvironmentCanonical(environmentCanonical)
	return o
}

// SetEnvironmentCanonical adds the environmentCanonical to the delete project environment params
func (o *DeleteProjectEnvironmentParams) SetEnvironmentCanonical(environmentCanonical string) {
	o.EnvironmentCanonical = environmentCanonical
}

// WithOrganizationCanonical adds the organizationCanonical to the delete project environment params
func (o *DeleteProjectEnvironmentParams) WithOrganizationCanonical(organizationCanonical string) *DeleteProjectEnvironmentParams {
	o.SetOrganizationCanonical(organizationCanonical)
	return o
}

// SetOrganizationCanonical adds the organizationCanonical to the delete project environment params
func (o *DeleteProjectEnvironmentParams) SetOrganizationCanonical(organizationCanonical string) {
	o.OrganizationCanonical = organizationCanonical
}

// WithProjectCanonical adds the projectCanonical to the delete project environment params
func (o *DeleteProjectEnvironmentParams) WithProjectCanonical(projectCanonical string) *DeleteProjectEnvironmentParams {
	o.SetProjectCanonical(projectCanonical)
	return o
}

// SetProjectCanonical adds the projectCanonical to the delete project environment params
func (o *DeleteProjectEnvironmentParams) SetProjectCanonical(projectCanonical string) {
	o.ProjectCanonical = projectCanonical
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteProjectEnvironmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param environment_canonical
	if err := r.SetPathParam("environment_canonical", o.EnvironmentCanonical); err != nil {
		return err
	}

	// path param organization_canonical
	if err := r.SetPathParam("organization_canonical", o.OrganizationCanonical); err != nil {
		return err
	}

	// path param project_canonical
	if err := r.SetPathParam("project_canonical", o.ProjectCanonical); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
