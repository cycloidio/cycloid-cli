// Code generated by go-swagger; DO NOT EDIT.

package organization_projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetProjectConfigReader is a Reader for the GetProjectConfig structure.
type GetProjectConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProjectConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProjectConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetProjectConfigForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetProjectConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewGetProjectConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetProjectConfigDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetProjectConfigOK creates a GetProjectConfigOK with default headers values
func NewGetProjectConfigOK() *GetProjectConfigOK {
	return &GetProjectConfigOK{}
}

/*
GetProjectConfigOK describes a response with status code 200, with default header values.

Set of config to create the project / push onto repositories
*/
type GetProjectConfigOK struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *GetProjectConfigOKBody
}

// IsSuccess returns true when this get project config o k response has a 2xx status code
func (o *GetProjectConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get project config o k response has a 3xx status code
func (o *GetProjectConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project config o k response has a 4xx status code
func (o *GetProjectConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get project config o k response has a 5xx status code
func (o *GetProjectConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get project config o k response a status code equal to that given
func (o *GetProjectConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get project config o k response
func (o *GetProjectConfigOK) Code() int {
	return 200
}

func (o *GetProjectConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfigOK %s", 200, payload)
}

func (o *GetProjectConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfigOK %s", 200, payload)
}

func (o *GetProjectConfigOK) GetPayload() *GetProjectConfigOKBody {
	return o.Payload
}

func (o *GetProjectConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(GetProjectConfigOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectConfigForbidden creates a GetProjectConfigForbidden with default headers values
func NewGetProjectConfigForbidden() *GetProjectConfigForbidden {
	return &GetProjectConfigForbidden{}
}

/*
GetProjectConfigForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetProjectConfigForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get project config forbidden response has a 2xx status code
func (o *GetProjectConfigForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project config forbidden response has a 3xx status code
func (o *GetProjectConfigForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project config forbidden response has a 4xx status code
func (o *GetProjectConfigForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project config forbidden response has a 5xx status code
func (o *GetProjectConfigForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get project config forbidden response a status code equal to that given
func (o *GetProjectConfigForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get project config forbidden response
func (o *GetProjectConfigForbidden) Code() int {
	return 403
}

func (o *GetProjectConfigForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfigForbidden %s", 403, payload)
}

func (o *GetProjectConfigForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfigForbidden %s", 403, payload)
}

func (o *GetProjectConfigForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetProjectConfigForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectConfigNotFound creates a GetProjectConfigNotFound with default headers values
func NewGetProjectConfigNotFound() *GetProjectConfigNotFound {
	return &GetProjectConfigNotFound{}
}

/*
GetProjectConfigNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetProjectConfigNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get project config not found response has a 2xx status code
func (o *GetProjectConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project config not found response has a 3xx status code
func (o *GetProjectConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project config not found response has a 4xx status code
func (o *GetProjectConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project config not found response has a 5xx status code
func (o *GetProjectConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get project config not found response a status code equal to that given
func (o *GetProjectConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get project config not found response
func (o *GetProjectConfigNotFound) Code() int {
	return 404
}

func (o *GetProjectConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfigNotFound %s", 404, payload)
}

func (o *GetProjectConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfigNotFound %s", 404, payload)
}

func (o *GetProjectConfigNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetProjectConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectConfigUnprocessableEntity creates a GetProjectConfigUnprocessableEntity with default headers values
func NewGetProjectConfigUnprocessableEntity() *GetProjectConfigUnprocessableEntity {
	return &GetProjectConfigUnprocessableEntity{}
}

/*
GetProjectConfigUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type GetProjectConfigUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get project config unprocessable entity response has a 2xx status code
func (o *GetProjectConfigUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get project config unprocessable entity response has a 3xx status code
func (o *GetProjectConfigUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get project config unprocessable entity response has a 4xx status code
func (o *GetProjectConfigUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this get project config unprocessable entity response has a 5xx status code
func (o *GetProjectConfigUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this get project config unprocessable entity response a status code equal to that given
func (o *GetProjectConfigUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the get project config unprocessable entity response
func (o *GetProjectConfigUnprocessableEntity) Code() int {
	return 422
}

func (o *GetProjectConfigUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfigUnprocessableEntity %s", 422, payload)
}

func (o *GetProjectConfigUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfigUnprocessableEntity %s", 422, payload)
}

func (o *GetProjectConfigUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetProjectConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetProjectConfigDefault creates a GetProjectConfigDefault with default headers values
func NewGetProjectConfigDefault(code int) *GetProjectConfigDefault {
	return &GetProjectConfigDefault{
		_statusCode: code,
	}
}

/*
GetProjectConfigDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetProjectConfigDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get project config default response has a 2xx status code
func (o *GetProjectConfigDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get project config default response has a 3xx status code
func (o *GetProjectConfigDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get project config default response has a 4xx status code
func (o *GetProjectConfigDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get project config default response has a 5xx status code
func (o *GetProjectConfigDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get project config default response a status code equal to that given
func (o *GetProjectConfigDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get project config default response
func (o *GetProjectConfigDefault) Code() int {
	return o._statusCode
}

func (o *GetProjectConfigDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfig default %s", o._statusCode, payload)
}

func (o *GetProjectConfigDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/projects/{project_canonical}/environment/{environment_canonical}/config][%d] getProjectConfig default %s", o._statusCode, payload)
}

func (o *GetProjectConfigDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetProjectConfigDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetProjectConfigOKBody get project config o k body
swagger:model GetProjectConfigOKBody
*/
type GetProjectConfigOKBody struct {

	// data
	Data *models.ProjectEnvironmentConfig `json:"data,omitempty"`
}

// Validate validates this get project config o k body
func (o *GetProjectConfigOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetProjectConfigOKBody) validateData(formats strfmt.Registry) error {
	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getProjectConfigOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getProjectConfigOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get project config o k body based on the context it is used
func (o *GetProjectConfigOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetProjectConfigOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if swag.IsZero(o.Data) { // not required
			return nil
		}

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getProjectConfigOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getProjectConfigOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetProjectConfigOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetProjectConfigOKBody) UnmarshalBinary(b []byte) error {
	var res GetProjectConfigOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
