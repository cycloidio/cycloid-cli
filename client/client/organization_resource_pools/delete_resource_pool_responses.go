// Code generated by go-swagger; DO NOT EDIT.

package organization_resource_pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// DeleteResourcePoolReader is a Reader for the DeleteResourcePool structure.
type DeleteResourcePoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResourcePoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteResourcePoolNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewDeleteResourcePoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteResourcePoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewDeleteResourcePoolDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteResourcePoolNoContent creates a DeleteResourcePoolNoContent with default headers values
func NewDeleteResourcePoolNoContent() *DeleteResourcePoolNoContent {
	return &DeleteResourcePoolNoContent{}
}

/*
DeleteResourcePoolNoContent describes a response with status code 204, with default header values.

Organization resource_pool has been deleted.
*/
type DeleteResourcePoolNoContent struct {
}

// IsSuccess returns true when this delete resource pool no content response has a 2xx status code
func (o *DeleteResourcePoolNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete resource pool no content response has a 3xx status code
func (o *DeleteResourcePoolNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource pool no content response has a 4xx status code
func (o *DeleteResourcePoolNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resource pool no content response has a 5xx status code
func (o *DeleteResourcePoolNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource pool no content response a status code equal to that given
func (o *DeleteResourcePoolNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete resource pool no content response
func (o *DeleteResourcePoolNoContent) Code() int {
	return 204
}

func (o *DeleteResourcePoolNoContent) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] deleteResourcePoolNoContent", 204)
}

func (o *DeleteResourcePoolNoContent) String() string {
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] deleteResourcePoolNoContent", 204)
}

func (o *DeleteResourcePoolNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourcePoolForbidden creates a DeleteResourcePoolForbidden with default headers values
func NewDeleteResourcePoolForbidden() *DeleteResourcePoolForbidden {
	return &DeleteResourcePoolForbidden{}
}

/*
DeleteResourcePoolForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type DeleteResourcePoolForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this delete resource pool forbidden response has a 2xx status code
func (o *DeleteResourcePoolForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource pool forbidden response has a 3xx status code
func (o *DeleteResourcePoolForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource pool forbidden response has a 4xx status code
func (o *DeleteResourcePoolForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource pool forbidden response has a 5xx status code
func (o *DeleteResourcePoolForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource pool forbidden response a status code equal to that given
func (o *DeleteResourcePoolForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete resource pool forbidden response
func (o *DeleteResourcePoolForbidden) Code() int {
	return 403
}

func (o *DeleteResourcePoolForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] deleteResourcePoolForbidden %s", 403, payload)
}

func (o *DeleteResourcePoolForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] deleteResourcePoolForbidden %s", 403, payload)
}

func (o *DeleteResourcePoolForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteResourcePoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourcePoolNotFound creates a DeleteResourcePoolNotFound with default headers values
func NewDeleteResourcePoolNotFound() *DeleteResourcePoolNotFound {
	return &DeleteResourcePoolNotFound{}
}

/*
DeleteResourcePoolNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type DeleteResourcePoolNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this delete resource pool not found response has a 2xx status code
func (o *DeleteResourcePoolNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resource pool not found response has a 3xx status code
func (o *DeleteResourcePoolNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resource pool not found response has a 4xx status code
func (o *DeleteResourcePoolNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resource pool not found response has a 5xx status code
func (o *DeleteResourcePoolNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resource pool not found response a status code equal to that given
func (o *DeleteResourcePoolNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete resource pool not found response
func (o *DeleteResourcePoolNotFound) Code() int {
	return 404
}

func (o *DeleteResourcePoolNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] deleteResourcePoolNotFound %s", 404, payload)
}

func (o *DeleteResourcePoolNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] deleteResourcePoolNotFound %s", 404, payload)
}

func (o *DeleteResourcePoolNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteResourcePoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourcePoolDefault creates a DeleteResourcePoolDefault with default headers values
func NewDeleteResourcePoolDefault(code int) *DeleteResourcePoolDefault {
	return &DeleteResourcePoolDefault{
		_statusCode: code,
	}
}

/*
DeleteResourcePoolDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type DeleteResourcePoolDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this delete resource pool default response has a 2xx status code
func (o *DeleteResourcePoolDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete resource pool default response has a 3xx status code
func (o *DeleteResourcePoolDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete resource pool default response has a 4xx status code
func (o *DeleteResourcePoolDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete resource pool default response has a 5xx status code
func (o *DeleteResourcePoolDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete resource pool default response a status code equal to that given
func (o *DeleteResourcePoolDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete resource pool default response
func (o *DeleteResourcePoolDefault) Code() int {
	return o._statusCode
}

func (o *DeleteResourcePoolDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] deleteResourcePool default %s", o._statusCode, payload)
}

func (o *DeleteResourcePoolDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] deleteResourcePool default %s", o._statusCode, payload)
}

func (o *DeleteResourcePoolDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteResourcePoolDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
