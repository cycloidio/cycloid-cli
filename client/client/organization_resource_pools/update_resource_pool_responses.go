// Code generated by go-swagger; DO NOT EDIT.

package organization_resource_pools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// UpdateResourcePoolReader is a Reader for the UpdateResourcePool structure.
type UpdateResourcePoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateResourcePoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateResourcePoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateResourcePoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateResourcePoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateResourcePoolUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateResourcePoolDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateResourcePoolOK creates a UpdateResourcePoolOK with default headers values
func NewUpdateResourcePoolOK() *UpdateResourcePoolOK {
	return &UpdateResourcePoolOK{}
}

/*
UpdateResourcePoolOK describes a response with status code 200, with default header values.

Updated resource pool belonging to the organization.
*/
type UpdateResourcePoolOK struct {
	Payload *UpdateResourcePoolOKBody
}

// IsSuccess returns true when this update resource pool o k response has a 2xx status code
func (o *UpdateResourcePoolOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update resource pool o k response has a 3xx status code
func (o *UpdateResourcePoolOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource pool o k response has a 4xx status code
func (o *UpdateResourcePoolOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update resource pool o k response has a 5xx status code
func (o *UpdateResourcePoolOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource pool o k response a status code equal to that given
func (o *UpdateResourcePoolOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update resource pool o k response
func (o *UpdateResourcePoolOK) Code() int {
	return 200
}

func (o *UpdateResourcePoolOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePoolOK %s", 200, payload)
}

func (o *UpdateResourcePoolOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePoolOK %s", 200, payload)
}

func (o *UpdateResourcePoolOK) GetPayload() *UpdateResourcePoolOKBody {
	return o.Payload
}

func (o *UpdateResourcePoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateResourcePoolOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourcePoolForbidden creates a UpdateResourcePoolForbidden with default headers values
func NewUpdateResourcePoolForbidden() *UpdateResourcePoolForbidden {
	return &UpdateResourcePoolForbidden{}
}

/*
UpdateResourcePoolForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type UpdateResourcePoolForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this update resource pool forbidden response has a 2xx status code
func (o *UpdateResourcePoolForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource pool forbidden response has a 3xx status code
func (o *UpdateResourcePoolForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource pool forbidden response has a 4xx status code
func (o *UpdateResourcePoolForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource pool forbidden response has a 5xx status code
func (o *UpdateResourcePoolForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource pool forbidden response a status code equal to that given
func (o *UpdateResourcePoolForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update resource pool forbidden response
func (o *UpdateResourcePoolForbidden) Code() int {
	return 403
}

func (o *UpdateResourcePoolForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePoolForbidden %s", 403, payload)
}

func (o *UpdateResourcePoolForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePoolForbidden %s", 403, payload)
}

func (o *UpdateResourcePoolForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateResourcePoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourcePoolNotFound creates a UpdateResourcePoolNotFound with default headers values
func NewUpdateResourcePoolNotFound() *UpdateResourcePoolNotFound {
	return &UpdateResourcePoolNotFound{}
}

/*
UpdateResourcePoolNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type UpdateResourcePoolNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this update resource pool not found response has a 2xx status code
func (o *UpdateResourcePoolNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource pool not found response has a 3xx status code
func (o *UpdateResourcePoolNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource pool not found response has a 4xx status code
func (o *UpdateResourcePoolNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource pool not found response has a 5xx status code
func (o *UpdateResourcePoolNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource pool not found response a status code equal to that given
func (o *UpdateResourcePoolNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update resource pool not found response
func (o *UpdateResourcePoolNotFound) Code() int {
	return 404
}

func (o *UpdateResourcePoolNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePoolNotFound %s", 404, payload)
}

func (o *UpdateResourcePoolNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePoolNotFound %s", 404, payload)
}

func (o *UpdateResourcePoolNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateResourcePoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourcePoolUnprocessableEntity creates a UpdateResourcePoolUnprocessableEntity with default headers values
func NewUpdateResourcePoolUnprocessableEntity() *UpdateResourcePoolUnprocessableEntity {
	return &UpdateResourcePoolUnprocessableEntity{}
}

/*
UpdateResourcePoolUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type UpdateResourcePoolUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this update resource pool unprocessable entity response has a 2xx status code
func (o *UpdateResourcePoolUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resource pool unprocessable entity response has a 3xx status code
func (o *UpdateResourcePoolUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resource pool unprocessable entity response has a 4xx status code
func (o *UpdateResourcePoolUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resource pool unprocessable entity response has a 5xx status code
func (o *UpdateResourcePoolUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this update resource pool unprocessable entity response a status code equal to that given
func (o *UpdateResourcePoolUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the update resource pool unprocessable entity response
func (o *UpdateResourcePoolUnprocessableEntity) Code() int {
	return 422
}

func (o *UpdateResourcePoolUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePoolUnprocessableEntity %s", 422, payload)
}

func (o *UpdateResourcePoolUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePoolUnprocessableEntity %s", 422, payload)
}

func (o *UpdateResourcePoolUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateResourcePoolUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourcePoolDefault creates a UpdateResourcePoolDefault with default headers values
func NewUpdateResourcePoolDefault(code int) *UpdateResourcePoolDefault {
	return &UpdateResourcePoolDefault{
		_statusCode: code,
	}
}

/*
UpdateResourcePoolDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type UpdateResourcePoolDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this update resource pool default response has a 2xx status code
func (o *UpdateResourcePoolDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update resource pool default response has a 3xx status code
func (o *UpdateResourcePoolDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update resource pool default response has a 4xx status code
func (o *UpdateResourcePoolDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update resource pool default response has a 5xx status code
func (o *UpdateResourcePoolDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update resource pool default response a status code equal to that given
func (o *UpdateResourcePoolDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update resource pool default response
func (o *UpdateResourcePoolDefault) Code() int {
	return o._statusCode
}

func (o *UpdateResourcePoolDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePool default %s", o._statusCode, payload)
}

func (o *UpdateResourcePoolDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/resource_pools/{resource_pool_canonical}][%d] updateResourcePool default %s", o._statusCode, payload)
}

func (o *UpdateResourcePoolDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateResourcePoolDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
UpdateResourcePoolOKBody update resource pool o k body
swagger:model UpdateResourcePoolOKBody
*/
type UpdateResourcePoolOKBody struct {

	// data
	// Required: true
	Data *models.ResourcePool `json:"data"`
}

// Validate validates this update resource pool o k body
func (o *UpdateResourcePoolOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateResourcePoolOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("updateResourcePoolOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updateResourcePoolOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("updateResourcePoolOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this update resource pool o k body based on the context it is used
func (o *UpdateResourcePoolOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateResourcePoolOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("updateResourcePoolOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("updateResourcePoolOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateResourcePoolOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateResourcePoolOKBody) UnmarshalBinary(b []byte) error {
	var res UpdateResourcePoolOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
