// Code generated by go-swagger; DO NOT EDIT.

package organization_roles

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// CreateRoleReader is a Reader for the CreateRole structure.
type CreateRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewCreateRoleForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateRoleUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateRoleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateRoleOK creates a CreateRoleOK with default headers values
func NewCreateRoleOK() *CreateRoleOK {
	return &CreateRoleOK{}
}

/*
CreateRoleOK describes a response with status code 200, with default header values.

New role created in the organization.
*/
type CreateRoleOK struct {
	Payload *CreateRoleOKBody
}

// IsSuccess returns true when this create role o k response has a 2xx status code
func (o *CreateRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create role o k response has a 3xx status code
func (o *CreateRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create role o k response has a 4xx status code
func (o *CreateRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create role o k response has a 5xx status code
func (o *CreateRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create role o k response a status code equal to that given
func (o *CreateRoleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create role o k response
func (o *CreateRoleOK) Code() int {
	return 200
}

func (o *CreateRoleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRoleOK %s", 200, payload)
}

func (o *CreateRoleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRoleOK %s", 200, payload)
}

func (o *CreateRoleOK) GetPayload() *CreateRoleOKBody {
	return o.Payload
}

func (o *CreateRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateRoleOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRoleForbidden creates a CreateRoleForbidden with default headers values
func NewCreateRoleForbidden() *CreateRoleForbidden {
	return &CreateRoleForbidden{}
}

/*
CreateRoleForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type CreateRoleForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create role forbidden response has a 2xx status code
func (o *CreateRoleForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create role forbidden response has a 3xx status code
func (o *CreateRoleForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create role forbidden response has a 4xx status code
func (o *CreateRoleForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create role forbidden response has a 5xx status code
func (o *CreateRoleForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create role forbidden response a status code equal to that given
func (o *CreateRoleForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create role forbidden response
func (o *CreateRoleForbidden) Code() int {
	return 403
}

func (o *CreateRoleForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRoleForbidden %s", 403, payload)
}

func (o *CreateRoleForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRoleForbidden %s", 403, payload)
}

func (o *CreateRoleForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateRoleForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRoleNotFound creates a CreateRoleNotFound with default headers values
func NewCreateRoleNotFound() *CreateRoleNotFound {
	return &CreateRoleNotFound{}
}

/*
CreateRoleNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type CreateRoleNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create role not found response has a 2xx status code
func (o *CreateRoleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create role not found response has a 3xx status code
func (o *CreateRoleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create role not found response has a 4xx status code
func (o *CreateRoleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create role not found response has a 5xx status code
func (o *CreateRoleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create role not found response a status code equal to that given
func (o *CreateRoleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create role not found response
func (o *CreateRoleNotFound) Code() int {
	return 404
}

func (o *CreateRoleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRoleNotFound %s", 404, payload)
}

func (o *CreateRoleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRoleNotFound %s", 404, payload)
}

func (o *CreateRoleNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRoleUnprocessableEntity creates a CreateRoleUnprocessableEntity with default headers values
func NewCreateRoleUnprocessableEntity() *CreateRoleUnprocessableEntity {
	return &CreateRoleUnprocessableEntity{}
}

/*
CreateRoleUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type CreateRoleUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create role unprocessable entity response has a 2xx status code
func (o *CreateRoleUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create role unprocessable entity response has a 3xx status code
func (o *CreateRoleUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create role unprocessable entity response has a 4xx status code
func (o *CreateRoleUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this create role unprocessable entity response has a 5xx status code
func (o *CreateRoleUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this create role unprocessable entity response a status code equal to that given
func (o *CreateRoleUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the create role unprocessable entity response
func (o *CreateRoleUnprocessableEntity) Code() int {
	return 422
}

func (o *CreateRoleUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRoleUnprocessableEntity %s", 422, payload)
}

func (o *CreateRoleUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRoleUnprocessableEntity %s", 422, payload)
}

func (o *CreateRoleUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateRoleUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateRoleDefault creates a CreateRoleDefault with default headers values
func NewCreateRoleDefault(code int) *CreateRoleDefault {
	return &CreateRoleDefault{
		_statusCode: code,
	}
}

/*
CreateRoleDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type CreateRoleDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this create role default response has a 2xx status code
func (o *CreateRoleDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create role default response has a 3xx status code
func (o *CreateRoleDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create role default response has a 4xx status code
func (o *CreateRoleDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create role default response has a 5xx status code
func (o *CreateRoleDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create role default response a status code equal to that given
func (o *CreateRoleDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the create role default response
func (o *CreateRoleDefault) Code() int {
	return o._statusCode
}

func (o *CreateRoleDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRole default %s", o._statusCode, payload)
}

func (o *CreateRoleDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/roles][%d] createRole default %s", o._statusCode, payload)
}

func (o *CreateRoleDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateRoleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
CreateRoleOKBody create role o k body
swagger:model CreateRoleOKBody
*/
type CreateRoleOKBody struct {

	// data
	// Required: true
	Data *models.NewRole `json:"data"`
}

// Validate validates this create role o k body
func (o *CreateRoleOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRoleOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("createRoleOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createRoleOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createRoleOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this create role o k body based on the context it is used
func (o *CreateRoleOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateRoleOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createRoleOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("createRoleOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateRoleOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateRoleOKBody) UnmarshalBinary(b []byte) error {
	var res CreateRoleOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
