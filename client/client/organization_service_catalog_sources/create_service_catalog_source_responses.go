// Code generated by go-swagger; DO NOT EDIT.

package organization_service_catalog_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// CreateServiceCatalogSourceReader is a Reader for the CreateServiceCatalogSource structure.
type CreateServiceCatalogSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateServiceCatalogSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateServiceCatalogSourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewCreateServiceCatalogSourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 411:
		result := NewCreateServiceCatalogSourceLengthRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateServiceCatalogSourceUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewCreateServiceCatalogSourceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateServiceCatalogSourceOK creates a CreateServiceCatalogSourceOK with default headers values
func NewCreateServiceCatalogSourceOK() *CreateServiceCatalogSourceOK {
	return &CreateServiceCatalogSourceOK{}
}

/*CreateServiceCatalogSourceOK handles this case with default header values.

Success creation
*/
type CreateServiceCatalogSourceOK struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *CreateServiceCatalogSourceOKBody
}

func (o *CreateServiceCatalogSourceOK) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources][%d] createServiceCatalogSourceOK  %+v", 200, o.Payload)
}

func (o *CreateServiceCatalogSourceOK) GetPayload() *CreateServiceCatalogSourceOKBody {
	return o.Payload
}

func (o *CreateServiceCatalogSourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(CreateServiceCatalogSourceOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceCatalogSourceNotFound creates a CreateServiceCatalogSourceNotFound with default headers values
func NewCreateServiceCatalogSourceNotFound() *CreateServiceCatalogSourceNotFound {
	return &CreateServiceCatalogSourceNotFound{}
}

/*CreateServiceCatalogSourceNotFound handles this case with default header values.

The response sent when any of the entities present in the path is not found.
*/
type CreateServiceCatalogSourceNotFound struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

func (o *CreateServiceCatalogSourceNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources][%d] createServiceCatalogSourceNotFound  %+v", 404, o.Payload)
}

func (o *CreateServiceCatalogSourceNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateServiceCatalogSourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceCatalogSourceLengthRequired creates a CreateServiceCatalogSourceLengthRequired with default headers values
func NewCreateServiceCatalogSourceLengthRequired() *CreateServiceCatalogSourceLengthRequired {
	return &CreateServiceCatalogSourceLengthRequired{}
}

/*CreateServiceCatalogSourceLengthRequired handles this case with default header values.

The request has a body but it doesn't have a Content-Length header.
*/
type CreateServiceCatalogSourceLengthRequired struct {
}

func (o *CreateServiceCatalogSourceLengthRequired) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources][%d] createServiceCatalogSourceLengthRequired ", 411)
}

func (o *CreateServiceCatalogSourceLengthRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateServiceCatalogSourceUnprocessableEntity creates a CreateServiceCatalogSourceUnprocessableEntity with default headers values
func NewCreateServiceCatalogSourceUnprocessableEntity() *CreateServiceCatalogSourceUnprocessableEntity {
	return &CreateServiceCatalogSourceUnprocessableEntity{}
}

/*CreateServiceCatalogSourceUnprocessableEntity handles this case with default header values.

All the custom errors that are generated from the Cycloid API
*/
type CreateServiceCatalogSourceUnprocessableEntity struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

func (o *CreateServiceCatalogSourceUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources][%d] createServiceCatalogSourceUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *CreateServiceCatalogSourceUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateServiceCatalogSourceUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateServiceCatalogSourceDefault creates a CreateServiceCatalogSourceDefault with default headers values
func NewCreateServiceCatalogSourceDefault(code int) *CreateServiceCatalogSourceDefault {
	return &CreateServiceCatalogSourceDefault{
		_statusCode: code,
	}
}

/*CreateServiceCatalogSourceDefault handles this case with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type CreateServiceCatalogSourceDefault struct {
	_statusCode int

	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

// Code gets the status code for the create service catalog source default response
func (o *CreateServiceCatalogSourceDefault) Code() int {
	return o._statusCode
}

func (o *CreateServiceCatalogSourceDefault) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources][%d] createServiceCatalogSource default  %+v", o._statusCode, o.Payload)
}

func (o *CreateServiceCatalogSourceDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *CreateServiceCatalogSourceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateServiceCatalogSourceOKBody create service catalog source o k body
swagger:model CreateServiceCatalogSourceOKBody
*/
type CreateServiceCatalogSourceOKBody struct {

	// data
	// Required: true
	Data *models.ServiceCatalogSource `json:"data"`
}

// Validate validates this create service catalog source o k body
func (o *CreateServiceCatalogSourceOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateServiceCatalogSourceOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("createServiceCatalogSourceOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("createServiceCatalogSourceOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateServiceCatalogSourceOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateServiceCatalogSourceOKBody) UnmarshalBinary(b []byte) error {
	var res CreateServiceCatalogSourceOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
