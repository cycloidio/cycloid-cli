// Code generated by go-swagger; DO NOT EDIT.

package organization_service_catalog_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// ValidateServiceCatalogSourceReader is a Reader for the ValidateServiceCatalogSource structure.
type ValidateServiceCatalogSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateServiceCatalogSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewValidateServiceCatalogSourceNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewValidateServiceCatalogSourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateServiceCatalogSourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 411:
		result := NewValidateServiceCatalogSourceLengthRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewValidateServiceCatalogSourceUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewValidateServiceCatalogSourceDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewValidateServiceCatalogSourceNoContent creates a ValidateServiceCatalogSourceNoContent with default headers values
func NewValidateServiceCatalogSourceNoContent() *ValidateServiceCatalogSourceNoContent {
	return &ValidateServiceCatalogSourceNoContent{}
}

/*
ValidateServiceCatalogSourceNoContent describes a response with status code 204, with default header values.

The SCS has been validated
*/
type ValidateServiceCatalogSourceNoContent struct {
}

// IsSuccess returns true when this validate service catalog source no content response has a 2xx status code
func (o *ValidateServiceCatalogSourceNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate service catalog source no content response has a 3xx status code
func (o *ValidateServiceCatalogSourceNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate service catalog source no content response has a 4xx status code
func (o *ValidateServiceCatalogSourceNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate service catalog source no content response has a 5xx status code
func (o *ValidateServiceCatalogSourceNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this validate service catalog source no content response a status code equal to that given
func (o *ValidateServiceCatalogSourceNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the validate service catalog source no content response
func (o *ValidateServiceCatalogSourceNoContent) Code() int {
	return 204
}

func (o *ValidateServiceCatalogSourceNoContent) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceNoContent", 204)
}

func (o *ValidateServiceCatalogSourceNoContent) String() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceNoContent", 204)
}

func (o *ValidateServiceCatalogSourceNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateServiceCatalogSourceForbidden creates a ValidateServiceCatalogSourceForbidden with default headers values
func NewValidateServiceCatalogSourceForbidden() *ValidateServiceCatalogSourceForbidden {
	return &ValidateServiceCatalogSourceForbidden{}
}

/*
ValidateServiceCatalogSourceForbidden describes a response with status code 403, with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type ValidateServiceCatalogSourceForbidden struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this validate service catalog source forbidden response has a 2xx status code
func (o *ValidateServiceCatalogSourceForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate service catalog source forbidden response has a 3xx status code
func (o *ValidateServiceCatalogSourceForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate service catalog source forbidden response has a 4xx status code
func (o *ValidateServiceCatalogSourceForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate service catalog source forbidden response has a 5xx status code
func (o *ValidateServiceCatalogSourceForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this validate service catalog source forbidden response a status code equal to that given
func (o *ValidateServiceCatalogSourceForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the validate service catalog source forbidden response
func (o *ValidateServiceCatalogSourceForbidden) Code() int {
	return 403
}

func (o *ValidateServiceCatalogSourceForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceForbidden %s", 403, payload)
}

func (o *ValidateServiceCatalogSourceForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceForbidden %s", 403, payload)
}

func (o *ValidateServiceCatalogSourceForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateServiceCatalogSourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateServiceCatalogSourceNotFound creates a ValidateServiceCatalogSourceNotFound with default headers values
func NewValidateServiceCatalogSourceNotFound() *ValidateServiceCatalogSourceNotFound {
	return &ValidateServiceCatalogSourceNotFound{}
}

/*
ValidateServiceCatalogSourceNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type ValidateServiceCatalogSourceNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this validate service catalog source not found response has a 2xx status code
func (o *ValidateServiceCatalogSourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate service catalog source not found response has a 3xx status code
func (o *ValidateServiceCatalogSourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate service catalog source not found response has a 4xx status code
func (o *ValidateServiceCatalogSourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate service catalog source not found response has a 5xx status code
func (o *ValidateServiceCatalogSourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate service catalog source not found response a status code equal to that given
func (o *ValidateServiceCatalogSourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate service catalog source not found response
func (o *ValidateServiceCatalogSourceNotFound) Code() int {
	return 404
}

func (o *ValidateServiceCatalogSourceNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceNotFound %s", 404, payload)
}

func (o *ValidateServiceCatalogSourceNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceNotFound %s", 404, payload)
}

func (o *ValidateServiceCatalogSourceNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateServiceCatalogSourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateServiceCatalogSourceLengthRequired creates a ValidateServiceCatalogSourceLengthRequired with default headers values
func NewValidateServiceCatalogSourceLengthRequired() *ValidateServiceCatalogSourceLengthRequired {
	return &ValidateServiceCatalogSourceLengthRequired{}
}

/*
ValidateServiceCatalogSourceLengthRequired describes a response with status code 411, with default header values.

The request has a body but it doesn't have a Content-Length header.
*/
type ValidateServiceCatalogSourceLengthRequired struct {
}

// IsSuccess returns true when this validate service catalog source length required response has a 2xx status code
func (o *ValidateServiceCatalogSourceLengthRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate service catalog source length required response has a 3xx status code
func (o *ValidateServiceCatalogSourceLengthRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate service catalog source length required response has a 4xx status code
func (o *ValidateServiceCatalogSourceLengthRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate service catalog source length required response has a 5xx status code
func (o *ValidateServiceCatalogSourceLengthRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this validate service catalog source length required response a status code equal to that given
func (o *ValidateServiceCatalogSourceLengthRequired) IsCode(code int) bool {
	return code == 411
}

// Code gets the status code for the validate service catalog source length required response
func (o *ValidateServiceCatalogSourceLengthRequired) Code() int {
	return 411
}

func (o *ValidateServiceCatalogSourceLengthRequired) Error() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceLengthRequired", 411)
}

func (o *ValidateServiceCatalogSourceLengthRequired) String() string {
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceLengthRequired", 411)
}

func (o *ValidateServiceCatalogSourceLengthRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateServiceCatalogSourceUnprocessableEntity creates a ValidateServiceCatalogSourceUnprocessableEntity with default headers values
func NewValidateServiceCatalogSourceUnprocessableEntity() *ValidateServiceCatalogSourceUnprocessableEntity {
	return &ValidateServiceCatalogSourceUnprocessableEntity{}
}

/*
ValidateServiceCatalogSourceUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type ValidateServiceCatalogSourceUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this validate service catalog source unprocessable entity response has a 2xx status code
func (o *ValidateServiceCatalogSourceUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate service catalog source unprocessable entity response has a 3xx status code
func (o *ValidateServiceCatalogSourceUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate service catalog source unprocessable entity response has a 4xx status code
func (o *ValidateServiceCatalogSourceUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate service catalog source unprocessable entity response has a 5xx status code
func (o *ValidateServiceCatalogSourceUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this validate service catalog source unprocessable entity response a status code equal to that given
func (o *ValidateServiceCatalogSourceUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the validate service catalog source unprocessable entity response
func (o *ValidateServiceCatalogSourceUnprocessableEntity) Code() int {
	return 422
}

func (o *ValidateServiceCatalogSourceUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceUnprocessableEntity %s", 422, payload)
}

func (o *ValidateServiceCatalogSourceUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSourceUnprocessableEntity %s", 422, payload)
}

func (o *ValidateServiceCatalogSourceUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateServiceCatalogSourceUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateServiceCatalogSourceDefault creates a ValidateServiceCatalogSourceDefault with default headers values
func NewValidateServiceCatalogSourceDefault(code int) *ValidateServiceCatalogSourceDefault {
	return &ValidateServiceCatalogSourceDefault{
		_statusCode: code,
	}
}

/*
ValidateServiceCatalogSourceDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type ValidateServiceCatalogSourceDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this validate service catalog source default response has a 2xx status code
func (o *ValidateServiceCatalogSourceDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this validate service catalog source default response has a 3xx status code
func (o *ValidateServiceCatalogSourceDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this validate service catalog source default response has a 4xx status code
func (o *ValidateServiceCatalogSourceDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this validate service catalog source default response has a 5xx status code
func (o *ValidateServiceCatalogSourceDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this validate service catalog source default response a status code equal to that given
func (o *ValidateServiceCatalogSourceDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the validate service catalog source default response
func (o *ValidateServiceCatalogSourceDefault) Code() int {
	return o._statusCode
}

func (o *ValidateServiceCatalogSourceDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSource default %s", o._statusCode, payload)
}

func (o *ValidateServiceCatalogSourceDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_canonical}/validate][%d] validateServiceCatalogSource default %s", o._statusCode, payload)
}

func (o *ValidateServiceCatalogSourceDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateServiceCatalogSourceDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
