// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteOrgParams creates a new DeleteOrgParams object
// with the default values initialized.
func NewDeleteOrgParams() *DeleteOrgParams {
	var ()
	return &DeleteOrgParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteOrgParamsWithTimeout creates a new DeleteOrgParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteOrgParamsWithTimeout(timeout time.Duration) *DeleteOrgParams {
	var ()
	return &DeleteOrgParams{

		timeout: timeout,
	}
}

// NewDeleteOrgParamsWithContext creates a new DeleteOrgParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteOrgParamsWithContext(ctx context.Context) *DeleteOrgParams {
	var ()
	return &DeleteOrgParams{

		Context: ctx,
	}
}

// NewDeleteOrgParamsWithHTTPClient creates a new DeleteOrgParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteOrgParamsWithHTTPClient(client *http.Client) *DeleteOrgParams {
	var ()
	return &DeleteOrgParams{
		HTTPClient: client,
	}
}

/*DeleteOrgParams contains all the parameters to send to the API endpoint
for the delete org operation typically these are written to a http.Request
*/
type DeleteOrgParams struct {

	/*OrganizationCanonical
	  A canonical of an organization.

	*/
	OrganizationCanonical string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete org params
func (o *DeleteOrgParams) WithTimeout(timeout time.Duration) *DeleteOrgParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete org params
func (o *DeleteOrgParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete org params
func (o *DeleteOrgParams) WithContext(ctx context.Context) *DeleteOrgParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete org params
func (o *DeleteOrgParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete org params
func (o *DeleteOrgParams) WithHTTPClient(client *http.Client) *DeleteOrgParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete org params
func (o *DeleteOrgParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrganizationCanonical adds the organizationCanonical to the delete org params
func (o *DeleteOrgParams) WithOrganizationCanonical(organizationCanonical string) *DeleteOrgParams {
	o.SetOrganizationCanonical(organizationCanonical)
	return o
}

// SetOrganizationCanonical adds the organizationCanonical to the delete org params
func (o *DeleteOrgParams) SetOrganizationCanonical(organizationCanonical string) {
	o.OrganizationCanonical = organizationCanonical
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteOrgParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param organization_canonical
	if err := r.SetPathParam("organization_canonical", o.OrganizationCanonical); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
