// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// GetOrgSummaryReader is a Reader for the GetOrgSummary structure.
type GetOrgSummaryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOrgSummaryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOrgSummaryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewGetOrgSummaryForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOrgSummaryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOrgSummaryOK creates a GetOrgSummaryOK with default headers values
func NewGetOrgSummaryOK() *GetOrgSummaryOK {
	return &GetOrgSummaryOK{}
}

/*GetOrgSummaryOK handles this case with default header values.

The summary object
*/
type GetOrgSummaryOK struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *GetOrgSummaryOKBody
}

func (o *GetOrgSummaryOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/summary][%d] getOrgSummaryOK  %+v", 200, o.Payload)
}

func (o *GetOrgSummaryOK) GetPayload() *GetOrgSummaryOKBody {
	return o.Payload
}

func (o *GetOrgSummaryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(GetOrgSummaryOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgSummaryForbidden creates a GetOrgSummaryForbidden with default headers values
func NewGetOrgSummaryForbidden() *GetOrgSummaryForbidden {
	return &GetOrgSummaryForbidden{}
}

/*GetOrgSummaryForbidden handles this case with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type GetOrgSummaryForbidden struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

func (o *GetOrgSummaryForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/summary][%d] getOrgSummaryForbidden  %+v", 403, o.Payload)
}

func (o *GetOrgSummaryForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetOrgSummaryForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOrgSummaryNotFound creates a GetOrgSummaryNotFound with default headers values
func NewGetOrgSummaryNotFound() *GetOrgSummaryNotFound {
	return &GetOrgSummaryNotFound{}
}

/*GetOrgSummaryNotFound handles this case with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetOrgSummaryNotFound struct {
	/*The length of the response body in octets (8-bit bytes).
	 */
	ContentLength uint64

	Payload *models.ErrorPayload
}

func (o *GetOrgSummaryNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/summary][%d] getOrgSummaryNotFound  %+v", 404, o.Payload)
}

func (o *GetOrgSummaryNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetOrgSummaryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Content-Length
	contentLength, err := swag.ConvertUint64(response.GetHeader("Content-Length"))
	if err != nil {
		return errors.InvalidType("Content-Length", "header", "uint64", response.GetHeader("Content-Length"))
	}
	o.ContentLength = contentLength

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetOrgSummaryOKBody get org summary o k body
swagger:model GetOrgSummaryOKBody
*/
type GetOrgSummaryOKBody struct {

	// summary
	// Required: true
	Summary *models.Summary `json:"summary"`
}

// Validate validates this get org summary o k body
func (o *GetOrgSummaryOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSummary(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOrgSummaryOKBody) validateSummary(formats strfmt.Registry) error {

	if err := validate.Required("getOrgSummaryOK"+"."+"summary", "body", o.Summary); err != nil {
		return err
	}

	if o.Summary != nil {
		if err := o.Summary.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getOrgSummaryOK" + "." + "summary")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOrgSummaryOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOrgSummaryOKBody) UnmarshalBinary(b []byte) error {
	var res GetOrgSummaryOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
