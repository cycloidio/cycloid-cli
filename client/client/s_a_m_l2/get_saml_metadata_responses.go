// Code generated by go-swagger; DO NOT EDIT.

package s_a_m_l2

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// GetSamlMetadataReader is a Reader for the GetSamlMetadata structure.
type GetSamlMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSamlMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSamlMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetSamlMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetSamlMetadataDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSamlMetadataOK creates a GetSamlMetadataOK with default headers values
func NewGetSamlMetadataOK() *GetSamlMetadataOK {
	return &GetSamlMetadataOK{}
}

/*
GetSamlMetadataOK describes a response with status code 200, with default header values.

SAML2 XML metadata describing the Cycloid Service Provider.
*/
type GetSamlMetadataOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get saml metadata o k response has a 2xx status code
func (o *GetSamlMetadataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get saml metadata o k response has a 3xx status code
func (o *GetSamlMetadataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get saml metadata o k response has a 4xx status code
func (o *GetSamlMetadataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get saml metadata o k response has a 5xx status code
func (o *GetSamlMetadataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get saml metadata o k response a status code equal to that given
func (o *GetSamlMetadataOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get saml metadata o k response
func (o *GetSamlMetadataOK) Code() int {
	return 200
}

func (o *GetSamlMetadataOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /saml2][%d] getSamlMetadataOK %s", 200, payload)
}

func (o *GetSamlMetadataOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /saml2][%d] getSamlMetadataOK %s", 200, payload)
}

func (o *GetSamlMetadataOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetSamlMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSamlMetadataNotFound creates a GetSamlMetadataNotFound with default headers values
func NewGetSamlMetadataNotFound() *GetSamlMetadataNotFound {
	return &GetSamlMetadataNotFound{}
}

/*
GetSamlMetadataNotFound describes a response with status code 404, with default header values.

The response sent when any of the entities present in the path is not found.
*/
type GetSamlMetadataNotFound struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get saml metadata not found response has a 2xx status code
func (o *GetSamlMetadataNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get saml metadata not found response has a 3xx status code
func (o *GetSamlMetadataNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get saml metadata not found response has a 4xx status code
func (o *GetSamlMetadataNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get saml metadata not found response has a 5xx status code
func (o *GetSamlMetadataNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get saml metadata not found response a status code equal to that given
func (o *GetSamlMetadataNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get saml metadata not found response
func (o *GetSamlMetadataNotFound) Code() int {
	return 404
}

func (o *GetSamlMetadataNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /saml2][%d] getSamlMetadataNotFound %s", 404, payload)
}

func (o *GetSamlMetadataNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /saml2][%d] getSamlMetadataNotFound %s", 404, payload)
}

func (o *GetSamlMetadataNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetSamlMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSamlMetadataDefault creates a GetSamlMetadataDefault with default headers values
func NewGetSamlMetadataDefault(code int) *GetSamlMetadataDefault {
	return &GetSamlMetadataDefault{
		_statusCode: code,
	}
}

/*
GetSamlMetadataDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type GetSamlMetadataDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this get saml metadata default response has a 2xx status code
func (o *GetSamlMetadataDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get saml metadata default response has a 3xx status code
func (o *GetSamlMetadataDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get saml metadata default response has a 4xx status code
func (o *GetSamlMetadataDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get saml metadata default response has a 5xx status code
func (o *GetSamlMetadataDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get saml metadata default response a status code equal to that given
func (o *GetSamlMetadataDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get saml metadata default response
func (o *GetSamlMetadataDefault) Code() int {
	return o._statusCode
}

func (o *GetSamlMetadataDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /saml2][%d] getSamlMetadata default %s", o._statusCode, payload)
}

func (o *GetSamlMetadataDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /saml2][%d] getSamlMetadata default %s", o._statusCode, payload)
}

func (o *GetSamlMetadataDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *GetSamlMetadataDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
