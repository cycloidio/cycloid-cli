// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// UpdateStackTerraformDiagramReader is a Reader for the UpdateStackTerraformDiagram structure.
type UpdateStackTerraformDiagramReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateStackTerraformDiagramReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateStackTerraformDiagramNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateStackTerraformDiagramForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateStackTerraformDiagramNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateStackTerraformDiagramUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateStackTerraformDiagramDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateStackTerraformDiagramNoContent creates a UpdateStackTerraformDiagramNoContent with default headers values
func NewUpdateStackTerraformDiagramNoContent() *UpdateStackTerraformDiagramNoContent {
	return &UpdateStackTerraformDiagramNoContent{}
}

/*UpdateStackTerraformDiagramNoContent handles this case with default header values.

Configuration has been updated
*/
type UpdateStackTerraformDiagramNoContent struct {
}

func (o *UpdateStackTerraformDiagramNoContent) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/terraform/diagram][%d] updateStackTerraformDiagramNoContent ", 204)
}

func (o *UpdateStackTerraformDiagramNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateStackTerraformDiagramForbidden creates a UpdateStackTerraformDiagramForbidden with default headers values
func NewUpdateStackTerraformDiagramForbidden() *UpdateStackTerraformDiagramForbidden {
	return &UpdateStackTerraformDiagramForbidden{}
}

/*UpdateStackTerraformDiagramForbidden handles this case with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type UpdateStackTerraformDiagramForbidden struct {
	Payload *models.ErrorPayload
}

func (o *UpdateStackTerraformDiagramForbidden) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/terraform/diagram][%d] updateStackTerraformDiagramForbidden  %+v", 403, o.Payload)
}

func (o *UpdateStackTerraformDiagramForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateStackTerraformDiagramForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStackTerraformDiagramNotFound creates a UpdateStackTerraformDiagramNotFound with default headers values
func NewUpdateStackTerraformDiagramNotFound() *UpdateStackTerraformDiagramNotFound {
	return &UpdateStackTerraformDiagramNotFound{}
}

/*UpdateStackTerraformDiagramNotFound handles this case with default header values.

The response sent when any of the entities present in the path is not found.
*/
type UpdateStackTerraformDiagramNotFound struct {
	Payload *models.ErrorPayload
}

func (o *UpdateStackTerraformDiagramNotFound) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/terraform/diagram][%d] updateStackTerraformDiagramNotFound  %+v", 404, o.Payload)
}

func (o *UpdateStackTerraformDiagramNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateStackTerraformDiagramNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStackTerraformDiagramUnprocessableEntity creates a UpdateStackTerraformDiagramUnprocessableEntity with default headers values
func NewUpdateStackTerraformDiagramUnprocessableEntity() *UpdateStackTerraformDiagramUnprocessableEntity {
	return &UpdateStackTerraformDiagramUnprocessableEntity{}
}

/*UpdateStackTerraformDiagramUnprocessableEntity handles this case with default header values.

All the custom errors that are generated from the Cycloid API
*/
type UpdateStackTerraformDiagramUnprocessableEntity struct {
	Payload *models.ErrorPayload
}

func (o *UpdateStackTerraformDiagramUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/terraform/diagram][%d] updateStackTerraformDiagramUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateStackTerraformDiagramUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateStackTerraformDiagramUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStackTerraformDiagramDefault creates a UpdateStackTerraformDiagramDefault with default headers values
func NewUpdateStackTerraformDiagramDefault(code int) *UpdateStackTerraformDiagramDefault {
	return &UpdateStackTerraformDiagramDefault{
		_statusCode: code,
	}
}

/*UpdateStackTerraformDiagramDefault handles this case with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type UpdateStackTerraformDiagramDefault struct {
	_statusCode int

	Payload *models.ErrorPayload
}

// Code gets the status code for the update stack terraform diagram default response
func (o *UpdateStackTerraformDiagramDefault) Code() int {
	return o._statusCode
}

func (o *UpdateStackTerraformDiagramDefault) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/terraform/diagram][%d] updateStackTerraformDiagram default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateStackTerraformDiagramDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateStackTerraformDiagramDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
