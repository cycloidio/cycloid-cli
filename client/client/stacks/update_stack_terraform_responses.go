// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// UpdateStackTerraformReader is a Reader for the UpdateStackTerraform structure.
type UpdateStackTerraformReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateStackTerraformReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewUpdateStackTerraformNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewUpdateStackTerraformForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateStackTerraformNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewUpdateStackTerraformUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewUpdateStackTerraformDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateStackTerraformNoContent creates a UpdateStackTerraformNoContent with default headers values
func NewUpdateStackTerraformNoContent() *UpdateStackTerraformNoContent {
	return &UpdateStackTerraformNoContent{}
}

/*UpdateStackTerraformNoContent handles this case with default header values.

Configuration has been updated
*/
type UpdateStackTerraformNoContent struct {
}

func (o *UpdateStackTerraformNoContent) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/{use_case_canonical}/terraform][%d] updateStackTerraformNoContent ", 204)
}

func (o *UpdateStackTerraformNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateStackTerraformForbidden creates a UpdateStackTerraformForbidden with default headers values
func NewUpdateStackTerraformForbidden() *UpdateStackTerraformForbidden {
	return &UpdateStackTerraformForbidden{}
}

/*UpdateStackTerraformForbidden handles this case with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type UpdateStackTerraformForbidden struct {
	Payload *models.ErrorPayload
}

func (o *UpdateStackTerraformForbidden) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/{use_case_canonical}/terraform][%d] updateStackTerraformForbidden  %+v", 403, o.Payload)
}

func (o *UpdateStackTerraformForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateStackTerraformForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStackTerraformNotFound creates a UpdateStackTerraformNotFound with default headers values
func NewUpdateStackTerraformNotFound() *UpdateStackTerraformNotFound {
	return &UpdateStackTerraformNotFound{}
}

/*UpdateStackTerraformNotFound handles this case with default header values.

The response sent when any of the entities present in the path is not found.
*/
type UpdateStackTerraformNotFound struct {
	Payload *models.ErrorPayload
}

func (o *UpdateStackTerraformNotFound) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/{use_case_canonical}/terraform][%d] updateStackTerraformNotFound  %+v", 404, o.Payload)
}

func (o *UpdateStackTerraformNotFound) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateStackTerraformNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStackTerraformUnprocessableEntity creates a UpdateStackTerraformUnprocessableEntity with default headers values
func NewUpdateStackTerraformUnprocessableEntity() *UpdateStackTerraformUnprocessableEntity {
	return &UpdateStackTerraformUnprocessableEntity{}
}

/*UpdateStackTerraformUnprocessableEntity handles this case with default header values.

All the custom errors that are generated from the Cycloid API
*/
type UpdateStackTerraformUnprocessableEntity struct {
	Payload *models.ErrorPayload
}

func (o *UpdateStackTerraformUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/{use_case_canonical}/terraform][%d] updateStackTerraformUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *UpdateStackTerraformUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateStackTerraformUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateStackTerraformDefault creates a UpdateStackTerraformDefault with default headers values
func NewUpdateStackTerraformDefault(code int) *UpdateStackTerraformDefault {
	return &UpdateStackTerraformDefault{
		_statusCode: code,
	}
}

/*UpdateStackTerraformDefault handles this case with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type UpdateStackTerraformDefault struct {
	_statusCode int

	Payload *models.ErrorPayload
}

// Code gets the status code for the update stack terraform default response
func (o *UpdateStackTerraformDefault) Code() int {
	return o._statusCode
}

func (o *UpdateStackTerraformDefault) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organization_canonical}/stacks/{stack_ref}/{use_case_canonical}/terraform][%d] updateStackTerraform default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateStackTerraformDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *UpdateStackTerraformDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
