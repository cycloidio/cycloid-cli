// Code generated by go-swagger; DO NOT EDIT.

package stacks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cycloidio/cycloid-cli/client/models"
)

// ValidateStackDependenciesReader is a Reader for the ValidateStackDependencies structure.
type ValidateStackDependenciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateStackDependenciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateStackDependenciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewValidateStackDependenciesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewValidateStackDependenciesUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewValidateStackDependenciesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewValidateStackDependenciesOK creates a ValidateStackDependenciesOK with default headers values
func NewValidateStackDependenciesOK() *ValidateStackDependenciesOK {
	return &ValidateStackDependenciesOK{}
}

/*ValidateStackDependenciesOK handles this case with default header values.

The result of the stack's dependencies validation
*/
type ValidateStackDependenciesOK struct {
	Payload *ValidateStackDependenciesOKBody
}

func (o *ValidateStackDependenciesOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/stacks/{stack_ref}/dependencies/validate][%d] validateStackDependenciesOK  %+v", 200, o.Payload)
}

func (o *ValidateStackDependenciesOK) GetPayload() *ValidateStackDependenciesOKBody {
	return o.Payload
}

func (o *ValidateStackDependenciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ValidateStackDependenciesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateStackDependenciesForbidden creates a ValidateStackDependenciesForbidden with default headers values
func NewValidateStackDependenciesForbidden() *ValidateStackDependenciesForbidden {
	return &ValidateStackDependenciesForbidden{}
}

/*ValidateStackDependenciesForbidden handles this case with default header values.

The authenticated user cannot perform the operation because, it doesn't have permissions for such operation.
*/
type ValidateStackDependenciesForbidden struct {
	Payload *models.ErrorPayload
}

func (o *ValidateStackDependenciesForbidden) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/stacks/{stack_ref}/dependencies/validate][%d] validateStackDependenciesForbidden  %+v", 403, o.Payload)
}

func (o *ValidateStackDependenciesForbidden) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateStackDependenciesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateStackDependenciesUnprocessableEntity creates a ValidateStackDependenciesUnprocessableEntity with default headers values
func NewValidateStackDependenciesUnprocessableEntity() *ValidateStackDependenciesUnprocessableEntity {
	return &ValidateStackDependenciesUnprocessableEntity{}
}

/*ValidateStackDependenciesUnprocessableEntity handles this case with default header values.

All the custom errors that are generated from the Cycloid API
*/
type ValidateStackDependenciesUnprocessableEntity struct {
	Payload *models.ErrorPayload
}

func (o *ValidateStackDependenciesUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/stacks/{stack_ref}/dependencies/validate][%d] validateStackDependenciesUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *ValidateStackDependenciesUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateStackDependenciesUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateStackDependenciesDefault creates a ValidateStackDependenciesDefault with default headers values
func NewValidateStackDependenciesDefault(code int) *ValidateStackDependenciesDefault {
	return &ValidateStackDependenciesDefault{
		_statusCode: code,
	}
}

/*ValidateStackDependenciesDefault handles this case with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type ValidateStackDependenciesDefault struct {
	_statusCode int

	Payload *models.ErrorPayload
}

// Code gets the status code for the validate stack dependencies default response
func (o *ValidateStackDependenciesDefault) Code() int {
	return o._statusCode
}

func (o *ValidateStackDependenciesDefault) Error() string {
	return fmt.Sprintf("[GET /organizations/{organization_canonical}/stacks/{stack_ref}/dependencies/validate][%d] validateStackDependencies default  %+v", o._statusCode, o.Payload)
}

func (o *ValidateStackDependenciesDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ValidateStackDependenciesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ValidateStackDependenciesOKBody validate stack dependencies o k body
swagger:model ValidateStackDependenciesOKBody
*/
type ValidateStackDependenciesOKBody struct {

	// data
	// Required: true
	Data *models.StackDependenciesValidationResult `json:"data"`
}

// Validate validates this validate stack dependencies o k body
func (o *ValidateStackDependenciesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ValidateStackDependenciesOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("validateStackDependenciesOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("validateStackDependenciesOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ValidateStackDependenciesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ValidateStackDependenciesOKBody) UnmarshalBinary(b []byte) error {
	var res ValidateStackDependenciesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
