// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// DeleteNotificationReader is a Reader for the DeleteNotification structure.
type DeleteNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteNotificationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteNotificationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteNotificationNoContent creates a DeleteNotificationNoContent with default headers values
func NewDeleteNotificationNoContent() *DeleteNotificationNoContent {
	return &DeleteNotificationNoContent{}
}

/*
DeleteNotificationNoContent describes a response with status code 204, with default header values.

The notification was deleted
*/
type DeleteNotificationNoContent struct {
}

// IsSuccess returns true when this delete notification no content response has a 2xx status code
func (o *DeleteNotificationNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete notification no content response has a 3xx status code
func (o *DeleteNotificationNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete notification no content response has a 4xx status code
func (o *DeleteNotificationNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete notification no content response has a 5xx status code
func (o *DeleteNotificationNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete notification no content response a status code equal to that given
func (o *DeleteNotificationNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete notification no content response
func (o *DeleteNotificationNoContent) Code() int {
	return 204
}

func (o *DeleteNotificationNoContent) Error() string {
	return fmt.Sprintf("[DELETE /user/notifications/{notification_id}][%d] deleteNotificationNoContent", 204)
}

func (o *DeleteNotificationNoContent) String() string {
	return fmt.Sprintf("[DELETE /user/notifications/{notification_id}][%d] deleteNotificationNoContent", 204)
}

func (o *DeleteNotificationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteNotificationDefault creates a DeleteNotificationDefault with default headers values
func NewDeleteNotificationDefault(code int) *DeleteNotificationDefault {
	return &DeleteNotificationDefault{
		_statusCode: code,
	}
}

/*
DeleteNotificationDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type DeleteNotificationDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this delete notification default response has a 2xx status code
func (o *DeleteNotificationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this delete notification default response has a 3xx status code
func (o *DeleteNotificationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this delete notification default response has a 4xx status code
func (o *DeleteNotificationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this delete notification default response has a 5xx status code
func (o *DeleteNotificationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this delete notification default response a status code equal to that given
func (o *DeleteNotificationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the delete notification default response
func (o *DeleteNotificationDefault) Code() int {
	return o._statusCode
}

func (o *DeleteNotificationDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /user/notifications/{notification_id}][%d] deleteNotification default %s", o._statusCode, payload)
}

func (o *DeleteNotificationDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /user/notifications/{notification_id}][%d] deleteNotification default %s", o._statusCode, payload)
}

func (o *DeleteNotificationDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *DeleteNotificationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
