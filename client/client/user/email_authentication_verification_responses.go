// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// EmailAuthenticationVerificationReader is a Reader for the EmailAuthenticationVerification structure.
type EmailAuthenticationVerificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EmailAuthenticationVerificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEmailAuthenticationVerificationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEmailAuthenticationVerificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewEmailAuthenticationVerificationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewEmailAuthenticationVerificationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewEmailAuthenticationVerificationOK creates a EmailAuthenticationVerificationOK with default headers values
func NewEmailAuthenticationVerificationOK() *EmailAuthenticationVerificationOK {
	return &EmailAuthenticationVerificationOK{}
}

/*
EmailAuthenticationVerificationOK describes a response with status code 200, with default header values.

The token which represents the session of the user.
*/
type EmailAuthenticationVerificationOK struct {
	Payload *EmailAuthenticationVerificationOKBody
}

// IsSuccess returns true when this email authentication verification o k response has a 2xx status code
func (o *EmailAuthenticationVerificationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this email authentication verification o k response has a 3xx status code
func (o *EmailAuthenticationVerificationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this email authentication verification o k response has a 4xx status code
func (o *EmailAuthenticationVerificationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this email authentication verification o k response has a 5xx status code
func (o *EmailAuthenticationVerificationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this email authentication verification o k response a status code equal to that given
func (o *EmailAuthenticationVerificationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the email authentication verification o k response
func (o *EmailAuthenticationVerificationOK) Code() int {
	return 200
}

func (o *EmailAuthenticationVerificationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /user/email/authentication/{authentication_token}][%d] emailAuthenticationVerificationOK %s", 200, payload)
}

func (o *EmailAuthenticationVerificationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /user/email/authentication/{authentication_token}][%d] emailAuthenticationVerificationOK %s", 200, payload)
}

func (o *EmailAuthenticationVerificationOK) GetPayload() *EmailAuthenticationVerificationOKBody {
	return o.Payload
}

func (o *EmailAuthenticationVerificationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(EmailAuthenticationVerificationOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailAuthenticationVerificationUnauthorized creates a EmailAuthenticationVerificationUnauthorized with default headers values
func NewEmailAuthenticationVerificationUnauthorized() *EmailAuthenticationVerificationUnauthorized {
	return &EmailAuthenticationVerificationUnauthorized{}
}

/*
EmailAuthenticationVerificationUnauthorized describes a response with status code 401, with default header values.

The user cannot be authenticated with the credentials which she/he has used.
*/
type EmailAuthenticationVerificationUnauthorized struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this email authentication verification unauthorized response has a 2xx status code
func (o *EmailAuthenticationVerificationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this email authentication verification unauthorized response has a 3xx status code
func (o *EmailAuthenticationVerificationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this email authentication verification unauthorized response has a 4xx status code
func (o *EmailAuthenticationVerificationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this email authentication verification unauthorized response has a 5xx status code
func (o *EmailAuthenticationVerificationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this email authentication verification unauthorized response a status code equal to that given
func (o *EmailAuthenticationVerificationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the email authentication verification unauthorized response
func (o *EmailAuthenticationVerificationUnauthorized) Code() int {
	return 401
}

func (o *EmailAuthenticationVerificationUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /user/email/authentication/{authentication_token}][%d] emailAuthenticationVerificationUnauthorized %s", 401, payload)
}

func (o *EmailAuthenticationVerificationUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /user/email/authentication/{authentication_token}][%d] emailAuthenticationVerificationUnauthorized %s", 401, payload)
}

func (o *EmailAuthenticationVerificationUnauthorized) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *EmailAuthenticationVerificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailAuthenticationVerificationUnprocessableEntity creates a EmailAuthenticationVerificationUnprocessableEntity with default headers values
func NewEmailAuthenticationVerificationUnprocessableEntity() *EmailAuthenticationVerificationUnprocessableEntity {
	return &EmailAuthenticationVerificationUnprocessableEntity{}
}

/*
EmailAuthenticationVerificationUnprocessableEntity describes a response with status code 422, with default header values.

All the custom errors that are generated from the Cycloid API
*/
type EmailAuthenticationVerificationUnprocessableEntity struct {

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this email authentication verification unprocessable entity response has a 2xx status code
func (o *EmailAuthenticationVerificationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this email authentication verification unprocessable entity response has a 3xx status code
func (o *EmailAuthenticationVerificationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this email authentication verification unprocessable entity response has a 4xx status code
func (o *EmailAuthenticationVerificationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this email authentication verification unprocessable entity response has a 5xx status code
func (o *EmailAuthenticationVerificationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this email authentication verification unprocessable entity response a status code equal to that given
func (o *EmailAuthenticationVerificationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the email authentication verification unprocessable entity response
func (o *EmailAuthenticationVerificationUnprocessableEntity) Code() int {
	return 422
}

func (o *EmailAuthenticationVerificationUnprocessableEntity) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /user/email/authentication/{authentication_token}][%d] emailAuthenticationVerificationUnprocessableEntity %s", 422, payload)
}

func (o *EmailAuthenticationVerificationUnprocessableEntity) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /user/email/authentication/{authentication_token}][%d] emailAuthenticationVerificationUnprocessableEntity %s", 422, payload)
}

func (o *EmailAuthenticationVerificationUnprocessableEntity) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *EmailAuthenticationVerificationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEmailAuthenticationVerificationDefault creates a EmailAuthenticationVerificationDefault with default headers values
func NewEmailAuthenticationVerificationDefault(code int) *EmailAuthenticationVerificationDefault {
	return &EmailAuthenticationVerificationDefault{
		_statusCode: code,
	}
}

/*
EmailAuthenticationVerificationDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type EmailAuthenticationVerificationDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this email authentication verification default response has a 2xx status code
func (o *EmailAuthenticationVerificationDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this email authentication verification default response has a 3xx status code
func (o *EmailAuthenticationVerificationDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this email authentication verification default response has a 4xx status code
func (o *EmailAuthenticationVerificationDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this email authentication verification default response has a 5xx status code
func (o *EmailAuthenticationVerificationDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this email authentication verification default response a status code equal to that given
func (o *EmailAuthenticationVerificationDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the email authentication verification default response
func (o *EmailAuthenticationVerificationDefault) Code() int {
	return o._statusCode
}

func (o *EmailAuthenticationVerificationDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /user/email/authentication/{authentication_token}][%d] emailAuthenticationVerification default %s", o._statusCode, payload)
}

func (o *EmailAuthenticationVerificationDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /user/email/authentication/{authentication_token}][%d] emailAuthenticationVerification default %s", o._statusCode, payload)
}

func (o *EmailAuthenticationVerificationDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *EmailAuthenticationVerificationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
EmailAuthenticationVerificationOKBody email authentication verification o k body
swagger:model EmailAuthenticationVerificationOKBody
*/
type EmailAuthenticationVerificationOKBody struct {

	// data
	// Required: true
	Data *models.UserSession `json:"data"`
}

// Validate validates this email authentication verification o k body
func (o *EmailAuthenticationVerificationOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *EmailAuthenticationVerificationOKBody) validateData(formats strfmt.Registry) error {

	if err := validate.Required("emailAuthenticationVerificationOK"+"."+"data", "body", o.Data); err != nil {
		return err
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("emailAuthenticationVerificationOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("emailAuthenticationVerificationOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this email authentication verification o k body based on the context it is used
func (o *EmailAuthenticationVerificationOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateData(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *EmailAuthenticationVerificationOKBody) contextValidateData(ctx context.Context, formats strfmt.Registry) error {

	if o.Data != nil {

		if err := o.Data.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("emailAuthenticationVerificationOK" + "." + "data")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("emailAuthenticationVerificationOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *EmailAuthenticationVerificationOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *EmailAuthenticationVerificationOKBody) UnmarshalBinary(b []byte) error {
	var res EmailAuthenticationVerificationOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
