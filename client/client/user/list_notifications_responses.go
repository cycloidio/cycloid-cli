// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/cycloidio/cycloid-cli/client/models"
)

// ListNotificationsReader is a Reader for the ListNotifications structure.
type ListNotificationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListNotificationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListNotificationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListNotificationsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListNotificationsOK creates a ListNotificationsOK with default headers values
func NewListNotificationsOK() *ListNotificationsOK {
	return &ListNotificationsOK{}
}

/*
ListNotificationsOK describes a response with status code 200, with default header values.

The notifications for the user
*/
type ListNotificationsOK struct {
	Payload []*models.Notification
}

// IsSuccess returns true when this list notifications o k response has a 2xx status code
func (o *ListNotificationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list notifications o k response has a 3xx status code
func (o *ListNotificationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list notifications o k response has a 4xx status code
func (o *ListNotificationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list notifications o k response has a 5xx status code
func (o *ListNotificationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list notifications o k response a status code equal to that given
func (o *ListNotificationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list notifications o k response
func (o *ListNotificationsOK) Code() int {
	return 200
}

func (o *ListNotificationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user/notifications][%d] listNotificationsOK %s", 200, payload)
}

func (o *ListNotificationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user/notifications][%d] listNotificationsOK %s", 200, payload)
}

func (o *ListNotificationsOK) GetPayload() []*models.Notification {
	return o.Payload
}

func (o *ListNotificationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListNotificationsDefault creates a ListNotificationsDefault with default headers values
func NewListNotificationsDefault(code int) *ListNotificationsDefault {
	return &ListNotificationsDefault{
		_statusCode: code,
	}
}

/*
ListNotificationsDefault describes a response with status code -1, with default header values.

The response sent when an unexpected error happened, as known as an internal server error.
*/
type ListNotificationsDefault struct {
	_statusCode int

	/* The length of the response body in octets (8-bit bytes).

	   Format: uint64
	*/
	ContentLength uint64

	Payload *models.ErrorPayload
}

// IsSuccess returns true when this list notifications default response has a 2xx status code
func (o *ListNotificationsDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this list notifications default response has a 3xx status code
func (o *ListNotificationsDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this list notifications default response has a 4xx status code
func (o *ListNotificationsDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this list notifications default response has a 5xx status code
func (o *ListNotificationsDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this list notifications default response a status code equal to that given
func (o *ListNotificationsDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the list notifications default response
func (o *ListNotificationsDefault) Code() int {
	return o._statusCode
}

func (o *ListNotificationsDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user/notifications][%d] listNotifications default %s", o._statusCode, payload)
}

func (o *ListNotificationsDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user/notifications][%d] listNotifications default %s", o._statusCode, payload)
}

func (o *ListNotificationsDefault) GetPayload() *models.ErrorPayload {
	return o.Payload
}

func (o *ListNotificationsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Length
	hdrContentLength := response.GetHeader("Content-Length")

	if hdrContentLength != "" {
		valcontentLength, err := swag.ConvertUint64(hdrContentLength)
		if err != nil {
			return errors.InvalidType("Content-Length", "header", "uint64", hdrContentLength)
		}
		o.ContentLength = valcontentLength
	}

	o.Payload = new(models.ErrorPayload)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
