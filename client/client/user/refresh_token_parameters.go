// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewRefreshTokenParams creates a new RefreshTokenParams object
// with the default values initialized.
func NewRefreshTokenParams() *RefreshTokenParams {
	var ()
	return &RefreshTokenParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewRefreshTokenParamsWithTimeout creates a new RefreshTokenParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRefreshTokenParamsWithTimeout(timeout time.Duration) *RefreshTokenParams {
	var ()
	return &RefreshTokenParams{

		timeout: timeout,
	}
}

// NewRefreshTokenParamsWithContext creates a new RefreshTokenParams object
// with the default values initialized, and the ability to set a context for a request
func NewRefreshTokenParamsWithContext(ctx context.Context) *RefreshTokenParams {
	var ()
	return &RefreshTokenParams{

		Context: ctx,
	}
}

// NewRefreshTokenParamsWithHTTPClient creates a new RefreshTokenParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRefreshTokenParamsWithHTTPClient(client *http.Client) *RefreshTokenParams {
	var ()
	return &RefreshTokenParams{
		HTTPClient: client,
	}
}

/*RefreshTokenParams contains all the parameters to send to the API endpoint
for the refresh token operation typically these are written to a http.Request
*/
type RefreshTokenParams struct {

	/*ChildCanonical
	  A canonical of a child organization used for filtering.

	*/
	ChildCanonical *string
	/*OrganizationCanonical
	  A canonical of a organization used for filtering.

	*/
	OrganizationCanonical *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the refresh token params
func (o *RefreshTokenParams) WithTimeout(timeout time.Duration) *RefreshTokenParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the refresh token params
func (o *RefreshTokenParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the refresh token params
func (o *RefreshTokenParams) WithContext(ctx context.Context) *RefreshTokenParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the refresh token params
func (o *RefreshTokenParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the refresh token params
func (o *RefreshTokenParams) WithHTTPClient(client *http.Client) *RefreshTokenParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the refresh token params
func (o *RefreshTokenParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChildCanonical adds the childCanonical to the refresh token params
func (o *RefreshTokenParams) WithChildCanonical(childCanonical *string) *RefreshTokenParams {
	o.SetChildCanonical(childCanonical)
	return o
}

// SetChildCanonical adds the childCanonical to the refresh token params
func (o *RefreshTokenParams) SetChildCanonical(childCanonical *string) {
	o.ChildCanonical = childCanonical
}

// WithOrganizationCanonical adds the organizationCanonical to the refresh token params
func (o *RefreshTokenParams) WithOrganizationCanonical(organizationCanonical *string) *RefreshTokenParams {
	o.SetOrganizationCanonical(organizationCanonical)
	return o
}

// SetOrganizationCanonical adds the organizationCanonical to the refresh token params
func (o *RefreshTokenParams) SetOrganizationCanonical(organizationCanonical *string) {
	o.OrganizationCanonical = organizationCanonical
}

// WriteToRequest writes these params to a swagger request
func (o *RefreshTokenParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ChildCanonical != nil {

		// query param child_canonical
		var qrChildCanonical string
		if o.ChildCanonical != nil {
			qrChildCanonical = *o.ChildCanonical
		}
		qChildCanonical := qrChildCanonical
		if qChildCanonical != "" {
			if err := r.SetQueryParam("child_canonical", qChildCanonical); err != nil {
				return err
			}
		}

	}

	if o.OrganizationCanonical != nil {

		// query param organization_canonical
		var qrOrganizationCanonical string
		if o.OrganizationCanonical != nil {
			qrOrganizationCanonical = *o.OrganizationCanonical
		}
		qOrganizationCanonical := qrOrganizationCanonical
		if qOrganizationCanonical != "" {
			if err := r.SetQueryParam("organization_canonical", qOrganizationCanonical); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
