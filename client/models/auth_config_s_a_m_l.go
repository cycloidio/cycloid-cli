// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AuthConfigSAML AppConfigSAML
// swagger:model AuthConfigSAML
type AuthConfigSAML struct {

	// Entity ID of the SAML2 identity provider.
	// Required: true
	Provider *string `json:"provider"`

	// SSO URL to which the user should be redirected in order to authenticate with the Identity Provider.
	// Required: true
	// Format: uri
	SsoURL *strfmt.URI `json:"sso_url"`
}

// Validate validates this auth config s a m l
func (m *AuthConfigSAML) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSsoURL(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AuthConfigSAML) validateProvider(formats strfmt.Registry) error {

	if err := validate.Required("provider", "body", m.Provider); err != nil {
		return err
	}

	return nil
}

func (m *AuthConfigSAML) validateSsoURL(formats strfmt.Registry) error {

	if err := validate.Required("sso_url", "body", m.SsoURL); err != nil {
		return err
	}

	if err := validate.FormatOf("sso_url", "body", "uri", m.SsoURL.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AuthConfigSAML) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AuthConfigSAML) UnmarshalBinary(b []byte) error {
	var res AuthConfigSAML
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
