// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BillingInformationTaxInformation Billing Information Tax Information
//
// Tax information of the billing
// swagger:model BillingInformationTaxInformation
type BillingInformationTaxInformation struct {

	// tax id
	// Required: true
	TaxID *string `json:"tax_id"`

	// type
	// Required: true
	Type *string `json:"type"`
}

// Validate validates this billing information tax information
func (m *BillingInformationTaxInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTaxID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BillingInformationTaxInformation) validateTaxID(formats strfmt.Registry) error {

	if err := validate.Required("tax_id", "body", m.TaxID); err != nil {
		return err
	}

	return nil
}

func (m *BillingInformationTaxInformation) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BillingInformationTaxInformation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BillingInformationTaxInformation) UnmarshalBinary(b []byte) error {
	var res BillingInformationTaxInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
