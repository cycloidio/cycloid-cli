// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CloudCostManagementTagMapping CloudCostManagementTagMapping
//
// Object containing Cloud Cost Management tag mapping. The mapping is used to
// identify resources belonging to projects and environments across cloud
// providers. The mapping can be a set of tag keys or a regexp to capture
// tag keys.
//
// swagger:model CloudCostManagementTagMapping
type CloudCostManagementTagMapping struct {

	// This is a list of all the tag keys in the DB for the Org
	AllTags []string `json:"all_tags"`

	// component regex
	ComponentRegex string `json:"component_regex,omitempty"`

	// component tags
	ComponentTags []string `json:"component_tags"`

	// created at
	// Required: true
	// Minimum: 0
	CreatedAt *uint64 `json:"created_at"`

	// environment regex
	EnvironmentRegex string `json:"environment_regex,omitempty"`

	// environment tags
	EnvironmentTags []string `json:"environment_tags"`

	// id
	// Required: true
	// Minimum: 1
	ID *uint32 `json:"id"`

	// project regex
	ProjectRegex string `json:"project_regex,omitempty"`

	// project tags
	ProjectTags []string `json:"project_tags"`

	// updated at
	// Required: true
	// Minimum: 0
	UpdatedAt *uint64 `json:"updated_at"`
}

// Validate validates this cloud cost management tag mapping
func (m *CloudCostManagementTagMapping) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CloudCostManagementTagMapping) validateCreatedAt(formats strfmt.Registry) error {

	if err := validate.Required("created_at", "body", m.CreatedAt); err != nil {
		return err
	}

	if err := validate.MinimumUint("created_at", "body", *m.CreatedAt, 0, false); err != nil {
		return err
	}

	return nil
}

func (m *CloudCostManagementTagMapping) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	if err := validate.MinimumUint("id", "body", uint64(*m.ID), 1, false); err != nil {
		return err
	}

	return nil
}

func (m *CloudCostManagementTagMapping) validateUpdatedAt(formats strfmt.Registry) error {

	if err := validate.Required("updated_at", "body", m.UpdatedAt); err != nil {
		return err
	}

	if err := validate.MinimumUint("updated_at", "body", *m.UpdatedAt, 0, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this cloud cost management tag mapping based on context it is used
func (m *CloudCostManagementTagMapping) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CloudCostManagementTagMapping) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CloudCostManagementTagMapping) UnmarshalBinary(b []byte) error {
	var res CloudCostManagementTagMapping
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
