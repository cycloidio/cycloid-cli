// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CostExplorerProjectProviderResources CostExplorerProjectProviderResources
//
// Trend for a project
//
// swagger:model CostExplorerProjectProviderResources
type CostExplorerProjectProviderResources struct {

	// Cost of the project for the provider
	// Required: true
	Cost *float64 `json:"cost"`

	// new resources
	// Required: true
	NewResources *int64 `json:"new_resources"`

	// provider
	// Required: true
	Provider *string `json:"provider"`

	// resources
	// Required: true
	Resources *int64 `json:"resources"`
}

// Validate validates this cost explorer project provider resources
func (m *CostExplorerProjectProviderResources) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCost(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNewResources(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CostExplorerProjectProviderResources) validateCost(formats strfmt.Registry) error {

	if err := validate.Required("cost", "body", m.Cost); err != nil {
		return err
	}

	return nil
}

func (m *CostExplorerProjectProviderResources) validateNewResources(formats strfmt.Registry) error {

	if err := validate.Required("new_resources", "body", m.NewResources); err != nil {
		return err
	}

	return nil
}

func (m *CostExplorerProjectProviderResources) validateProvider(formats strfmt.Registry) error {

	if err := validate.Required("provider", "body", m.Provider); err != nil {
		return err
	}

	return nil
}

func (m *CostExplorerProjectProviderResources) validateResources(formats strfmt.Registry) error {

	if err := validate.Required("resources", "body", m.Resources); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CostExplorerProjectProviderResources) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CostExplorerProjectProviderResources) UnmarshalBinary(b []byte) error {
	var res CostExplorerProjectProviderResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
