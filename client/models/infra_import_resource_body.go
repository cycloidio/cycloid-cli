// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"
	"io"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InfraImportResourceBody Provider Resources body
//
// Entry that represents all the data needed for fetching resource
// swagger:model InfraImportResourceBody
type InfraImportResourceBody struct {
	configurationField CloudProviderConfiguration

	// Credential that will be used to import from the provider
	// Required: true
	// Max Length: 100
	// Min Length: 3
	// Pattern: ^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$
	CredentialCanonical *string `json:"credential_canonical"`

	// tags
	Tags []string `json:"tags"`
}

// Configuration gets the configuration of this base type
func (m *InfraImportResourceBody) Configuration() CloudProviderConfiguration {
	return m.configurationField
}

// SetConfiguration sets the configuration of this base type
func (m *InfraImportResourceBody) SetConfiguration(val CloudProviderConfiguration) {
	m.configurationField = val
}

// UnmarshalJSON unmarshals this object with a polymorphic type from a JSON structure
func (m *InfraImportResourceBody) UnmarshalJSON(raw []byte) error {
	var data struct {
		Configuration json.RawMessage `json:"configuration"`

		CredentialCanonical *string `json:"credential_canonical"`

		Tags []string `json:"tags"`
	}
	buf := bytes.NewBuffer(raw)
	dec := json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&data); err != nil {
		return err
	}

	propConfiguration, err := UnmarshalCloudProviderConfiguration(bytes.NewBuffer(data.Configuration), runtime.JSONConsumer())
	if err != nil && err != io.EOF {
		return err
	}

	var result InfraImportResourceBody

	// configuration
	result.configurationField = propConfiguration

	// credential_canonical
	result.CredentialCanonical = data.CredentialCanonical

	// tags
	result.Tags = data.Tags

	*m = result

	return nil
}

// MarshalJSON marshals this object with a polymorphic type to a JSON structure
func (m InfraImportResourceBody) MarshalJSON() ([]byte, error) {
	var b1, b2, b3 []byte
	var err error
	b1, err = json.Marshal(struct {
		CredentialCanonical *string `json:"credential_canonical"`

		Tags []string `json:"tags"`
	}{

		CredentialCanonical: m.CredentialCanonical,

		Tags: m.Tags,
	},
	)
	if err != nil {
		return nil, err
	}
	b2, err = json.Marshal(struct {
		Configuration CloudProviderConfiguration `json:"configuration"`
	}{

		Configuration: m.configurationField,
	},
	)
	if err != nil {
		return nil, err
	}

	return swag.ConcatJSON(b1, b2, b3), nil
}

// Validate validates this infra import resource body
func (m *InfraImportResourceBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateConfiguration(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCredentialCanonical(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InfraImportResourceBody) validateConfiguration(formats strfmt.Registry) error {

	if err := validate.Required("configuration", "body", m.Configuration()); err != nil {
		return err
	}

	if err := m.Configuration().Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("configuration")
		}
		return err
	}

	return nil
}

func (m *InfraImportResourceBody) validateCredentialCanonical(formats strfmt.Registry) error {

	if err := validate.Required("credential_canonical", "body", m.CredentialCanonical); err != nil {
		return err
	}

	if err := validate.MinLength("credential_canonical", "body", string(*m.CredentialCanonical), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("credential_canonical", "body", string(*m.CredentialCanonical), 100); err != nil {
		return err
	}

	if err := validate.Pattern("credential_canonical", "body", string(*m.CredentialCanonical), `^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InfraImportResourceBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InfraImportResourceBody) UnmarshalBinary(b []byte) error {
	var res InfraImportResourceBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
