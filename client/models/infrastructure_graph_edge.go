// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InfrastructureGraphEdge Infrastructure
//
// Holds the information of an Edge of the Graph
// swagger:model InfrastructureGraphEdge
type InfrastructureGraphEdge struct {

	// canonicals
	// Required: true
	Canonicals []string `json:"canonicals"`

	// id
	// Required: true
	ID *string `json:"id"`

	// source
	// Required: true
	Source *string `json:"source"`

	// target
	// Required: true
	Target *string `json:"target"`
}

// Validate validates this infrastructure graph edge
func (m *InfrastructureGraphEdge) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCanonicals(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTarget(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InfrastructureGraphEdge) validateCanonicals(formats strfmt.Registry) error {

	if err := validate.Required("canonicals", "body", m.Canonicals); err != nil {
		return err
	}

	return nil
}

func (m *InfrastructureGraphEdge) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *InfrastructureGraphEdge) validateSource(formats strfmt.Registry) error {

	if err := validate.Required("source", "body", m.Source); err != nil {
		return err
	}

	return nil
}

func (m *InfrastructureGraphEdge) validateTarget(formats strfmt.Registry) error {

	if err := validate.Required("target", "body", m.Target); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InfrastructureGraphEdge) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InfrastructureGraphEdge) UnmarshalBinary(b []byte) error {
	var res InfrastructureGraphEdge
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
