// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MemberAssignation Member assignation
//
// Member is a user who is associated to an entity of the system. The user is newly assigned or reassigned for updating is data.
// swagger:model MemberAssignation
type MemberAssignation struct {

	// The role of the member.
	// Required: true
	// Minimum: 1
	RoleID *uint32 `json:"role_id"`
}

// Validate validates this member assignation
func (m *MemberAssignation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRoleID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MemberAssignation) validateRoleID(formats strfmt.Registry) error {

	if err := validate.Required("role_id", "body", m.RoleID); err != nil {
		return err
	}

	if err := validate.MinimumInt("role_id", "body", int64(*m.RoleID), 1, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MemberAssignation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MemberAssignation) UnmarshalBinary(b []byte) error {
	var res MemberAssignation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
