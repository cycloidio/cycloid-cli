// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewEnvironment NewEnvironment
//
// Represent an entity necessary for environment creation
// swagger:model NewEnvironment
type NewEnvironment struct {

	// canonical
	// Required: true
	// Max Length: 100
	// Min Length: 1
	// Pattern: ^[\da-zA-Z]+(?:[\da-zA-Z\-._]+[\da-zA-Z]|[\da-zA-Z])$
	Canonical *string `json:"canonical"`

	// cloud provider canonical
	// Max Length: 100
	// Min Length: 3
	// Pattern: ^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$
	CloudProviderCanonical string `json:"cloud_provider_canonical,omitempty"`

	// color
	// Max Length: 64
	Color string `json:"color,omitempty"`

	// icon
	// Max Length: 64
	Icon string `json:"icon,omitempty"`
}

// Validate validates this new environment
func (m *NewEnvironment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCanonical(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCloudProviderCanonical(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateColor(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIcon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewEnvironment) validateCanonical(formats strfmt.Registry) error {

	if err := validate.Required("canonical", "body", m.Canonical); err != nil {
		return err
	}

	if err := validate.MinLength("canonical", "body", string(*m.Canonical), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("canonical", "body", string(*m.Canonical), 100); err != nil {
		return err
	}

	if err := validate.Pattern("canonical", "body", string(*m.Canonical), `^[\da-zA-Z]+(?:[\da-zA-Z\-._]+[\da-zA-Z]|[\da-zA-Z])$`); err != nil {
		return err
	}

	return nil
}

func (m *NewEnvironment) validateCloudProviderCanonical(formats strfmt.Registry) error {

	if swag.IsZero(m.CloudProviderCanonical) { // not required
		return nil
	}

	if err := validate.MinLength("cloud_provider_canonical", "body", string(m.CloudProviderCanonical), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("cloud_provider_canonical", "body", string(m.CloudProviderCanonical), 100); err != nil {
		return err
	}

	if err := validate.Pattern("cloud_provider_canonical", "body", string(m.CloudProviderCanonical), `^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$`); err != nil {
		return err
	}

	return nil
}

func (m *NewEnvironment) validateColor(formats strfmt.Registry) error {

	if swag.IsZero(m.Color) { // not required
		return nil
	}

	if err := validate.MaxLength("color", "body", string(m.Color), 64); err != nil {
		return err
	}

	return nil
}

func (m *NewEnvironment) validateIcon(formats strfmt.Registry) error {

	if swag.IsZero(m.Icon) { // not required
		return nil
	}

	if err := validate.MaxLength("icon", "body", string(m.Icon), 64); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NewEnvironment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewEnvironment) UnmarshalBinary(b []byte) error {
	var res NewEnvironment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
