// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewInfraPolicy Create InfraPolicy
//
// Create a new policy to control operations across infrastructure.
// swagger:model NewInfraPolicy
type NewInfraPolicy struct {

	// The body field is the code in plain text that defines the rules for the policy.
	// Required: true
	Body *string `json:"body"`

	// canonical
	// Required: true
	// Max Length: 30
	// Min Length: 3
	// Pattern: ^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$
	Canonical *string `json:"canonical"`

	// description
	Description string `json:"description,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// name
	// Required: true
	// Min Length: 3
	Name *string `json:"name"`

	// User canonical that owns this InfraPolicy. When a user is the
	// owner of an InfraPolicy it has all the permissions on it.
	//
	// Required: true
	// Max Length: 30
	// Min Length: 3
	// Pattern: ^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$
	Owner *string `json:"owner"`

	// severity
	// Required: true
	// Enum: [critical warning advisory]
	Severity *string `json:"severity"`
}

// Validate validates this new infra policy
func (m *NewInfraPolicy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBody(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCanonical(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOwner(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSeverity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewInfraPolicy) validateBody(formats strfmt.Registry) error {

	if err := validate.Required("body", "body", m.Body); err != nil {
		return err
	}

	return nil
}

func (m *NewInfraPolicy) validateCanonical(formats strfmt.Registry) error {

	if err := validate.Required("canonical", "body", m.Canonical); err != nil {
		return err
	}

	if err := validate.MinLength("canonical", "body", string(*m.Canonical), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("canonical", "body", string(*m.Canonical), 30); err != nil {
		return err
	}

	if err := validate.Pattern("canonical", "body", string(*m.Canonical), `^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$`); err != nil {
		return err
	}

	return nil
}

func (m *NewInfraPolicy) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", string(*m.Name), 3); err != nil {
		return err
	}

	return nil
}

func (m *NewInfraPolicy) validateOwner(formats strfmt.Registry) error {

	if err := validate.Required("owner", "body", m.Owner); err != nil {
		return err
	}

	if err := validate.MinLength("owner", "body", string(*m.Owner), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("owner", "body", string(*m.Owner), 30); err != nil {
		return err
	}

	if err := validate.Pattern("owner", "body", string(*m.Owner), `^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$`); err != nil {
		return err
	}

	return nil
}

var newInfraPolicyTypeSeverityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["critical","warning","advisory"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		newInfraPolicyTypeSeverityPropEnum = append(newInfraPolicyTypeSeverityPropEnum, v)
	}
}

const (

	// NewInfraPolicySeverityCritical captures enum value "critical"
	NewInfraPolicySeverityCritical string = "critical"

	// NewInfraPolicySeverityWarning captures enum value "warning"
	NewInfraPolicySeverityWarning string = "warning"

	// NewInfraPolicySeverityAdvisory captures enum value "advisory"
	NewInfraPolicySeverityAdvisory string = "advisory"
)

// prop value enum
func (m *NewInfraPolicy) validateSeverityEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, newInfraPolicyTypeSeverityPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *NewInfraPolicy) validateSeverity(formats strfmt.Registry) error {

	if err := validate.Required("severity", "body", m.Severity); err != nil {
		return err
	}

	// value enum
	if err := m.validateSeverityEnum("severity", "body", *m.Severity); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NewInfraPolicy) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewInfraPolicy) UnmarshalBinary(b []byte) error {
	var res NewInfraPolicy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
