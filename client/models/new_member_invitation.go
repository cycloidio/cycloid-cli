// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewMemberInvitation Invite user
//
// Send an invitation to a user to something. Something can be to create an account, to join to an organization, to join to a team, etc. API operation determines the operation to perform.
//
// swagger:model NewMemberInvitation
type NewMemberInvitation struct {

	// Invite user by email
	// Required: true
	// Format: email
	Email *strfmt.Email `json:"email"`

	// The role of the member.
	// Required: true
	// Max Length: 100
	// Min Length: 3
	// Pattern: ^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$
	RoleCanonical *string `json:"role_canonical"`
}

// Validate validates this new member invitation
func (m *NewMemberInvitation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRoleCanonical(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewMemberInvitation) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	if err := validate.FormatOf("email", "body", "email", m.Email.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *NewMemberInvitation) validateRoleCanonical(formats strfmt.Registry) error {

	if err := validate.Required("role_canonical", "body", m.RoleCanonical); err != nil {
		return err
	}

	if err := validate.MinLength("role_canonical", "body", *m.RoleCanonical, 3); err != nil {
		return err
	}

	if err := validate.MaxLength("role_canonical", "body", *m.RoleCanonical, 100); err != nil {
		return err
	}

	if err := validate.Pattern("role_canonical", "body", *m.RoleCanonical, `^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$`); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this new member invitation based on context it is used
func (m *NewMemberInvitation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *NewMemberInvitation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewMemberInvitation) UnmarshalBinary(b []byte) error {
	var res NewMemberInvitation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
