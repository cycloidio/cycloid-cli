// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewOAuthUser User's OAuth information
//
// The User OAuth information
// swagger:model NewOAuthUser
type NewOAuthUser struct {

	// email
	// Required: true
	// Format: email
	Email *strfmt.Email `json:"email"`

	// family name
	FamilyName string `json:"family_name,omitempty"`

	// given name
	// Required: true
	GivenName *string `json:"given_name"`

	// picture url
	// Format: uri
	PictureURL strfmt.URI `json:"picture_url,omitempty"`

	// social id
	// Required: true
	SocialID *string `json:"social_id"`

	// username
	// Required: true
	// Max Length: 30
	// Min Length: 3
	// Pattern: ^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$
	Username *string `json:"username"`
}

// Validate validates this new o auth user
func (m *NewOAuthUser) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGivenName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePictureURL(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSocialID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewOAuthUser) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	if err := validate.FormatOf("email", "body", "email", m.Email.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *NewOAuthUser) validateGivenName(formats strfmt.Registry) error {

	if err := validate.Required("given_name", "body", m.GivenName); err != nil {
		return err
	}

	return nil
}

func (m *NewOAuthUser) validatePictureURL(formats strfmt.Registry) error {

	if swag.IsZero(m.PictureURL) { // not required
		return nil
	}

	if err := validate.FormatOf("picture_url", "body", "uri", m.PictureURL.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *NewOAuthUser) validateSocialID(formats strfmt.Registry) error {

	if err := validate.Required("social_id", "body", m.SocialID); err != nil {
		return err
	}

	return nil
}

func (m *NewOAuthUser) validateUsername(formats strfmt.Registry) error {

	if err := validate.Required("username", "body", m.Username); err != nil {
		return err
	}

	if err := validate.MinLength("username", "body", string(*m.Username), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("username", "body", string(*m.Username), 30); err != nil {
		return err
	}

	if err := validate.Pattern("username", "body", string(*m.Username), `^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NewOAuthUser) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewOAuthUser) UnmarshalBinary(b []byte) error {
	var res NewOAuthUser
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
