// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NewSubscription New Subscription
//
// It reflects the creation of a Subscription
// swagger:model NewSubscription
type NewSubscription struct {

	// plan canonical
	// Required: true
	// Max Length: 30
	// Min Length: 3
	// Pattern: ^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$
	PlanCanonical *string `json:"plan_canonical"`
}

// Validate validates this new subscription
func (m *NewSubscription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePlanCanonical(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NewSubscription) validatePlanCanonical(formats strfmt.Registry) error {

	if err := validate.Required("plan_canonical", "body", m.PlanCanonical); err != nil {
		return err
	}

	if err := validate.MinLength("plan_canonical", "body", string(*m.PlanCanonical), 3); err != nil {
		return err
	}

	if err := validate.MaxLength("plan_canonical", "body", string(*m.PlanCanonical), 30); err != nil {
		return err
	}

	if err := validate.Pattern("plan_canonical", "body", string(*m.PlanCanonical), `^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$`); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NewSubscription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NewSubscription) UnmarshalBinary(b []byte) error {
	var res NewSubscription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
