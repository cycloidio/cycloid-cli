// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PipelineDiffRecord PipelineDiffRecord
//
// Represents a diff record of a pipeline diff
// swagger:model PipelineDiffRecord
type PipelineDiffRecord struct {

	// Represents the type of delta (added, removed, changed, equals) for the text line
	// Required: true
	DeltaType *string `json:"delta_type"`

	// Represents a text line in a pipeline configuration
	// Required: true
	Line *string `json:"line"`
}

// Validate validates this pipeline diff record
func (m *PipelineDiffRecord) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDeltaType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLine(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PipelineDiffRecord) validateDeltaType(formats strfmt.Registry) error {

	if err := validate.Required("delta_type", "body", m.DeltaType); err != nil {
		return err
	}

	return nil
}

func (m *PipelineDiffRecord) validateLine(formats strfmt.Registry) error {

	if err := validate.Required("line", "body", m.Line); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PipelineDiffRecord) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PipelineDiffRecord) UnmarshalBinary(b []byte) error {
	var res PipelineDiffRecord
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
