// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TaskRunConfig TaskRunConfig
//
// The configuration of a concourse task-run.
// swagger:model TaskRunConfig
type TaskRunConfig struct {

	// args
	Args []string `json:"args"`

	// path
	// Min Length: 3
	Path string `json:"path,omitempty"`
}

// Validate validates this task run config
func (m *TaskRunConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePath(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TaskRunConfig) validatePath(formats strfmt.Registry) error {

	if swag.IsZero(m.Path) { // not required
		return nil
	}

	if err := validate.MinLength("path", "body", string(m.Path), 3); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TaskRunConfig) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskRunConfig) UnmarshalBinary(b []byte) error {
	var res TaskRunConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
