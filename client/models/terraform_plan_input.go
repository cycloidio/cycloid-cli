// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TerraformPlanInput TerraformPlanInput
//
// Input for endpoints that require a Terraform plan.
// swagger:model TerraformPlanInput
type TerraformPlanInput struct {

	// Terraform plan file in escaped JSON format. See more: https://www.terraform.io/docs/internals/json-format.html
	// Required: true
	Tfplan *string `json:"tfplan"`
}

// Validate validates this terraform plan input
func (m *TerraformPlanInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTfplan(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TerraformPlanInput) validateTfplan(formats strfmt.Registry) error {

	if err := validate.Required("tfplan", "body", m.Tfplan); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TerraformPlanInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TerraformPlanInput) UnmarshalBinary(b []byte) error {
	var res TerraformPlanInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
