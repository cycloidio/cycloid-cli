swagger: '2.0'
info: # TODO: https://github.com/cycloidio/youdeploy-http-api/issues/7 Fill all the fields of this section before opening the API outside Cycloid
  title: Cycloid.io
  description: ''
  termsOfService: ''
  contact:
    name: ''
    url: 'http://cycloid.io'
    email: contact@cycloid.io
  license:
    name: 'Cycloid @copyrights'
    url: 'http://cycloid.io'
  version: '0'
host: 'http-api-stoplight.cycloid.io'
schemes:
  - https
consumes:
  - application/vnd.cycloid.io.v1+json
produces:
  - application/json
securityDefinitions:
  api_key:
    type: apiKey
    description: The API authorization is done with JWT tokens
    in: header
    name: Authorization
security:
  - api_key: []
tags:
  - name: Cycloid
    description: Operation related to Cycloid's application.
  - name: Organizations
    description: Operations for organizations.
  - name: Organization teams
    description: Operations for teams which belong to an organization.
  - name: Organization projects
    description: Operations for projects which belong to an organization.
  - name: Organization members
    description: Operations for members of an organization.
  - name: User
    description: Operations for the authenticated user.
  - name: Organization pipelines
    description: Operations regarding pipelines in an organization.
  - name: Organization pipelines jobs
    description: Operations on jobs belonging to a pipeline.
  - name: Organization pipelines jobs build
    description: Operations on build of a job from a pipeline.
  - name: Organization Infrastructure
    description: Operations on the infrastructure of an organization
  - name: Organization Environments
    description: >-
      Operations to perform on an environment associated to a project of an
      organization.
  - name: Organization Logs
    description: Operations on the logs of a project
  - name: Organization Billing
    description: Operations on the Organization Billing
  - name: Organization Children
    description: Operations on the children of an organization
parameters:
  page_index:
    name: page_index
    description: The page number to request. The first page is 1.
    in: query
    type: integer
    format: uint32
    default: 1
  page_size:
    name: page_size
    description: The number of items at most which the response can have.
    in: query
    type: integer
    format: uint32
    default: 10
  default:
    name: default
    description: Value describing whether to return default
    in: query
    type: boolean
    default: false
  organization_canonical_query:
    name: organization_canonical
    description: A canonical of a organization used for filtering.
    in: query
    type: string
    minLength: 3
    maxLength: 30
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  child_canonical_query:
    name: child_canonical
    description: A canonical of a child organization used for filtering.
    in: query
    type: string
    minLength: 3
    maxLength: 30
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  project_canonical_query:
    name: project
    description: A canonical of a project used for filtering.
    in: query
    type: string
    minLength: 3
    maxLength: 30
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  project_name_query:
    name: project_name
    description: Search by project's name
    in: query
    type: string
  project_created_at_query:
    name: project_created_at
    description: Search by project's creation date
    in: query
    type: string
    format: date-time
  project_description_query:
    name: project_description
    description: Search by project's description
    in: query
    type: string
  team_name_query:
    name: team_name
    description: Search by team's name
    in: query
    type: string
  team_created_at_query:
    name: team_created_at
    description: Search by team's creation date
    in: query
    type: string
    format: date-time
  team_description_query:
    name: team_description
    description: Search by team's description
    in: query
    type: string
  service_catalog_status_query:
    name: service_catalog_status
    description: The status of the catalogservice used for filtering.
    in: query
    type: string
  service_catalog_own_query:
    name: service_catalog_own
    description: >
      Filters the Service Catalogs to only show the ones owned
      by the User Organization
    in: query
    type: boolean
  service_catalog_trusted_query:
    name: service_catalog_trusted
    description: >
      Filters the Service Catalogs to only show the ones that are from trusted
      source (Cycloid)
    in: query
    type: boolean
  owner_query:
    name: user_id
    description: Search by entity's owner
    in: query
    type: integer
    format: uint32
  order_by_query:
    in: query
    name: order_by
    type: string
    description: >
      Allows to order the list of items. Example usage: field_name:asc
  concourse_page_since:
    name: concourse_page_since
    description: The time after which we should look for entities to return.
    in: query
    type: integer
    format: int64
    default: 0
  concourse_page_until:
    name: concourse_page_until
    description: The time before which we should look for entities to return.
    in: query
    type: integer
    format: int64
    default: 0
  concourse_page_limit:
    name: concourse_page_limit
    description: The number of items at most which the response can have.
    in: query
    type: integer
    format: int64
    default: 10
  cost_tag_key:
    name: key
    description: The key of a tag
    in: query
    required: false
    type: string
    minLength: 3
    maxLength: 127
    pattern: '^[\w\-+=.:/@ ]+$'
  cost_granularity_filter:
    name: granularity
    description: >-
      Sets the AWS cost granularity to MONTHLY or DAILY.
    in: query
    required: true
    allowEmptyValue: false
    type: string
    enum:
      - MONTHLY
      - DAILY
  cost_metrics_filter:
    name: metrics
    description: >-
      Which metrics are returned in the query. For more information about blended
      and unblended rates, see https://aws.amazon.com/premiumsupport/knowledge-center/blended-rates-intro/.

      Valid values are BlendedCost, UnblendedCost, and UsageQuantity.

      If you return the UsageQuantity metric, the service aggregates all usage
      numbers without taking into account the units. For example, if you aggregate
      usageQuantity across all of EC2, the results aren't meaningful because EC2
      compute hours and data transfer are measured in different units (for example,
      hours vs. GB). To get more meaningful UsageQuantity metrics, filter by UsageType
      or UsageTypeGroups.
    in: query
    type: array
    required: true
    collectionFormat: multi
    allowEmptyValue: false
    uniqueItems: true
    items:
      type: string
      enum:
        - BlendedCost
        - UnblendedCost
        - UsageQuantity
  cost_begin_filter:
    name: begin
    description: >-
      Sets the start date for retrieving AWS costs. The start date is inclusive.
    in: query
    type: string
    required: true
    minLength: 10
    maxLength: 10
    pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
  cost_end_filter:
    name: end
    description: >-
      Sets the end dates for retrieving AWS costs. The end date is exclusive.
    in: query
    type: string
    required: true
    minLength: 10
    maxLength: 10
    pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
  cost_services_filter:
    name: services
    description: >-
      The names of the services that you can use to filter and group your results.
    in: query
    required: false
    collectionFormat: multi
    allowEmptyValue: false
    type: array
    items:
      type: string
  cost_group_by_filter:
    name: group_by
    description: >-
      Represents a group when you specify a group by criteria, or in the response to a
      query with a specific grouping.
    in: query
    type: array
    allowEmptyValue: false
    collectionFormat: multi
    uniqueItems: true
    items:
      type: string
      pattern: '^(?:(?:[^|]+\|[^|]+)|(?:\|[^|]+)|(?:[^|]+\|))$'
  organization_canonical:
    name: organization_canonical
    description: A canonical of an organization.
    in: path
    required: true
    type: string
    minLength: 3
    maxLength: 30
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  environment_canonical_query:
    name: environment
    description: The environment canonical to use a query filter
    in: query
    type: string
    minLength: 1
    maxLength: 30
    pattern: '^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$'
  environment_canonical:
    name: environment_canonical
    description: The environment canonical to use as part of a path
    in: path
    required: true
    type: string
    minLength: 1
    maxLength: 30
    pattern: '^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$'
  cache_path_query:
    name: cache_path
    description: The cache path to use as part of a clearTaskCache request
    in: query
    required: false
    type: string
    default: ""
  team_canonical:
    name: team_canonical
    description: A canonical of a team.
    in: path
    required: true
    type: string
    minLength: 3
    maxLength: 30
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  project_canonical:
    name: project_canonical
    description: A canonical of a project.
    in: path
    required: true
    type: string
    minLength: 3
    maxLength: 30
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  username:
    name: username
    description: A username
    in: path
    required: true
    type: string
    minLength: 3
    maxLength: 30
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  pipeline_name:
    name: inpath_pipeline_name
    description: A pipeline name
    in: path
    required: true
    type: string
    minLength: 1
    maxLength: 100
    pattern: '^[a-z0-9]+[a-z0-9\-_.]+[a-z0-9]+$'
  pipeline_name_query:
    name: pipeline_name
    description: A pipeline name
    in: query
    required: true
    type: string
    minLength: 1
    maxLength: 100
    pattern: '^[a-z0-9]+[a-z0-9\-_.]+[a-z0-9]+$'
  build_id:
    name: build_id
    description: A build id
    in: path
    required: true
    type: string
    minLength: 1
    maxLength: 20
  job_name:
    name: job_name
    description: A job name
    in: path
    required: true
    type: string
    minLength: 1
    maxLength: 150
  step_name:
    name: step_name
    description: A step name from a job task
    in: path
    required: true
    type: string
    minLength: 1
    maxLength: 150
  resource_name:
    name: resource_name
    description: A resource name
    in: path
    required: true
    type: string
    minLength: 1
    maxLength: 150
  filter_version:
    name: filter_version
    description: A version of a resource
    in: query
    type: array
    items:
      type: string
    required: false
    minLength: 1
  resource_version_id:
    name: resource_version_id
    description: A resource's version id
    in: path
    required: true
    type: integer
    format: uint64
  service_catalog_ref:
    name: service_catalog_ref
    description: A Service Catalog name
    in: path
    required: true
    type: string
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+:[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  use_case_canonical:
    name: use_case_canonical
    description: A use case canonical
    in: path
    required: true
    type: string
    minLength: 3
    maxLength: 30
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  credential_id:
    name: credential_id
    description: A Credential id
    in: path
    required: true
    type: integer
    format: uint32
  credential_id_query:
    name: credential_id
    description: A Credential id
    in: query
    required: true
    type: integer
    format: uint32
  credential_id_not_required_query:
    name: credential_id
    description: A Credential id
    in: query
    type: integer
    format: uint32
  credential_type_query:
    name: credential_type
    description: A Credential type
    in: query
    type: string
    enum:
      - ssh
      - aws
      - custom
      - azure
      - azure_storage
      - gcp
      - basic_auth
      - elasticsearch
      - swift
  git_url_query:
    name: git_url
    description: Git URL to repository
    in: query
    required: true
    type: string
    pattern: '(?:http|https|git|ssh|git@[-\w.]+):(\/\/)?(.*?)(\.git)?(\/?|\#[-\d\w._]+?)$'
  external_backend_id:
    name: external_backend_id
    description: External Backend ID
    in: path
    required: true
    type: integer
    format: uint32
  service_catalog_source_id:
    name: service_catalog_source_id
    description: Organization Service Catalog Sources ID
    in: path
    required: true
    type: integer
    format: uint32
  config_repository_id:
    name: config_repository_id
    description: Organization Config Repositories ID
    in: path
    required: true
    type: integer
    format: uint32
  aws_next_token:
    name: next
    description: The token to retrieve the next page of results
    in: query
    type: string
    minLength: 1
  aws_infrastructure_resource_query:
    name: resource
    description: >-
      Supported AWS type of resource to query.
      The parameter can be specified several times in order to request for different kind of resources.
    in: query
    type: array
    allowEmptyValue: false
    collectionFormat: multi
    uniqueItems: true
    items:
      type: string
      enum:
        - instances
        - vpcs
        - images
        - security_groups
        - subnets
        - volumes
        - snapshots
        - cache_clusters
        - load_balancers_v1
        - load_balancers_v2
        - db_instances
        - buckets
  aws_tags:
    name: tag
    description: >-
      An amazon tag, represented as `key|value` and where `key` or `value`
      could be omitted but not both, in order to select resources which has
      a `key` or a `value` whatever is its counterpart.
      `key` nor `value` can contains the `|` character.
      The parameter can be specified several times in order to request resources
      which match with at least one of the `tag|value` pairs
    in: query
    type: array
    allowEmptyValue: false
    collectionFormat: multi
    uniqueItems: true
    items:
      type: string
      minLength: 2
      maxLength: 383
      pattern: '^(?:(?:[\w\-+=.:/@ ]+\|)|(?:\|[\w\-+=.:/@ ]+)|(?:[\w\-+=.:/@ ]+\|[\w\-+=.:/@ ]+))$'
  timestamp_range_begin_query:
    name: begin
    description: >-
      The unix timestamp in milliseconds, which indicate the start of the time
      range.
    in: query
    type: integer
    format: uint64
    required: false
  timestamp_range_end_query:
    name: end
    description: >-
      The unix timestamp in milliseconds, which indicate the end of the time
      range.
    in: query
    type: integer
    format: uint64
    required: false
  raw_query:
    name: query
    description: >-
      A free text which the content depends of the context of the API endpoint.
      Can be a free text value or a comple query expressed of supported query
      language.
    in: query
    type: string
    required: false
    minLength: 1
  log_source_id:
    name: log_source_id
    description: >-
      A unique identifier, which group log's entries under under a context,
      established by the source.
    in: path
    required: true
    type: string
    minLength: 1
  event_type:
    name: type
    description: >-
      Specify the types of the events to be requested.
      The returned events must have one of the specified types.
    in: query
    type: array
    required: false
    allowEmptyValue: false
    collectionFormat: multi
    items:
      type: string
      enum:
        - Cycloid
        - AWS
        - Monitoring
        - Custom
  event_severity:
    name: severity
    description: >-
      Specify the severities of the events to be requested.
      The returned events must have one of the specified severities.
    in: query
    type: array
    required: false
    allowEmptyValue: false
    collectionFormat: multi
    items:
      type: string
      enum:
        - info
        - warn
        - err
        - crit
  provider_canonical:
    name: provider_canonical
    description: A canonical of a Provider
    in: path
    required: true
    type: string
    minLength: 3
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  resource_canonical:
    name: resource_canonical
    description: A canonical of a Resource
    in: path
    required: true
    type: string
    minLength: 3
    pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  role_id:
    name: role_id
    description: Organization Role ID
    in: path
    required: true
    type: integer
    format: uint32
  verification_token:
    name: verification_token
    description: A token for verifying emails, invitations, etc.
    in: path
    required: true
    type: string
    minLength: 5
  social_type:
    name: social_type
    description: The OAuth Social type
    in: path
    required: true
    type: string
    enum:
      - azuread
  oauth_code:
    name: oauth_code
    description: The OAuth code returned form the Social Provider
    required: true
    in: query
    type: string
responses:
  not_found_entity_in_path:
    description: >-
      The response sent when any of the entities present in the path is not
      found.
    schema:
      $ref: '#/definitions/ErrorPayload'
    headers:
      Content-Length:
        description: The length of the response body in octets (8-bit bytes).
        type: integer
        format: int64
    examples:
      application/json:
        errors:
          - message: Entity not found
            code: NotFoundEntity
  not_enough_permissions:
    description: >-
      The authenticated user cannot perform the operation because, it doesn't
      have permissions for such operation.
    schema:
      $ref: '#/definitions/ErrorPayload'
    headers:
      Content-Length:
        description: The length of the response body in octets (8-bit bytes).
        type: integer
        format: int64
    examples:
      application/json:
        errors:
          - message: Not enough permissions to perform the operation
            code: Unauthorized
  unexpected_error:
    description: >-
      The response sent when an unexpected error happened, as known as an
      internal server error.
    schema:
      $ref: '#/definitions/ErrorPayload'
    examples:
      application/json:
        errors:
          - message: Server Internal error
            code: Unexpected
  unprocessable_entity:
    description: >-
      All the custom errors that are generated from the Cycloid API
    schema:
      $ref: '#/definitions/ErrorPayload'
    examples:
      application/json:
        errors:
          - message: some error
            code: SomeCode
  unauthenticated:
    description: >-
      The user cannot be authenticated with the credentials which she/he
      has used.
    headers:
      Content-Length:
        description: The length of the response body in octets (8-bit bytes).
        type: integer
        format: int64
    schema:
      $ref: '#/definitions/ErrorPayload'
    examples:
      application/json:
        errors:
          - code: Unauthenticated
            message: invalid credentials
  required_content_length_header:
    description: The request has a body but it doesn't have a Content-Length header.
  retry_operation:
    description: >-
      The operation couldn't be executed or completed and it should retried.
    headers:
      Retry-After:
        description: The number of seconds to wait until retry the request
        type: integer
        format: uint16
    schema:
      $ref: '#/definitions/ErrorPayload'
    examples:
      application/json:
        errors:
          - code: RetryOperation
            message: Operation must be retried.
definitions:
  AppVersion:
    title: AppVersion
    type: object
    required:
      - version
      - branch
      - revision
    properties:
      version:
        description: The version of the application.
        type: string
        minLength: 5
      branch:
        description: The Git branch used to build the application.
        type: string
        minLength: 1
      revision:
        description: The Git revision used to build the application.
        type: string
        minLength: 8
        maxLength: 40
  GeneralStatus:
    title: GeneralStatus
    type: object
    required:
      - status
      - message
      - checks
    properties:
      status:
        description: The overall status for the application.
        type: string
        enum:
          - Unknown
          - Success
          - Error
      message:
        description: Message providing information regarding the status.
        type: string
        minLength: 1
      checks:
        description: List of all checks report type/name/status.
        type: array
        items:
          $ref: '#/definitions/CheckReport'
  CheckReport:
    title: CheckReport
    type: object
    required:
      - canonical
      - category
      - status
      - message
    properties:
      canonical:
        description: The name of the service checked.
        type: string
        minLength: 1
      category:
        description: The category of the service checked.
        type: string
        minLength: 1
      status:
        description: The status of the service checked.
        type: string
        enum:
          - Unknown
          - Success
          - Error
      message:
        description: The message providing information regarding the state of the service.
        type: string
        minLength: 1
  Pagination:
    title: Pagination
    type: object
    required:
      - total
      - index
      - size
    properties:
      total:
        description: The total number of items.
        type: integer
        format: int64
        minimum: 0
      index:
        description: The index of the page sent (the first page is 1).
        type: integer
        format: int64
        minimum: 1
      size:
        description: The size of the page (the number of entities per page)
        type: integer
        format: int64
        minimum: 1
  PaginationConcourse:
    title: PaginationConcourse
    type: object
    required:
      - next
      - previous
    properties:
      next:
        $ref: '#/definitions/PageConcourse'
        x-nullable: true
      previous:
        $ref: '#/definitions/PageConcourse'
        x-nullable: true
  PageConcourse:
    title: PageConcourse
    type: object
    required:
      - since
      - until
      - limit
    properties:
      since:
        description: Entities returned should have a higher timestamp than this one
        type: integer
        format: int64
      until:
        description: Entities returned should have a lower timestamp than this one
        type: integer
        format: int64
      limit:
        description: The maximum number of entities to return
        type: integer
        format: int64
  PaginationAWS:
    title: AWS Pagination
    type: object
    required:
      - next
    properties:
      next:
        description: >-
          The token to retrieve the next page of results.
          Empty string when there isn't a next page.
        type: string
  OrganizationBasicInfo:
    title: Organization basic information
    description: >-
      The entity which holds the basic and essential information of an
      organization.
    type: object
    required:
      - id
      - canonical
      - blocked
      - ci_team_name
      - name
      - created_at
      - updated_at
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      ci_team_name:
        type: string
      name:
        type: string
        minLength: 3
      blocked:
        type: array
        items:
          type: string
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  Organization:
    title: Organization
    description: >-
      The entity which holds all the direct information attached to an
      organization.
    type: object
    required:
      - id
      - canonical
      - ci_team_name
      - name
      - blocked
      - created_at
      - updated_at
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      ci_team_name:
        type: string
      name:
        type: string
        minLength: 3
      blocked:
        type: array
        items:
          type: string
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  NewOrganization:
    title: Create Organization
    description: >-
      The entity which represents a new organization to create in the
      application.
    type: object
    required:
      - canonical
      - name
    properties:
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      name:
        type: string
        minLength: 3
  BillingInformation:
    title: Organization Billing Information
    description: The billing information of the Organization
    type: object
    required:
      - name
      - email
      - created_at
      - updated_at
    properties:
      name:
        type: string
      email:
        format: email
      language:
        type: string
      phone:
        type: string
      address:
        $ref: '#/definitions/BillingInformationAddress'
      tax_information:
        $ref: '#/definitions/BillingInformationTaxInformation'
      subscription:
        $ref: '#/definitions/BillingInformationSubscription'
      source:
        $ref: '#/definitions/BillingInformationSource'
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  NewBillingInformation:
    title: Organization Billing Information
    description: The billing information of the Organization
    type: object
    required:
      - name
      - email
    properties:
      name:
        type: string
      email:
        format: email
      language:
        type: string
      phone:
        type: string
      address:
        $ref: '#/definitions/BillingInformationAddress'
      tax_information:
        $ref: '#/definitions/BillingInformationTaxInformation'
  BillingInformationAddress:
    title: Billing Information Address
    description: The address of the billing
    properties:
      city:
        type: string
      country:
        type: string
      line1:
        type: string
      line2:
        type: string
      postal_code:
        type: string
      state:
        type: string
  BillingInformationTaxInformation:
    title: Billing Information Tax Information
    description: Tax information of the billing
    required:
      - tax_id
      - type
    properties:
      tax_id:
        type: string
      type:
        type: string
  BillingInformationSubscription:
    title: Billing Information Subscription
    description: The information about the Subscription
    required:
      - amount
      - quantity
      - current_period_end
    properties:
      amount:
        type: number
        format: float64
        minimum: 0
      quantity:
        type: integer
        format: int64
        minimum: 0
      current_period_end:
        type: integer
        format: int64
        minimum: 0
  BillingInformationSource:
    title: Billing Information Source
    description: The information about the Source
    required:
      - last4
      - expiration_month
      - expiration_year
      - brand
    properties:
      last4:
        type: string
        minLength: 4
        maxLength: 4
        pattern: '^\d{4}$'
      expiration_year:
        type: integer
        format: int8
      expiration_month:
        type: integer
        format: int8
        minimum: 1
      brand:
        type: string
  BillingInformationStart:
    title: Billing Information Start
    description: The information needed to start the Billing
    required:
      - client_secret
    properties:
      client_secret:
        type: string
  UpdateOrganization:
    title: Update Organization
    description: >-
      The entity which represents the information of an organization to be
      updated.
    type: object
    required:
      - name
    properties:
      name:
        type: string
        minLength: 3
  PendingInvite:
    title: PendingInvite
    description: Contains the email used for the invitation
    type: object
    required:
      - email
    properties:
      email:
        type: string
        format: email
  Team:
    title: Team
    description: The entity which represents the information of a team.
    type: object
    required:
      - id
      - canonical
      - name
      - owner
      - created_at
      - updated_at
      - roles
      - member_count
      - members_preview
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      name:
        type: string
        minLength: 3
      owner:
        $ref: '#/definitions/MemberOrg'
        description: |
          Organization member that owns this team. When a user is the owner of a
          team it has all the permissions on it.
          In the event where the user has been deleted this field might be empty.
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
      roles:
        type: array
        items:
          $ref: '#/definitions/Role'
        minItems: 1
      member_count:
        description: The total count of members of the team.
        type: integer
        format: uint32
      members_preview:
        description: Preview of the list of team members, limited to 6 members.
        type: array
        items:
          $ref: '#/definitions/MemberTeam'
        maxItems: 6
  NewTeam:
    title: Create Team
    description: The entity which represents the information of a new team.
    type: object
    required:
      - canonical
      - name
      - roles_id
    properties:
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      name:
        type: string
        minLength: 3
      owner:
        type: string
        description: |
          User canonical that owns this team. If omitted then the person
          creating this team will be assigned as owner. When a user is the
          owner of a team it has all the permissions on it.
      roles_id:
        description: The roles to be assigned to a team.
        type: array
        items:
          type: integer
          format: uint32
  UpdateTeam:
    title: Update Team
    description: The entity which represents the information of the team to be updated.
    type: object
    required:
      - canonical
      - name
      - owner
      - roles_id
    properties:
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      name:
        type: string
        minLength: 3
      owner:
        type: string
        description: |
          User canonical that owns this team. Only the owner or an
          organization admin can update this field. When a user is the owner
          of a team it has all the permission on it.
      roles_id:
        description: The roles to be re-assigned to a team.
        type: array
        items:
          type: integer
          format: uint32
  ProjectsItem:
    title: Projects Item
    description: >-
      The information of a project when is shown in a list
    type: object
    required:
      - id
      - canonical
      - name
      - service_catalog_ref
      - created_at
      - updated_at
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      name:
        type: string
        minLength: 3
      description:
        type: string
      environments:
        type: array
        items:
          type: string
          pattern: '^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$'
      service_catalog_ref:
        description: >-
          It's the ref of the Service Catalog, like 'cycloidio:stack-magento'
        type: string
      service_catalog_name:
        type: string
      owner:
        $ref: '#/definitions/MemberOrg'
        description: |
          Organization member that owns this project. When a user is the owner of a
          project it has all the permissions on it.
          In the event where the user has been deleted that field might be empty.
      cloud_provider:
        $ref: '#/definitions/CloudProvider'
        description: |
          The cloud provider object that this project is using.
          In the event where the cloud provider is not yet defined/supported
          that field might be empty.
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  Project:
    title: Project
    description: The entity which represents the information of a project.
    type: object
    required:
      - id
      - canonical
      - name
      - service_catalog_ref
      - created_at
      - updated_at
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      name:
        type: string
        minLength: 3
      description:
        type: string
      environments:
        type: array
        items:
          type: string
          pattern: '^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$'
      service_catalog_ref:
        description: >-
          It's the ref of the Service Catalog, like 'cycloidio:stack-magento'
        type: string
      owner:
        $ref: '#/definitions/MemberOrg'
        description: |
          Organization member that owns this project. When a user is the owner of a
          project it has all the permissions on it.
          In the event where the user has been deleted that field might be empty.
      cloud_provider:
        $ref: '#/definitions/CloudProvider'
        description: |
          The cloud provider object that this project is using.
          In the event where the cloud provider is not yet defined/supported
          that field might be empty.
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
      config_repository_id:
        type: integer
        format: uint32
        minimum: 1
  NewProject:
    title: Create Project
    description: The entity which represents the information of a new project.
    type: object
    required:
      - canonical
      - name
      - pipelines
      - config_repository_id
      - service_catalog_ref
    properties:
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      name:
        type: string
        minLength: 3
      service_catalog_ref:
        description: >-
          It's the ref of the Service Catalog, like 'cycloidio:stack-magento'
        type: string
      description:
        type: string
        description: |
          A description regarding the project to help identify/remember details,
          implementation, purpose, etc.
      owner:
        type: string
        description: |
          User canonical that owns this project. If omitted then the person
          creating this project will be assigned as owner. When a user is the
          owner of a project it has all the permissions on it.
      cloud_provider:
        type: string
        description: |
          The cloud provider canonical that this project is using - between the
          supported ones.
        enum:
          - aws
          - google
          - azurerm
          - flexibleengine
          - openstack
      pipelines:
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/NewPipeline'
      config_repository_id:
        type: integer
        format: uint32
  UpdateProject:
    title: Update Project
    description: >-
      The entity which represents the information of the project to be updated.
    type: object
    required:
      - name
      - owner
      - service_catalog_ref
    properties:
      name:
        type: string
        minLength: 3
      description:
        type: string
      environments:
        type: array
        items:
          pattern: '^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$'
          type: string
      service_catalog_ref:
        description: >-
          It's the ref of the Service Catalog, like 'cycloidio:stack-magento'
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+:[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
        type: string
      owner:
        type: string
        description: |
          User canonical that owns this project. Only the owner or an
          organization admin can update such a field. When a user is the owner
          of a project it has all the permission on it.
      cloud_provider:
        type: string
        description: |
          The cloud provider canonical that this project is using - between the
          supported ones.
        enum:
          - aws
          - google
          - azurerm
          - flexibleengine
          - openstack
      config_repository_id:
        type: integer
        format: uint32
        description: |
          The config_repository_id points to new Config Repository the project
          will be using. If this value is filled and it's different from the
          current one, the whole project will be migrated to new CR, meaning
          configuration files will also be moved.
          If the project didn't has config_repository_id set, this action will
          only attach the project to the CR, it won't create/move any files.
          In order to be sure everything works, make sure the
          config_repository_id is pointing at the CR with the same git
          repository that was used during project creation.
  ConfigFile:
    title: SC config file
    description: >-
      This object contains SC config file name and its content
    type: object
    required:
      - path
      - content
    properties:
      path:
        type: string
      content:
        type: string
        format: byte
  FormsValidation:
    title: Forms validation
    description: >-
      This object contains a forms file's content, eg:
      ```
        useCase1:
          terraform:
            group1:
              - entity1
              - entity2
              - entity3
            group2:
              - entity4
        useCase2:
          terraform:
            group1:
              - entity1
              - entity2
              - entity3
            group2:
              - entity4
          ansible:
            group3:
              - entity5
              - entity6
      ```
    type: object
    required:
      - form_file
    properties:
      form_file:
        type: object
        $ref: '#/definitions/FormsFile'
  FormsValidationResult:
    title: FormsValidationResult
    description: The result of the validation, if errors is empty means that is correct
    required:
      - errors
    properties:
      errors:
        type: array
        items:
          type: string
  FormsFile:
    title: Forms File
    description: >-
      The first key level are the use-cases matching the ones of the .cycloid.yml file
    type: object
    additionalProperties:
      type: object
      description: >-
        The second key level are the technologies that will be configured
      additionalProperties:
        type: object
        description: >-
          The third key level are the groups defined to ease the presentaiton/separation of purposes during configuration
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/FormEntity'
  FormEntity:
    title: Forms file's Entity
    description: >-
      This describes all the attributes possible to configure a form's variable
    type: object
    required:
      - key
      - name
      - type
      - widget
    properties:
      key:
        type: string
        description: >-
          The key is the name of variables for the ansible/pipeline/terraform technologies.
          If this is a first level variable then: keyX. If you have multiple terraform modules
          then use: module.Y.keyX to help identify the unique variable.
      name:
        type: string
        description: >-
          The name of the variable displayed to the user
      widget:
        type: string
        description: >-
          The widget used to display the data in the most suitable way
        enum:
          - auto_complete
          - dropdown
          - radios
          - slider_list
          - slider_range
          - number
          - simple_text
          - text_area
          - cy_cred
          - cy_scs
          - cy_crs
          - cy_branch
      type:
        type: string
        description: >-
          The type of data handled - used to manipulate/validate the input, and also validate default/values
        enum:
          - integer
          - string
          - array
          - boolean
          - map
      required:
        type: boolean
        description: >-
          Whether or not the field is required - that helps distinguish "optional" variables
          and allows to set default if necessary and present
      default:
        type: object
        description: >-
          The default to assign to the variable if nothing is returned
          and that the varialbe is required
      unit:
        type: string
        description: >-
          The unit to be displayed for the variable, helping to know what's
          being manipulated: amount of servers, Go, users, etc.
      description:
        type: string
        description: >-
          The description helping users understand the interest/impact of such variable/change
      values:
        type: array
        items:
          type: object
        description: >-
          Values allowed, e.g. [1, 10, 20, 50], this can be of any type but boolean.
          Note: In case of SliderRange only 2 values should be provided: [min, max], in case
          of providing them the other way around some validation test will fail.
      source:
        type: string
        description: >-
          The source is only used for the branch widget to reference the key of the
          SCS or CR that the branches have to be read from. Because a branch in itself
          cannot exist, the user has to indicate from which SCS or CR he wants to retrieve
          branches. The source has to reference the key of an entity of a widget: 'CyCRS' or 'CySCS'
  SCConfig:
    title: SC Config
    description: >-
      This entity is being used for automatic creation of SC config
    type: object
    required:
      - configs
    properties:
      configs:
        type: array
        description: Config files that will be created
        items:
          $ref: '#/definitions/ConfigFile'
  FormInputs:
    title: Forms inputs
    description: |
      The array of variables set by the user via the forms with the associated environment
      canonical and use case upon project creation.
    required:
      - service_catalog_ref
      - inputs
    properties:
      service_catalog_ref:
        description: |
          It's the ref of the Service Catalog, like 'cycloidio:stack-magento'
        type: string
      inputs:
        type: array
        description: |
          The variables set within a form with the corresponding environment
          canonical and use case
        items:
          $ref: '#/definitions/FormInput'
  FormInput:
    title: Forms input
    description: |
      The variables set within a form with the corresponding
      environment canonical and use case
    required:
      - use_case
      - environment_canonical
      - vars
    properties:
      use_case:
        type: string
        description: The use-case to load
      environment_canonical:
        type: string
        description: The environment canonical
      vars:
        type: object
        description: |
          Forms variables filled, the format to respect is as follows
          {
            "ansible": {
              "key1": "value1",
              "key2": "value2",
              "key3": "value3"
            },
            "terraform": {
              "key1": "value1",
              "key2": "value2",
              "key3": "value3"
            },
            "pipeline": {
              "key1": "value2"
            }
          }
          Keys being the variable name that you want to see substituted/defined.
  UserAccountEmail:
    title: User's email
    description: The email address of a user.
    required:
      - email
      - verified
      - purpose
    properties:
      email:
        type: string
        format: email
      verified:
        type: boolean
      purpose:
        description: >-
          This values are set by the application to indicate the purpose of the
          email address. At least there is always one which is the primary.
        type: string
      created_at:
        type: integer
        format: int64
        minimum: 0
  UpdateUserAccountEmail:
    title: User's email
    description: The email address of a user to be updated.
    required:
      - email
      - purpose
    properties:
      email:
        type: string
        format: email
      purpose:
        description: >-
          This values are set by the application to indicate the purpose of the
          email address. At least there is always one which is the primary.
        type: string
  UserAccount:
    title: User's account
    description: >-
      The user's account contains information related with the authenticated
      user.
    required:
      - created_at
      - updated_at
      - last_login
      - emails
      - username
      - given_name
      - family_name
      - locale
    properties:
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
      last_login:
        type: integer
        format: int64
        minimum: 0
      emails:
        type: array
        items:
          $ref: '#/definitions/UserAccountEmail'
        minItems: 1
      username:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      given_name:
        type: string
        minLength: 2
      family_name:
        type: string
        minLength: 2
      picture_url:
        type: string
        format: uri
      locale:
        description: The local that the user prefer.
        type: string
        pattern: '^[a-z]{2}(?:-[a-z][a-z])?$'
      guide:
        $ref: '#/definitions/UserGuide'
  UpdateUserAccount:
    title: Update user's account
    description: >-
      The user's account information of the authenticated user to be updated.
      Emails and password can be omitted if they don't have to be updated,
      because we can now if they have been sent or not although go-swagger
      doesn't currently support `PATCH` updates (see
      [comment](https://github.com/cycloidio/youdeploy-http-api/pull/71#issuecomment-321894076)),
      we do for this one with this 2 properties because they are good for the
      user, specially for the `password_update` one. In order to detect if they
      have been sent or not, we check if the length of array of emails is 0 (if
      it's sent, then the length MUST be greater than 0 as specified with
      minItems) and in case of the `password_update` field if it's `nil` or not.
      If the 'picture_url' is not send then it's removed from the user as it implies that
      it has deleted it, and also because we do not support partial updates
    required:
      - username
      - given_name
      - family_name
      - locale
    properties:
      emails:
        type: array
        items:
          $ref: '#/definitions/UpdateUserAccountEmail'
        minItems: 1
      password_update:
        description: The update password requires to confirm the old password.
        required:
          - current
          - new
        properties:
          current:
            type: string
            format: password
            minLength: 8
          new:
            type: string
            format: password
            minLength: 8
      username:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      given_name:
        type: string
        minLength: 2
      family_name:
        type: string
        minLength: 2
      picture_url:
        type: string
        format: uri
      locale:
        description: The local that the user prefer.
        type: string
        pattern: '^[a-z]{2}(?:-[a-z][a-z])?$'
  MemberOrg:
    title: Member of an organization
    description: Member is a user who is associated to an organization.
    type: object
    required:
      - id
      - username
      - given_name
      - family_name
      - email
      - created_at
      - role
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      username:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      given_name:
        type: string
        minLength: 2
      family_name:
        type: string
        minLength: 2
      email:
        description: user email
        type: string
        format: email
      picture_url:
        type: string
        format: uri
      created_at:
        description: When the user became a member.
        type: integer
        format: int64
        minimum: 0
      updated_at:
        description: When the user had the role modified.
        type: integer
        format: int64
        minimum: 0
      invited_at:
        description: >-
            When the user had been invited to join as a member.
            When not present, the user is already a member, so she/he has
            verified her/his invitation.
        type: integer
        format: int64
        minimum: 0
      role:
        $ref: '#/definitions/Role'
  MemberTeam:
    title: Member of a team
    description: Member is a user who is associated to a team.
    type: object
    required:
      - id
      - username
      - given_name
      - family_name
      - email
      - created_at
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      username:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      given_name:
        type: string
        minLength: 2
      family_name:
        type: string
        minLength: 2
      email:
        description: user email
        type: string
        format: email
      picture_url:
        type: string
        format: uri
      created_at:
        description: When the user became a member.
        type: integer
        format: int64
        minimum: 0
      updated_at:
        description: When the user had the role modified.
        type: integer
        format: int64
        minimum: 0
  MemberAssignation:
    title: Member assignation
    description: >-
      Member is a user who is associated to an entity of the system. The user is
      newly assigned or reassigned for updating is data.
    required:
      - role_id
    properties:
      role_id:
        description: The role of the member.
        type: integer
        format: uint32
        minimum: 1
  NewTeamMemberAssignation:
    title: Assign user
    description: Member is a user assigned to a Team
    required:
      - username
    properties:
      username:
        description: Assign user by username
        type: string
        format: string
  NewMemberInvitation:
    title: Invite user
    description: >-
      Send an invitation to a user to something. Something can be to create an
      account, to join to an organization, to join to a team, etc. API operation
      determines the operation to perform.
    required:
      - email
      - role_id
    properties:
      email:
        description: Invite user by email
        type: string
        format: email
      role_id:
        description: The role of the member.
        type: integer
        format: uint32
        minimum: 1
  NewAccount:
    title: Sign up
    description: >-
        Create a new user account.
    required:
      - username
      - email
      - password
      - given_name
      - family_name
    properties:
      invitation_token:
        type: string
        minLength: 5
        description: >-
            The field is used when a user signup from an invitation to an organization.
            Giving the token, the created user will be automatically added to the organization.
      username:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      email:
        type: string
        format: email
      password:
        type: string
        format: password
        minLength: 8
      given_name:
        type: string
        minLength: 2
      family_name:
        type: string
        minLength: 2
  UserPasswordResetReq:
    title: User password reset request
    description: >-
      Request to send a token for allowing the user to reset its current
      password.
    required:
      - email
    properties:
      email:
        description: the email address must be the primary email of the user.
        type: string
        format: email
  UserPasswordResetUpdate:
    title: User password reset update
    description: >-
      Reset the current user password to the one provided.
      The user must have a valid token for the reseting password action.
    required:
      - password
      - token
    properties:
      password:
        type: string
        format: password
        minLength: 8
      token:
        type: string
        minLength: 1
  UserLogin:
    title: Log in
    description: >-
      Validate the user to access to the application. The user can login with
      the primary email address or with username.
    required:
      - password
    maxProperties: 2
    minProperties: 2
    properties:
      email:
        type: string
        format: email
      username:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      password:
        type: string
        format: password
        minLength: 8
  UserSession:
    title: User's session
    description: The JWT which allows the user to access to the application.
    required:
      - token
    properties:
      token:
        type: string
  UserOAuth:
    title: User's OAuth information
    description: The User OAuth information, if it's on the platform it'll return the 'token' to login, if not the 'user' to show to the user
    properties:
      user:
        type: object
        $ref: '#/definitions/NewOAuthUser'
      token:
        description: Is the JWT of the platform user
        type: string
  NewOAuthUser:
    title: User's OAuth information
    description: The User OAuth information
    required:
      - email
      - given_name
      - username
      - social_id
    properties:
      given_name:
        type: string
      family_name:
        type: string
      email:
        type: string
        format: email
      username:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      picture_url:
        type: string
        format: uri
      social_id:
        type: string
  NewPipeline:
    title: Create Pipeline
    description:
      The entity which represents a new pipeline to create in the
      application.
    type: object
    required:
      - pipeline_name
      - passed_config
      - environment
    properties:
      pipeline_name:
        type: string
        minLength: 3
        maxLength: 50
        pattern: ^[a-z0-9]+[a-z0-9\-._]+[a-z0-9]+$
      passed_config:
        type: string
      yaml_vars:
        type: string
      check_credentials:
        description: Validate credentials manager variables in the pipeline config.
        type: boolean
      environment:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$'
      use_case:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  UpdatePipeline:
    title: Update Pipeline
    description:
      The entity which represents a new pipeline config to update in the
      application.
    type: object
    required:
      - passed_config
    properties:
      passed_config:
        type: string
      yaml_vars:
        type: string
      check_credentials:
        type: boolean
  GroupConfig:
    title: GroupConfig
    description: The entity which represents pipeline group config
    type: object
    required:
      - name
    properties:
      name:
        type: string
      jobs:
        type: array
        items:
          type: string
      resources:
        type: array
        items:
          type: string
  TaskConfig:
    title: TaskConfig
    description: The configuration of a concourse task.
    type: object
    properties:
      platform:
        type: string
      tags:
        type: array
        items:
          type: string
      image:
        type: string
      params:
        type: object
        additionalProperties:
          type: string
      run:
        type: object
        $ref: '#/definitions/TaskRunConfig'
      inputs:
        type: array
        items:
          $ref: '#/definitions/TaskInputConfig'
  TaskRunConfig:
    title: TaskRunConfig
    description: The configuration of a concourse task-run.
    type: object
    properties:
      path:
        type: string
        minLength: 3
      args:
        type: array
        items:
          type: string
  TaskInputConfig:
    title: TaskInputConfig
    description: The configuration of inputs for concourse tasks.
    type: object
    required:
      - name
    properties:
      name:
        type: string
      path:
        type: string
  PlanConfig:
    title: PlanConfig
    description: The plan configuration when creating new build.
    type: object
    properties:
      conditions:
        type: array
        items:
          type: string
      raw_name:
        type: string
      do:
        type: array
        items:
          $ref: '#/definitions/PlanConfig'
      aggregate:
        type: array
        items:
          $ref: '#/definitions/PlanConfig'
      get:
        type: string
      passed:
        type: array
        items:
          type: string
      raw_trigger:
        type: boolean
      put:
        type: string
      resource:
        type: string
      task:
        type: string
      privileged:
        type: boolean
      taskConfigPath:
        type: string
      taskConfig:
        $ref: '#/definitions/TaskConfig'
      params:
        type: object
        additionalProperties:
          type: object
  PublicPlan:
    title: PublicPlan
    description: The public plan returned requesting a build plan.
    type: object
    required:
      - schema
      - plan
    properties:
      schema:
        type: string
      plan:
        type: object
  Plan:
    title: Plan
    description: The plan is what represent a concourse build.
    type: object
    required:
      - id
    properties:
      id:
        type: string
      attempts:
        type: array
        items:
          type: integer
          format: uint32
      aggregate:
        type: string
      do:
        type: array
        items:
          $ref: '#/definitions/Plan'
      get:
        $ref: '#/definitions/GetPlan'
      put:
        $ref: '#/definitions/PutPlan'
      task:
        $ref: '#/definitions/TaskPlan'
      ensure:
        $ref: '#/definitions/EnsurePlan'
      on_success:
        $ref: '#/definitions/OnSuccessPlan'
      on_failure:
        $ref: '#/definitions/OnFailurePlan'
      try:
        $ref: '#/definitions/TryPlan'
      timeout:
        $ref: '#/definitions/TimeoutPlan'
      retry:
        type: array
        items:
          $ref: '#/definitions/Plan'
  GetPlan:
    title: GetPlan
    description: The plan to get before running another one.
    type: object
    required:
      - type
      - resource
      - source
    properties:
      type:
        type: string
      name:
        type: string
      resource:
        type: string
      source:
        type: object
        additionalProperties:
          type: object
      params:
        type: object
        additionalProperties:
          type: object
      version:
        type: object
        additionalProperties:
          type: string
      version_from:
        type: string
      tags:
        type: array
        items:
          type: string
      versioned_resource_types:
        type: array
        items:
          $ref: '#/definitions/VersionedResourceType'
  PutPlan:
    title: PutPlan
    description: The put plan following a plan.
    type: object
    required:
      - type
      - resource
      - source
    properties:
      type:
        type: string
      name:
        type: string
      resource:
        type: string
      source:
        type: object
        additionalProperties:
          type: object
      params:
        type: object
        additionalProperties:
          type: object
      tags:
        type: array
        items:
          type: string
      versioned_resource_types:
        type: array
        items:
          $ref: '#/definitions/VersionedResourceType'
  TaskPlan:
    title: TaskPlan
    description: The task plan.
    type: object
    required:
      - privileged
    properties:
      name:
        type: string
      privileged:
        type: boolean
      tags:
        type: array
        items:
          type: string
      config_path:
        type: string
      config:
        $ref: '#/definitions/TaskConfig'
      params:
        type: object
        additionalProperties:
          type: object
      input_mapping:
        type: object
        additionalProperties:
          type: string
      output_mapping:
        type: object
        additionalProperties:
          type: string
      image_artifact_name:
        type: string
      versioned_resource_types:
        type: array
        items:
          $ref: '#/definitions/VersionedResourceType'
  EnsurePlan:
    title: EnsurePlan
    description: The plan to ensure to be run.
    type: object
    required:
      - step
      - next
    properties:
      step:
        $ref: '#/definitions/Plan'
      next:
        $ref: '#/definitions/Plan'
  OnSuccessPlan:
    title: OnSuccessPlan
    description: The plan definition when the action has been successful.
    type: object
    required:
      - step
      - next
    properties:
      step:
        $ref: '#/definitions/Plan'
      next:
        $ref: '#/definitions/Plan'
  OnFailurePlan:
    title: OnFailurePlan
    description: The plan definition when the action has failed.
    type: object
    required:
      - step
      - next
    properties:
      step:
        $ref: '#/definitions/Plan'
      next:
        $ref: '#/definitions/Plan'
  TryPlan:
    title: EnsurePlan
    description: The plan to ensure to be run.
    type: object
    required:
      - step
      - next
    properties:
      step:
        $ref: '#/definitions/Plan'
      next:
        $ref: '#/definitions/Plan'
  TimeoutPlan:
    title: EnsurePlan
    description: The plan to ensure to be run.
    type: object
    required:
      - step
      - next
    properties:
      step:
        $ref: '#/definitions/Plan'
      next:
        $ref: '#/definitions/Plan'
  VersionedResourceType:
    title: VersionedResourceType
    description: The versioned resources type.
    type: object
    required:
      - id
      - name
      - type
      - source
      - privileged
      - tags
      - version
    properties:
      id:
        type: integer
        format: uint32
      name:
        type: string
      type:
        type: string
      source:
        type: object
        additionalProperties:
          type: object
      privileged:
        type: boolean
      tags:
        type: object
        additionalProperties:
          type: string
      version:
        type: object
        additionalProperties:
          type: string
  Job:
    title: Job
    description: The entity which represents a job output in the application.
    type: object
    required:
      - id
      - name
      - next_build
      - finished_build
      - inputs
      - outputs
      - groups
    properties:
      id:
        type: integer
        format: uint64
      name:
        type: string
      paused:
        type: boolean
      first_logged_build_id:
        type: integer
        format: int64
      disable_manual_trigger:
        type: boolean
      next_build:
        $ref: '#/definitions/Build'
        x-nullable: true
      finished_build:
        $ref: '#/definitions/Build'
      transition_build:
        $ref: '#/definitions/Build'
      inputs:
        type: array
        items:
          $ref: '#/definitions/JobInput'
      outputs:
        type: array
        items:
          $ref: '#/definitions/JobOutput'
      groups:
        type: array
        items:
          type: string
  JobInput:
    title: JobInput
    description: The entity which represents a job input in the application.
    type: object
    required:
      - name
      - resource
      - trigger
    properties:
      name:
        type: string
      resource:
        type: string
      passed:
        type: array
        items:
          type: string
      trigger:
        type: boolean
      version:
        $ref: '#/definitions/VersionConfig'
      params:
        type: object
        additionalProperties:
          type: object
      tags:
        type: array
        items:
          type: string
  JobOutput:
    title: JobOutput
    description: The entity which represents a job output in the application.
    type: object
    required:
      - name
      - resource
    properties:
      name:
        type: string
      resource:
        type: string
  ClearTaskCache:
    title: ClearTaskCache
    description: The entity which represents number of cache cleared for a task.
    type: object
    required:
      - caches_removed
    properties:
      caches_removed:
        type: integer
  VersionConfig:
    title: VersionConfig
    description: The entity which represents a vesion configuration in the application.
    type: object
    properties:
      every:
        type: boolean
      latest:
        type: boolean
      pinned:
        type: object
        additionalProperties:
          type: string
  Resource:
    title: Resouce
    description: The entity which represents a resource in the application.
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
      type:
        type: string
      icon:
        type: string
      failing_to_check:
        type: boolean
      check_setup_error:
        type: string
      check_error:
        type: string
      last_checked:
        type: integer
        format: int64
      pin_comment:
        type: string
      pinned_in_config:
        type: boolean
      pinned_version:
        type: object
        additionalProperties:
          type: string
  Pipeline:
    title: Pipeline
    description: |
      The entity which represents a pipeline in the application.
    type: object
    required:
      - id
      - name
      - paused
      - public
      - groups
      - team_name
      - environment
      - project
      - use_case
    properties:
      id:
        type: integer
        format: uint64
      name:
        type: string
      paused:
        type: boolean
      public:
        type: boolean
      groups:
        type: array
        items:
          $ref: '#/definitions/GroupConfig'
      team_name:
        type: string
      environment:
        type: string
        pattern: '^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$'
      project:
        $ref: '#/definitions/Project'
      use_case:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
  PipelineVariables:
    title: Pipeline variables
    description: The entity which contains pipeline's variables.
    type: object
    required:
      - yaml_vars
      - has_saved_yaml_vars
    properties:
      yaml_vars:
        type: string
      has_saved_yaml_vars:
        description: |
          The has_saved_yaml_vars specifies whether the returned vars are from
          the saved ones or the sample ones. If the has_saved_yaml_vars is true,
          it means that the saved have been returned.
        type: boolean
  Worker:
    title: Worker
    description: The entity which represents a worker in the application.
    type: object
    required:
      - name
      - state
      - version
      - platform
      - ephemeral
      - active_containers
      - active_volumes
      - start_time
    properties:
      name:
        type: string
      state:
        type: string
      version:
        type: string
      platform:
        type: string
      team:
        type: string
      ephemeral:
        type: boolean
      active_containers:
        type: integer
        format: int64
      active_volumes:
        type: integer
        format: int64
      start_time:
        type: integer
        format: int64
      tags:
        type: array
        items:
          type: string
  BuildInputsOutputs:
    title: BuildInputsOutputs
    description: Represent the resources input/output related to a build
    type: object
    required:
      - inputs
      - outputs
    properties:
      inputs:
        type: array
        items:
          $ref: '#/definitions/PublicBuildInput'
      outputs:
        type: array
        items:
          $ref: '#/definitions/PublicBuildOutput'
  PublicBuildOutput:
    title: PublicBuildOutput
    description: Represents the information of a build output
    type: object
    required:
      - name
      - version
    properties:
      name:
        type: string
      version:
        type: object
        additionalProperties:
          type: string
  PublicBuildInput:
    title: PublicBuildInput
    description: Represent the information of a build input
    type: object
    required:
      - name
      - version
      - pipeline_id
      - first_occurrence
    properties:
      name:
        type: string
      version:
        type: object
        additionalProperties:
          type: string
      pipeline_id:
        type: integer
        format: int64
      first_occurrence:
        type: boolean
  MetadataField:
    title: MetadataField
    description: Represent the metadata of a build input
    type: object
    required:
      - name
      - value
    properties:
      name:
        type: string
      value:
        type: string
  CIVersion:
    title: CIVersion
    description: Represent a version of a resource
    type: object
    additionalProperties:
      type: string
  PinComment:
    title: PinComment
    description: Represents a pin comment of a resource
    type: object
    required:
      - pin_comment
    properties:
      pin_comment:
        type: string
  ResourceVersion:
    title: ResourceVersion
    description: Represent the outputs of a job
    type: object
    required:
      - id
      - version
      - enabled
    properties:
      id:
        type: integer
        format: uint64
      metadata:
        type: array
        items:
          $ref: '#/definitions/MetadataField'
      version:
        type: object
        additionalProperties:
          type: string
      enabled:
        type: boolean
  ResourceCheck:
    title: ResourceCheck
    description: The entity which represents a resource check in the application.
    type: object
    properties:
      id:
        type: integer
      status:
        type: string
      check_error:
        type: string
      create_time:
        type: integer
        format: int64
      start_time:
        type: integer
        format: int64
      end_time:
        type: integer
        format: int64
  PipelineDiffRecord:
    title: PipelineDiffRecord
    description: Represents a diff record of a pipeline diff
    type: object
    required:
      - line
      - delta_type
    properties:
      line:
        type: string
        description: Represents a text line in a pipeline configuration
      delta_type:
        type: string
        description: Represents the type of delta (added, removed, changed, equals) for the text line
  PipelineDiff:
    title: PipelineDiff
    description: Represents a diff element of a PipelineDiffs.
    type: object
    required:
      - name
      - status
      - diff
    properties:
      name:
        type: string
        description: Represents the name of the element in a pipeline. For example the job name for jobs section
      status:
        description: Represents the status of the element (added, removed, changed)
        type: string
        enum:
          - added
          - removed
          - changed
      diff:
        description: Represents the diff of all configuration line for an element
        type: array
        items:
          $ref: '#/definitions/PipelineDiffRecord'
  PipelineDiffs:
    title: PipelineDiffs
    description: Represents the diffs between two pipelines
    type: object
    properties:
      jobs:
        type: array
        items:
          $ref: '#/definitions/PipelineDiff'
      groups:
        type: array
        items:
          $ref: '#/definitions/PipelineDiff'
      resources:
        type: array
        items:
          $ref: '#/definitions/PipelineDiff'
      resource_types:
        type: array
        items:
          $ref: '#/definitions/PipelineDiff'
  Build:
    title: Build
    description: The information relative to a build.
    type: object
    required:
      - id
      - team_name
      - name
      - status
      - api_url
    properties:
      id:
        type: integer
        format: uint64
      team_name:
        type: string
      name:
        type: string
      status:
        type: string
      job_name:
        type: string
      api_url:
        type: string
      pipeline_name:
        type: string
      start_time:
        type: integer
        format: int64
      end_time:
        type: integer
        format: int64
      reap_time:
        type: integer
        format: int64
  Role:
    title: Role access control
    description: >-
      Role represents the authorization level that an user has to access to a
      specific entity of the system. A role contains a list of policies to
      define the access control. Note not all the entities supports roles access
      control; see the API endpoints to know which entities support them.
    required:
      - id
      - name
      - description
      - policies
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      name:
        type: string
        minLength: 3
        maxLength: 30
      description:
        type: string
      policies:
        type: array
        items:
          $ref: '#/definitions/Policy'
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  NewRole:
    title: New role access control
    description: >-
      New role represents the authorization level that a user has access to.
      A role contains a list of policies to define the access control. Note
      not all the entities supports roles access control; see the API endpoints
      to know which entities support them.
    required:
      - name
      - policies
    properties:
      name:
        type: string
        minLength: 3
        maxLength: 30
      description:
        type: string
      policies:
        type: array
        items:
          $ref: '#/definitions/PolicyReference'
  PolicyReference:
    title: PolicyReference
    description: >-
      PolicyReference represents an existing or new permission or constraint to
      access to an entity of the system. A policy is aggregated into roles in
      order to be applied.
    required:
      - id
      - entities
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      entities:
        type: array
        items:
          type: string
  Policy:
    title: Policy
    description: >-
      Policy represents a permission or constraint to access to an entity of the
      system. A policy is aggregated into roles in order to be applied.
    required:
      - id
      - code
      - description
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      code:
        type: string
        minLength: 5
        maxLength: 60
        pattern: '(?:[a-z]+_)*[a-z]+(?::(?:[a-z]+_)*[a-z]+)*$'
      entities:
        type: array
        items:
          type: string
      description:
        type: string
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  CloudProvider:
    title: Cloud Provider
    description: >-
      CloudProvider represents a cloud provider. Those cloud providers are
      used to identify the scope of projects and/or stacks.
    required:
      - name
      - canonical
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      abbreviation:
        type: string
        minLength: 2
        maxLength: 60
      name:
        type: string
        minLength: 2
        maxLength: 60
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  ErrorPayload:
    title: Error Payload
    description: >
      The payload used by the server to response to the client with an Error,
      those errors could be any of the ones listed [here](https://github.com/cycloidio/youdeploy-http-api/blob/develop/errors/code.go#L10), only
      the CODE of the error is the one that is guaranteed to not change between
      the same major version, the MESSAGE could change.
    required:
      - errors
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/ErrorDetailsItem'
  ErrorDetailsItem:
    title: Error details item
    description: Represents an item of the list of details of an error.
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: string
      details:
        type: array
        items:
          type: string
  NewServiceCatalog:
    title: Service Catalog
    description: Represents the Service Catalog item
    required:
      - name
      - canonical
      - author
      - description
      - keywords
      - service_catalog_source_id
    properties:
      name:
        type: string
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      author:
        type: string
      description:
        type: string
      keywords:
        type: array
        items:
          type: string
      image:
        type: string
        format: uri
      status:
        type: string
      service_catalog_source_id:
        type: integer
        format: uint32
        minimum: 1
      technologies:
        type: array
        items:
          $ref: '#/definitions/ServiceCatalogTechnology'
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  ServiceCatalog:
    title: Service Catalog
    description: Represents the Service Catalog item
    required:
      - id
      - name
      - canonical
      - author
      - description
      - keywords
      - ref
      - service_catalog_source_id
      - trusted
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      name:
        type: string
      canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      author:
        type: string
      description:
        type: string
      keywords:
        type: array
        items:
          type: string
      image:
        type: string
        format: uri
      status:
        type: string
      service_catalog_source_id:
        type: integer
        format: uint32
        minimum: 1
      ref:
        type: string
      trusted:
        description: If 'true' the ServiceCatalog is from the main organization and can be trusted.
        type: boolean
      technologies:
        type: array
        items:
          $ref: '#/definitions/ServiceCatalogTechnology'
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  ServiceCatalogTechnology:
    title: ServiceCatalogTechnology
    description: ServiceCatalogTechnology is a Technology of the Service Catalog
    properties:
      technology:
        type: string
      version:
        type: string
  Credential:
    title: Credential
    description: Represents the Credential
    required:
      - id
      - name
      - type
      - raw
      - path
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      name:
        type: string
      type:
        type: string
        enum:
          - ssh
          - aws
          - custom
          - azure
          - azure_storage
          - gcp
          - basic_auth
          - elasticsearch
          - swift
      path:
        type: string
      raw:
        $ref: '#/definitions/CredentialRaw'
      description:
        type: string
      owner:
        $ref: '#/definitions/MemberOrg'
        description: |
          Organization member that owns this credential. When a user is the owner of a
          credential he has all the permissions on it.
          In the event where the user has been deleted that field might be empty.
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  CredentialSimple:
    title: Credential Simple
    description: Represents the Credential without the raw and owner
    required:
      - id
      - name
      - type
      - path
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      name:
        type: string
      type:
        type: string
        enum:
          - ssh
          - aws
          - custom
          - azure
          - azure_storage
          - gcp
          - basic_auth
          - elasticsearch
          - swift
      path:
        type: string
      description:
        type: string
  CreateCredential:
    title: Credential
    description: Represents the Credential
    required:
      - name
      - type
      - raw
      - path
    properties:
      name:
        type: string
      type:
        type: string
        enum:
          - ssh
          - aws
          - custom
          - azure
          - azure_storage
          - gcp
          - basic_auth
          - elasticsearch
          - swift
      path:
        type: string
        pattern: '[a-zA-z0-9_\-./]'
      raw:
        $ref: '#/definitions/CredentialRaw'
      description:
        type: string
      owner:
        type: string
        description: |
          User canonical that owns this credential. If omitted then the person creating this
          credential will be assigned as owner. When a user is the owner of a credential he has
          all the permissions on it.
  UpdateCredential:
    title: Credential
    description: Represents the Credential
    required:
      - name
      - type
      - raw
      - path
      - description
      - owner
    properties:
      name:
        type: string
      type:
        type: string
        enum:
          - ssh
          - aws
          - custom
          - azure
          - azure_storage
          - gcp
          - basic_auth
          - elasticsearch
      path:
        type: string
        pattern: '[a-zA-z0-9_\-./]'
      raw:
        $ref: '#/definitions/CredentialRaw'
      description:
        type: string
      owner:
        type: string
        description: |
          User canonical that owns this credential. When a user is the owner of a credential he has
          all the permissions on it.

  CredentialRaw:
    title: Credential Raw
    description: All the possible fields inside it
    properties:
      raw:
        type: object
      ssh_key:
        type:  string
      access_key:
        type:  string
      secret_key:
        type:  string
      account_name:
        type:  string
      json_key:
        type:  string
      username:
        type: string
      password:
        type: string
      client_id:
        type: string
      client_secret:
        type: string
      subscription_id:
        type: string
      tenant_id:
        type: string
      ca_cert:
        type: string
      domain_id:
        type: string
      auth_url:
        type: string
  Preparation:
    title: Preparation
    required:
      - build_id
      - paused_pipeline
      - paused_job
      - max_running_builds
      - inputs
      - inputs_satisfied
      - missing_input_reasons
    properties:
      build_id:
        type: string
      paused_pipeline:
        type: string
      paused_job:
        type: string
      max_running_builds:
        type: string
      inputs:
        type: object
      inputs_satisfied:
        type: object
      missing_input_reasons:
        type: object
  CreateServiceCatalogSource:
    title: ServiceCatalogSource
    required:
      - name
      - url
      - branch
    properties:
      name:
        type: string
      url:
        type: string
        pattern: '(?:http|https|git|ssh|git@[-\w.]+):(\/\/)?(.*?)(\.git)?(\/?|\#[-\d\w._]+?)$'
      branch:
        type: string
      credential_id:
        type: integer
        format: uint32
        minimum: 1
  UpdateServiceCatalogSource:
    title: UpdateServiceCatalogSource
    required:
      - name
      - url
    properties:
      name:
        type: string
      url:
        type: string
        pattern: '(?:http|https|git|ssh|git@[-\w.]+):(\/\/)?(.*?)(\.git)?(\/?|\#[-\d\w._]+?)$'
      branch:
        type: string
      credential_id:
        type: integer
        format: uint32
        minimum: 1
  ServiceCatalogChanges:
    title: ServiceCatalogChanges
    description: >-
      Represents list of service catalogs changes during the refresh of a service
      catalog source.
    required:
      - created
      - updated
      - deleted
    properties:
      created:
        type: array
        items:
          $ref: '#/definitions/ServiceCatalog'
      updated:
        type: array
        items:
          $ref: '#/definitions/ServiceCatalog'
      deleted:
        type: array
        items:
          $ref: '#/definitions/ServiceCatalog'
  ServiceCatalogSource:
    title: ServiceCatalogSource
    required:
      - id
      - name
      - url
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      name:
        type: string
      url:
        type: string
        pattern: '(?:http|https|git|ssh|git@[-\w.]+):(\/\/)?(.*?)(\.git)?(\/?|\#[-\d\w._]+?)$'
      branch:
        type: string
      credential_id:
        type: integer
        format: uint32
        minimum: 1
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
      changes:
        $ref: '#/definitions/ServiceCatalogChanges'
      service_catalogs:
        type: array
        items:
          $ref: '#/definitions/ServiceCatalog'
  CreateConfigRepository:
    title: CreateConfigRepository
    required:
      - name
      - url
      - credential_id
      - default
      - branch
    properties:
      name:
        type: string
      url:
        type: string
        pattern: '(?:http|https|git|ssh|git@[-\w.]+):(\/\/)?(.*?)(\.git)?(\/?|\#[-\d\w._]+?)$'
      branch:
        type: string
      default:
        type: boolean
      credential_id:
        type: integer
        format: uint32
        minimum: 1
  UpdateConfigRepository:
    title: UpdateConfigRepository
    required:
      - name
      - url
      - credential_id
      - default
      - branch
    properties:
      name:
        type: string
      url:
        type: string
        pattern: '(?:http|https|git|ssh|git@[-\w.]+):(\/\/)?(.*?)(\.git)?(\/?|\#[-\d\w._]+?)$'
      branch:
        type: string
      default:
        type: boolean
      credential_id:
        type: integer
        format: uint32
        minimum: 1
  ConfigRepository:
    title: ConfigRepository
    required:
      - id
      - name
      - url
      - default
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      name:
        type: string
      url:
        type: string
        pattern: '(?:http|https|git|ssh|git@[-\w.]+):(\/\/)?(.*?)(\.git)?(\/?|\#[-\d\w._]+?)$'
      branch:
        type: string
      credential_id:
        type: integer
        format: uint32
        minimum: 1
      default:
        type: boolean
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  AWSInfrastructureResourcesAggregation:
    title: AWS Infrastructure Resources Aggregation
    minProperties: 1
    maxProperties: 12
    properties:
      instances:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      vpcs:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      images:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      security_groups:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      subnets:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      volumes:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      snapshots:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      cache_clusters:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      load_balancers_v1:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      load_balancers_v2:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      db_instances:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
      buckets:
        $ref: '#/definitions/InfrastructureResourcesAggregationItem'
  InfrastructureResourcesAggregationItem:
    title: Infrastructure Resource Aggregation Item
    description: >-
      Contains aggregated data of a single type of an infrastructure resource.
    required:
      - total_amount
    properties:
      total_amount:
        description: The number of items of the specific type of resource.
        type: integer
        format: int32
  AWSInfrastructureResourceInstance:
    title: AWS Infrastructure Instance Resource
    description: >-
      This object contains the items described in the instance data type
      described in https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Instance.html
      Tags property is set, for guaranteeing that the respond will always have
      the property of the type array, not allowing null in case that the resource
      doesn't have any, hence an empty array is used in such case.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceVPC:
    title: AWS Infrastructure VPC Resource
    description: >-
      This object contains the items described in the VPC data type
      described in https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Vpc.html
      Tags property is set, for guaranteeing that the respond will always have
      the property of the type array, not allowing null in case that the resource
      doesn't have any, hence an empty array is used in such case.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceSubnet:
    title: AWS Infrastructure subnet Resource
    description: >-
      This object contains the items described in the subnet data type
      described in https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Subnet.html
      Tags property is set, for guaranteeing that the respond will always have
      the property of the type array, not allowing null in case that the resource
      doesn't have any, hence an empty array is used in such case.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceSecurityGroup:
    title: AWS Infrastructure security group Resource
    description: >-
      This object contains the items described in the security group data type
      described in https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SecurityGroup.html
      Tags property is set, for guaranteeing that the respond will always have
      the property of the type array, not allowing null in case that the resource
      doesn't have any, hence an empty array is used in such case.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceImage:
    title: AWS Infrastructure image Resource
    description: >-
      This object contains the items described in the image data type described
      in https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Image.html
      Tags property is set, for guaranteeing that the respond will always have
      the property of the type array, not allowing null in case that the resource
      doesn't have any, hence an empty array is used in such case.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceVolume:
    title: AWS Infrastructure volume Resource
    description: >-
      This object contains the items described in the volume data type described
      in https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Volume.html
      Tags property is set, for guaranteeing that the respond will always have
      the property of the type array, not allowing null in case that the resource
      doesn't have any, hence an empty array is used in such case.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceSnapshot:
    title: AWS Infrastructure snapshot Resource
    description: >-
      This object contains the items described in the snapshot data type
      described in https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Snapshot.html
      Tags property is set, for guaranteeing that the respond will always have
      the property of the type array, not allowing null in case that the resource
      doesn't have any, hence an empty array is used in such case.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceElasticacheCluster:
    title: AWS Infrastructure Elasticache cluster Resource
    description: >-
      This object contains the items described in the elasticache cluseter data
      type described in
      https://docs.aws.amazon.com/AmazonElastiCache/latest/APIReference/API_CacheCluster.html
      but it also contains its associated tags which are documented in the
      properties of this object definition.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceLoadBalancerV1:
    title: AWS Infrastructure load balancer (ELB) Resource
    description: >-
      This object contains the items described in the load balancer (ELB)
      data type described in
      https://docs.aws.amazon.com/elasticloadbalancing/2012-06-01/APIReference/API_LoadBalancerDescription.html
      but it also contains its associated tags which are documented in the
      properties of this object definition.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceLoadBalancerV2:
    title: AWS Infrastructure load balancer (ELB v2 or a.k.a ALB) Resource
    description: >-
      This object contains the items described in the load balancer (ELB v2 or
      a.k.a ALB) data type described in
      https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_LoadBalancer.html
      but it also contains its associated tags which are documented in the
      properties of this object definition.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceDBInstance:
    title: AWS Infrastructure RDS DB instance Resource
    description: >-
      This object contains the items described in the RDS DB instance data type
      described in
      https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DBInstance.html
      but it also contains its associated tags which are documented in the
      properties of this object definition.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  AWSInfrastructureResourceBucket:
    title: AWS Infrastructure S3 bucket Resource
    description: >-
      This object contains the items described in the S3 bucket data type
      described in
      but it also contains its associated tags which are documented in the
      properties of this object definition.
      This object will contain a property named 'Tags' which is of the type
      defined by the schema definition '#/definitions/AWSTags'
  Costs:
    title: Costs
    description: >-
      This object contains the items described in the Output of the GetCostAndUsage
      method from the AWS go-sdk described in
      https://docs.aws.amazon.com/sdk-for-go/api/service/costexplorer/#GetCostAndUsageOutput
      It also contains 2 extra elements: total and unit - in order to return that pre-
      calculated.
    required:
      - group_definitions
      - results_by_time
      - total
      - unit
    properties:
      group_definitions:
        type: array
        items:
          $ref: '#/definitions/CostGroupDefinitions'
      results_by_time:
        type: array
        items:
          $ref: '#/definitions/CostResultByTime'
      total:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[0-9]+.[0-9]+$'
      unit:
        type: string
        minLength: 2
        maxLength: 3
        pattern: '^[A-Z]+$'
  CostGroupDefinitions:
    title: CostGroupDefinitions
    description: >-
      This object contains the items describe in
      https://docs.aws.amazon.com/sdk-for-go/api/service/costexplorer/#GroupDefinition
      It also grouping the costs based on different elements: az, services, tags, etc
    required:
      - group
      - key
    properties:
      group:
        type: string
        minLength: 1
        maxLength: 30
        pattern: '^[a-zA-Z]+$'
      key:
        type: string
        minLength: 1
        maxLength: 30
        pattern: '^[a-zA-Z]+$'
  CostResultByTime:
    title: CostResultByTime
    description: >-
      This object contains the items described in
      https://docs.aws.amazon.com/sdk-for-go/api/service/costexplorer/#ResultByTime
      It is basically containing information about the cost per group(s) and per
      granularity (daily/monthy) over the periode of time selected.
      The total and unit fields have bee modified to fit our requirements, while the
      groups hold the information about each iteration over the time range.
    required:
      - estimated
      - groups
      - period
      - total
      - unit
    properties:
      estimated:
        type: boolean
      groups:
        type: array
        items:
          $ref: '#/definitions/CostGroup'
      period:
        $ref: '#/definitions/CostTimePeriode'
      total:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[0-9]+.[0-9]+$'
      unit:
        type: string
        minLength: 2
        maxLength: 3
        pattern: '^[a-zA-Z]+$'
  CostTimePeriode:
    title: CostTimePeriode
    description: >-
      This object contains the items described in
      https://docs.aws.amazon.com/sdk-for-go/api/service/costexplorer/#DateInterval
      It defines the beginning and the end of the time frame for which, the API should
      gather costs.
    required:
      - begin
      - end
    properties:
      begin:
        type: string
        minLength: 10
        maxLength: 10
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
      end:
        type: string
        minLength: 10
        maxLength: 10
        pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}$'
  CostGroup:
    title: CostGroup
    description: >-
      This object contains the items described in
      https://docs.aws.amazon.com/sdk-for-go/api/service/costexplorer/#Group
      The groups hold the information about the price per key(s) for each iteration over
      the time range requested.
    required:
      - keys
      - amount
      - unit
    properties:
      keys:
        type: array
        items:
          type: string
      amount:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[0-9]+.[0-9]+$'
      unit:
        type: string
        minLength: 3
        maxLength: 3
        pattern: '^[A-Z]+$'
  Environment:
    title: Environment
    description: >-
      Represent an environment with may be realted to a Project and Pipeline
    required:
      - id
      - canonical
      - created_at
      - updated_at
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      canonical:
        type: string
        minLength: 1
        maxLength: 30
        pattern: '^[\da-zA-Z]+(?:[\da-zA-Z\-._]+[\da-zA-Z]|[\da-zA-Z])$'
      created_at:
        type: integer
        format: int64
        minimum: 0
      updated_at:
        type: integer
        format: int64
        minimum: 0
  LogSource:
    title: A log source
    description: >-
      The data associated to a log's source. Each log source is the context of
      a list of entries which are registered through the time.
    required:
      - id
    properties:
      id:
        type: string
        minLength: 1
  LogSourceEntry:
    title: Log entry
    description: A log's entry which pertains to a specific log's source.
    required:
      - timestamp
      - host
      - message
    properties:
      timestamp:
        type: string
        description: >-
          The timestamp extracted from the orginal log entry in order to be
          homogeneous to all the different supported underlying log systems.
        format: int64
      host:
        type: string
        description: The host registered with the log's entry.
        minLength: 1
      message:
        type: string
        description: The original (i.e. raw) log's entry.
        minLength: 1
  NewExternalBackend:
    title: New External backend
    description: >-
      An external backend contains the configuration needed in order to be
      plugged into the Cycloid system.
      A backend is a general purpose concept, but Cycloid specifies which ones
      are supported and the list of those which are supported for every
      concrete feature.
    required:
      - purpose
      - configuration
    properties:
      purpose:
        type: string
        enum: ['events', 'logs', 'remote_tfstate']
      credential_id:
        type: integer
        format: uint32
        minimum: 1
      project_canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      environment_canonical:
        type: string
        minLength: 1
        maxLength: 30
        pattern: '^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$'
      configuration:
        $ref: '#/definitions/ExternalBackendConfiguration'
  ExternalBackendConfiguration:
    type: object
    discriminator: engine
    properties:
      engine:
        type: string
    required:
      - engine
  AWSCloudWatchLogs:
    description: |
      Representation of AWS cloud watch logs for external backend.
    allOf:
      - $ref: '#/definitions/ExternalBackendConfiguration'
      - type: object
        properties:
          region:
            type: string
            description: |
              The AWS region where the resource exists
        required:
          - region
  AWSRemoteTFState:
    description: |
      Representation of AWS remote tf state for external backend.
    allOf:
      - $ref: '#/definitions/ExternalBackendConfiguration'
      - type: object
        properties:
          region:
            type: string
            description: |
              The AWS region were the resource exists
          bucket:
            type: string
            description: |
              The AWS bucket containing objects
          key:
            type: string
            description: |
              The S3 Key uniquely identifies an object in a bucket
          endpoint:
            type: string
            description: |
              A custom endpoint for the S3 API (default: s3.amazonaws.com)
          s3_force_path_style:
            type: boolean
            description: |
              Always use path-style S3 URLs (https://<HOST>/<BUCKET> instead of https://<BUCKET>.<HOST>)
          skip_verify_ssl:
            type: boolean
            description: |
              Set this to `true` to not verify SSL certificates
        required:
          - region
          - bucket
          - key
  AzureRemoteTFState:
    description: |
      Representation of azure remote tf state for external backend.
    allOf:
      - $ref: '#/definitions/ExternalBackendConfiguration'
      - type: object
        properties:
          container:
            type: string
            description: |
              The Azure container were the resource exists
          blob:
            type: string
            description: |
              The Azure blob contained in the container
        required:
          - container
          - blob
  GCPRemoteTFState:
    description: |
      Representation of GCP remote tf state for external backend.
    allOf:
      - $ref: '#/definitions/ExternalBackendConfiguration'
      - type: object
        properties:
          bucket:
            type: string
            description: |
              The GCP bucket containing objects
          object:
            type: string
            description: |
              The GCP object uniquely identifying an object in a bucket
        required:
          - bucket
          - object
  ElasticsearchLogs:
    description: |
      Representation of Elasticsearch logs for external backend.
    allOf:
      - $ref: '#/definitions/ExternalBackendConfiguration'
      - type: object
        required:
          - urls
          - version
          - sources
        properties:
          urls:
            type: array
            description: |
              List of the URLs
            items:
              type: string
          version:
            type: string
            description: |
              Only 7 is supported
          sources:
            type: object
            description: |
              It's an object where the key is the 'environment' and the value
              another object where the key is the 'source-name' and value a Source.
            additionalProperties:
              type: object
              additionalProperties:
                type: object
                properties:
                  index:
                    type: string
                    description: |
                      Index to use
                  urls:
                    type: array
                    description: |
                      List of URLs to override the main URL defined
                    items:
                      type: string
                  prefilters:
                    type: object
                    description: |
                      JSON representing the prefilters to apply to the index to get
                      the specific values.
                  mapping:
                    type: object
                    description: |
                      Object with the mapping to know which attributes are the ones
                      we have to map to the ones we want
                    required:
                      - host
                      - timestamp
                      - message
                    properties:
                      host:
                        type: string
                        description: |
                          The Host of the log
                      timestamp:
                        type: string
                        description: |
                          The Timestamp of the log
                      message:
                        type: string
                        description: |
                          The Message the user wants to show
  SwiftRemoteTFState:
    description: |
      Representation of Swift remote tf state for external backend.
    allOf:
      - $ref: '#/definitions/ExternalBackendConfiguration'
      - type: object
        properties:
          container:
            type: string
            description: |
              The Swift container containing objects
          object:
            type: string
            description: |
              The swift object uniquely identifying an object in a container
          skip_verify_ssl:
            type: boolean
            description: |
              Set this to `true` to not verify SSL certificates
          region:
            type: string
            description: |
              The Swift region were the resource exists
        required:
          - container
          - object
          - region
  ExternalBackend:
    title: External backend
    description: >-
      An external backend contains the configuration needed in order to be
      plugged into the Cycloid system.
      A backend is a general purpose concept, but Cycloid specifies which ones
      are supported and the list of those which are supported for every
      concrete feature.
    required:
      - configuration
      - purpose
    properties:
      id:
        type: integer
        format: uint32
        minimum: 1
      purpose:
        type: string
      project_canonical:
        type: string
        minLength: 3
        maxLength: 30
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
      environment_canonical:
        type: string
        minLength: 1
        maxLength: 30
        pattern: '^[\da-zA-Z]+(?:(?:[\da-zA-Z\-._]+)?[\da-zA-Z])?$'
      credential_id:
        type: integer
        format: uint32
        minimum: 1
      configuration:
        $ref: '#/definitions/ExternalBackendConfiguration'
  Event:
    title: An event
    description: >-
      A event which has registered an activity in the Cycloid platform.
    required:
      - timestamp
      - type
      - title
      - message
      - severity
      - tags
    properties:
      timestamp:
        type: integer
        description: The timestamp when the event was created in milliseconds.
        format: int64
      type:
        type: string
        description: The type of the event
        enum:
          - Cycloid
          - AWS
          - Monitoring
          - Custom
      title:
        type: string
        description: The title of the event.
        minLength: 1
      message:
        type: string
        description: The message associated to the event.
        minLength: 1
      icon:
        type: string
        description: >-
          [A Font Awesome class name](https://fontawesome.com/icons)
        minLength: 3
      severity:
        type: string
        description: The serverity associated to the event.
        enum:
          - info
          - warn
          - err
          - crit
      tags:
        type: array
        description: The list of tags associated to the event.
        items:
          $ref: '#/definitions/Tag'
      color:
        type: string
        description: >-
          The HTML color associated to the event. The valid colors are the ones listed in the  CSS 2 specification: https://www.w3.org/TR/CSS2/syndata.html#value-def-color. Only the keyword are accepted, the hexadecimal values are not valid.
        minLength: 3
        maxLength: 20
        pattern: '[a-z]+'
  NewEvent:
    title: A new event
    description: A new event to register in the Cycloid platform.
    required:
      - type
      - title
      - message
      - severity
      - tags
    properties:
      type:
        type: string
        description: The type of the event
        enum:
          - Cycloid
          - AWS
          - Monitoring
          - Custom
      title:
        type: string
        description: The title of the event.
        minLength: 1
      message:
        type: string
        description: The message associated to the event.
        minLength: 1
      icon:
        type: string
        description: >-
          [A Font Awesome class name](https://fontawesome.com/icons)
        minLength: 3
      severity:
        type: string
        description: tThe serverity associated to the event.
        enum:
          - info
          - warn
          - err
          - crit
      tags:
        type: array
        description: The list of tags associated to the event.
        items:
          $ref: '#/definitions/Tag'
      color:
        type: string
        description: >-
          The HTML color associated to the event. The valid colors are the ones listed in the  CSS 2 specification: https://www.w3.org/TR/CSS2/syndata.html#value-def-color. Only the keyword are accepted, the hexadecimal values are not valid.
        minLength: 3
        maxLength: 20
        pattern: '[a-z]+'
  Tag:
    title: Key and value pair
    description: >-
      Key and value pair defined with the widely adopted name, tag.
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        minLength: 1
        maxLength: 254
      value:
        type: string
        maxLength: 254
        pattern: '^(?:[\w\-+=.:/@ ]*)$'
  TerraformProvider:
    title: Provider
    description: Provider of infrastrucutre
    required:
      - name
      - canonical
      - abbreviation
      - schema
      - image
      - cloud
    properties:
      name:
        type: string
      canonical:
        type: string
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
        minLength: 3
      abbreviation:
        type: string
      cloud:
        type: boolean
      schema:
        type: object
      image:
        type: string
        format: uri
  TerraformProviderSimple:
    title: TerraformProviderSimple
    description: Provider of infrastrucutre without the conifg
    required:
      - name
      - canonical
      - abbreviation
      - cloud
      - image
    properties:
      name:
        type: string
      canonical:
        type: string
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
        minLength: 3
      abbreviation:
        type: string
      cloud:
        type: boolean
      image:
        type: string
        format: uri
  TerraformProviderResource:
    title: Resource
    description: A Resource of a Provider
    required:
      - canonical
      - description
      - short_description
      - schema
      - is_node
      - is_edge
      - image
      - keywords
      - category
    properties:
      canonical:
        type: string
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
        minLength: 3
      schema:
        type: object
      is_node:
        type: boolean
      is_edge:
        type: boolean
      image:
        type: string
        format: uri
      category:
        type: string
      short_description:
        type: string
      description:
        type: string
      keywords:
        type: array
        items:
          type: string
  TerraformProviderResourceSimple:
    title: ResourceSimple
    description: A Resource of a Provider without the conifg
    required:
      - canonical
      - description
      - short_description
      - is_node
      - is_edge
      - image
      - keywords
      - category
    properties:
      canonical:
        type: string
        pattern: '^[a-z0-9]+[a-z0-9\-_]+[a-z0-9]+$'
        minLength: 3
      is_node:
        type: boolean
      is_edge:
        type: boolean
      image:
        type: string
        format: uri
      short_description:
        type: string
      description:
        type: string
      category:
        type: string
      keywords:
        type: array
        items:
          type: string
  TerraformJSONConfig:
    title: TerraformJSONConfig
    description: The JSON config for Terraform
    required:
      - config
    properties:
      config:
        type: object
  TerraformHCLConfig:
    title: TerraformHCLConfig
    description: The HCL config for Terraform
    required:
      - config
    properties:
      config:
        type: string
  TerraformValidationResult:
    title: TerraformValidationResult
    description: The result of the validation, if errors is empty means that is correct
    required:
      - errors
    properties:
      errors:
        type: array
        items:
          type: string
  TerraformJSONDiagram:
    title: TerraformDiagram
    description: The JSON Diagram structure
  TerraformImage:
    title: TerraformImage
    description: The Image from the TF structure
    required:
      - image
    properties:
      image:
        type: string
        format: byte
  UserEmail:
    title: User email address
    description: The user's email address
    required:
      - email
    properties:
      email:
        type: string
        format: email
  UserGuide:
    type: object
    title: User guide JSON schema
    description: The user's guide progress JSON schema
  Infrastructure:
    type: object
    title: Infrastructure
    description: Holds all the Infrastructure of the project in an environment
    required:
      - graph
      - config
    properties:
      graph:
        $ref: '#/definitions/InfrastructureGraph'
      config:
        $ref: '#/definitions/InfrastructureConfig'
  InfrastructureConfig:
    type: object
    title: InfrastructureConfig
    description: Holds all the Infrastructure config of the TFState
  InfrastructureGraph:
    type: object
    title: InfrastructureGraph
    description: Holds all the Infrastructure of the project in an environment in Graph format
    required:
      - nodes
      - edges
    properties:
      nodes:
        type: array
        items:
          $ref: '#/definitions/InfrastructureGraphNode'
      edges:
        type: array
        items:
          $ref: '#/definitions/InfrastructureGraphEdge'
  InfrastructureGraphNode:
    type: object
    title: Infrastructure
    description: Holds the information of a Node of the Graph
    required:
      - id
      - canonical
      - position
      - resource
    properties:
      id:
        type: string
      canonical:
        type: string
      position:
        type: array
        description: It holds [x,y]
        items:
          type: integer
      resource:
        $ref: '#/definitions/TerraformProviderResourceSimple'
  InfrastructureGraphEdge:
    type: object
    title: Infrastructure
    description: Holds the information of an Edge of the Graph
    required:
      - id
      - source
      - target
      - canonicals
    properties:
      id:
        type: string
      source:
        type: string
      target:
        type: string
      canonicals:
        type: array
        items:
          type: string
  Summary:
    type: object
    title: Summary of the organization
    required:
      - projects
      - pipelines
      - credentials
      - service_catalog_sources
      - config_repositories
      - teams
      - users
      - roles
    properties:
      projects:
        type: integer
        format: uint64
      pipelines:
        type: integer
        format: uint64
      credentials:
        type: integer
        format: uint64
      service_catalog_sources:
        type: integer
        format: uint64
      config_repositories:
        type: integer
        format: uint64
      teams:
        type: integer
        format: uint64
      users:
        type: integer
        format: uint64
      roles:
        type: integer
        format: uint64
paths:
  '/organizations/{organization_canonical}/code_generation/terraform/jsontohcl':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    post:
      tags:
        - Code Generation
      description: Transforms a JSON to a HCL
      operationId: terraformJSONToHCL
      parameters:
        - in: body
          name: body
          description: The Terraform JSON config
          required: true
          schema:
            $ref: '#/definitions/TerraformJSONConfig'
      responses:
        '200':
          description: The HCL translation of the config
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/TerraformHCLConfig'
          examples:
            application/json:
              data:
                config: '
                  "data" "aws_ami" "debian_jessie_latest" {
                    "most_recent" = true
                  }

                  "locals" = {
                    "codecommit_repository_name" = "something"
                  }

                  "output" "sensitive" {
                    "sensitive" = true

                    "value" = "VALUE"
                  }

                  "provider" "aws" {
                    "access_key" = "${var.access_key}"
                  }

                  "resource" "aws_elb" "front" {
                    "name" = "${var.project}-front-${var.env}"

                    "tags" = {
                      "name" = "some name"
                    }
                  }
                  "variable" "front_disk_size" {
                    "default" = 60
                  }
                '
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/code_generation/terraform/providers':
    get:
      tags:
        - Code Generation
      parameters:
        - $ref: '#/parameters/organization_canonical'
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      description: Return all the Providers
      operationId: getTerraformProviders
      responses:
        '200':
          description: List of the Providers
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/TerraformProviderSimple'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - name: "Amazon Web Service"
                  canonical: "aws"
                  abbreviation: "AWS"
                  cloud: true
                  image: 'http://via.placeholder.com/150x150'
                - name: "Terraform Template"
                  canonical: "template"
                  abbreviation: "Template"
                  cloud: false
                  image: 'http://via.placeholder.com/150x150'
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources':
    get:
      tags:
        - Code Generation
      parameters:
        - $ref: '#/parameters/organization_canonical'
        - $ref: '#/parameters/provider_canonical'
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      description: Return all the DataSources for the Provider
      operationId: getTerraformProviderDataSources
      responses:
        '200':
          description: List of the DataSources
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/TerraformProviderResourceSimple'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - canonical: "aws_instance"
                  image: 'http://via.placeholder.com/150x150'
                  is_node: true
                  is_edge: false
                  category: "SomeCategory"
                  keywords: []
                  description: "detailed resource description"
                  short_description: "resource description"
                - canonical: "aws_elb"
                  image: 'http://via.placeholder.com/150x150'
                  is_node: true
                  is_edge: false
                  category: "SomeCategory"
                  keywords: []
                  description: "detailed resource description"
                  short_description: "resource description"
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/data_sources/{resource_canonical}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/provider_canonical'
      - $ref: '#/parameters/resource_canonical'
    get:
      tags:
        - Code Generation
      description: Get the information of the DataSource
      operationId: getTerraformProviderDataSource
      responses:
        '200':
          description: The information of the DataSource
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/TerraformProviderResource'
          examples:
            application/json:
              data:
                canonical: "aws_lb"
                is_node: true
                is_edge: false
                image: 'http://via.placeholder.com/150x150'
                schema:
                  dns_name:
                    required: false
                    optional: false
                    type: "TypeString"
                    default: ""
                  internal:
                    required: false
                    optional: true
                    type: "TypeBool"
                    default: "null"
                category: "SomeCategory"
                keywords: []
                description: "detailed resource description"
                short_description: "resource description"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/provider_canonical'
    get:
      tags:
        - Code Generation
      description: Get the information of the Provider
      operationId: getTerraformProvider
      responses:
        '200':
          description: The information of the Provider
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/TerraformProvider'
          examples:
            application/json:
              data:
                name: "Amazon Web Service"
                canonical: "aws"
                abbreviation: "AWS"
                image: 'http://via.placeholder.com/150x150'
                cloud: true
                schema:
                  access_key:
                    required: false
                    optional: true
                    type: "TypeString"
                    default: ""
                  secret_key:
                    required: false
                    optional: true
                    type: "TypeString"
                    default: ""
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/resources':
    get:
      tags:
        - Code Generation
      parameters:
        - $ref: '#/parameters/organization_canonical'
        - $ref: '#/parameters/provider_canonical'
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      description: Return all the Resources for the Provider
      operationId: getTerraformProviderResources
      responses:
        '200':
          description: List of the Resources
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/TerraformProviderResourceSimple'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - canonical: "aws_instance"
                  image: 'http://via.placeholder.com/150x150'
                  is_node: true
                  is_edge: false
                  category: "SomeCategory"
                  keywords: []
                  description: "detailed resource description"
                  short_description: "resource description"
                - canonical: "aws_elb"
                  image: 'http://via.placeholder.com/150x150'
                  is_node: true
                  is_edge: false
                  category: "SomeCategory"
                  keywords: []
                  description: "detailed resource description"
                  short_description: "resource description"
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/code_generation/terraform/providers/{provider_canonical}/resources/{resource_canonical}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/provider_canonical'
      - $ref: '#/parameters/resource_canonical'
    get:
      tags:
        - Code Generation
      description: Get the information of the Resource
      operationId: getTerraformProviderResource
      responses:
        '200':
          description: The information of the Resource
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/TerraformProviderResource'
          examples:
            application/json:
              data:
                canonical: "aws_lb"
                is_node: true
                is_edge: false
                image: 'http://via.placeholder.com/150x150'
                schema:
                  dns_name:
                    required: false
                    optional: false
                    type: "TypeString"
                    default: ""
                  internal:
                    required: false
                    optional: true
                    type: "TypeBool"
                    default: "null"
                category: "SomeCategory"
                keywords: []
                description: "detailed resource description"
                short_description: "resource description"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/code_generation/terraform/validate':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    post:
      tags:
        - Code Generation
      description: Validates a TF configuration
      operationId: terraformValidate
      parameters:
        - in: body
          name: body
          description: The Terraform JSON config
          required: true
          schema:
            $ref: '#/definitions/TerraformJSONConfig'
      responses:
        '200':
          description: The result of validating the provided configuration
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/TerraformValidationResult'
          examples:
            application/json:
              data:
                errors:
                  - "resource 'aws_elb.front' config: unknown variable referenced: 'name'; define it with a 'variable' block"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  /status:
    get:
      tags:
        - Cycloid
      description: Get the status of the Cycloid's services.
      operationId: getStatus
      security: []
      responses:
        '200':
          description: General application status and services statuses.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/GeneralStatus'
          examples:
            application/json:
              data:
                status: "Error"
                message: "some services returned an unknown state (s1), while some other returned errors (s2, s3)"
                checks:
                  - canonical: "s0"
                    category: "internal"
                    status: "Success"
                    message: "no issue reported while connecting to s0"
                  - canonical: "s1"
                    category: "internal"
                    status: "Unknown"
                    message: "unknown state for s1 service"
                  - canonical: "s2"
                    category: "internal"
                    status: "Error"
                    message: "issue detected while connecting to s2"
                  - canonical: "s3"
                    category: "internal"
                    status: "Success"
                    message: "issue detected while connecting to s3"
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  /version:
    get:
      tags:
        - Cycloid
      description: Get the version of the Cycloid's API.
      operationId: getAppVersion
      security: []
      responses:
        '200':
          description: Application version.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/AppVersion'
          examples:
            application/json:
              data:
                version: "1.0.0"
                branch: "master"
                revision: "9d3d4d97"
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/billing/aws/':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/credential_id_query'
      - $ref: '#/parameters/cost_granularity_filter'
      - $ref: '#/parameters/cost_metrics_filter'
      - $ref: '#/parameters/cost_begin_filter'
      - $ref: '#/parameters/cost_end_filter'
      - $ref: '#/parameters/cost_services_filter'
      - $ref: '#/parameters/cost_group_by_filter'
      - $ref: '#/parameters/aws_tags'
    get:
      tags:
        - Organizations amazon cost
      description: Get the information regarding the cost of the organization.
      operationId: getOrgCost
      responses:
        '200':
          description: The costs information of the organization with a specific account AWS given the filters.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Costs'
          examples:
            application/json:
              data:
                group_definitions:
                  - key: "project"
                    group: "TAG"
                  - key: "SERVICE"
                    group: "DIMENSION"
                results_by_time:
                  - estimated: true
                    groups:
                      - keys:
                          - "project$project1"
                          - "Amazon Elastic Block Store"
                        amount: "0.0002796249"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Elastic Compute Cloud - Compute"
                        amount: "1.7527109834"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Elastic Load Balancing"
                        amount: "2.7218829939"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Relational Database Service"
                        amount: "5.296907647"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Simple Storage Service"
                        amount: "0.0002852976"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon ElastiCache"
                        amount: "2.592"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Elastic Block Store"
                        amount: "0.0002796249"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Elastic Block Store"
                        amount: "2.5063184507"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Elastic Compute Cloud - Compute"
                        amount: "19.7591551349"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Elastic Load Balancing"
                        amount: "10.7415779314"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Relational Database Service"
                        amount: "36.4634532918"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Simple Storage Service"
                        amount: "34.3247310513"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "AmazonCloudWatch"
                        amount: "0.327916032"
                        unit: "USD"
                      - keys:
                          - "project$project3"
                          - "Amazon Elastic Block Store"
                        amount: "16.1489928199"
                        unit: "USD"
                      - keys:
                          - "project$project3"
                          - "Amazon Elastic Compute Cloud - Compute"
                        amount: "3.5360252913"
                        unit: "USD"
                      - keys:
                          - "project$project3"
                          - "Amazon Relational Database Service"
                        amount: "15.7788193407"
                        unit: "USD"
                      - keys:
                          - "project$project3"
                          - "Amazon Simple Storage Service"
                        amount: "0.0093881693"
                        unit: "USD"
                    period:
                      begin: "2018-01-01"
                      end: "2018-01-30"
                    total: "151.9607236850"
                    unit: "USD"
                  - estimated: true
                    groups:
                      - keys:
                          - "project$project1"
                          - "Amazon Elastic Block Store"
                        amount: "0.0002796249"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Elastic Compute Cloud - Compute"
                        amount: "1.7527109834"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Elastic Load Balancing"
                        amount: "2.7218829939"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Relational Database Service"
                        amount: "5.296907647"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Simple Storage Service"
                        amount: "0.0002852976"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon ElastiCache"
                        amount: "2.592"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Elastic Block Store"
                        amount: "0.0002796249"
                        unit: "USD"
                      - keys:
                          - "project$project1"
                          - "Amazon Elastic Block Store"
                        amount: "2.5063184507"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Elastic Compute Cloud - Compute"
                        amount: "19.7591551349"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Elastic Load Balancing"
                        amount: "10.7415779314"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Relational Database Service"
                        amount: "36.4634532918"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "Amazon Simple Storage Service"
                        amount: "34.3247310513"
                        unit: "USD"
                      - keys:
                          - "project$project2"
                          - "AmazonCloudWatch"
                        amount: "0.327916032"
                        unit: "USD"
                      - keys:
                          - "project$project3"
                          - "Amazon Elastic Block Store"
                        amount: "16.1489928199"
                        unit: "USD"
                      - keys:
                          - "project$project3"
                          - "Amazon Elastic Compute Cloud - Compute"
                        amount: "3.5360252913"
                        unit: "USD"
                      - keys:
                          - "project$project3"
                          - "Amazon Relational Database Service"
                        amount: "15.7788193407"
                        unit: "USD"
                      - keys:
                          - "project$project3"
                          - "Amazon Simple Storage Service"
                        amount: "0.0093881693"
                        unit: "USD"
                    period:
                      begin: "2018-01-01"
                      end: "2018-01-30"
                    total: "151.9607236850"
                    unit: "USD"
                total: "303.9214473700"
                unit: "USD"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/billing/aws/group-by/':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/credential_id_query'
    get:
      tags:
        - Organizations amazon cost
      description: Get the group_by possibilities for the cost filtering of the organization with a specific account AWS.
      operationId: getOrgCostGroupBy
      responses:
        '200':
          description: The group_by possibilities for filtering the AWS costs.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  type: string
          examples:
            application/json:
              data:
                - "AZ"
                - "INSTANCE_TYPE"
                - "LINKED_ACCOUNT"
                - "OPERATION"
                - "PURCHASE_TYPE"
                - "REGION"
                - "SERVICE"
                - "USAGE_TYPE"
                - "USAGE_TYPE_GROUP"
                - "RECORD_TYPE"
                - "OPERATING_SYSTEM"
                - "TENANCY"
                - "SCOPE"
                - "PLATFORM"
                - "SUBSCRIPTION_ID"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/billing/aws/services/':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/credential_id_query'
    get:
      tags:
        - Organizations amazon cost
      description: Get the services possibilities for the cost filtering of the organization with a specific account AWS.
      operationId: getOrgCostServices
      responses:
        '200':
          description: The services possibilities for filtering the AWS costs.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  type: string
          examples:
            application/json:
              data:
                - "AWS Budgets"
                - "AWS CloudTrail"
                - "AWS Config"
                - "AWS Database Migration Service"
                - "AWS Directory Service"
                - "AWS Key Management Service"
                - "AWS Lambda"
                - "AWS Premium Support"
                - "AWS WAF"
                - "AWS X-Ray"
                - "Amazon Chime"
                - "Amazon Chime Dialin"
                - "Amazon CloudFront"
                - "Amazon DynamoDB"
                - "Amazon EC2 Container Registry (ECR)"
                - "Amazon ElastiCache"
                - "EC2 - Other"
                - "Amazon Elastic Compute Cloud - Compute"
                - "Amazon Elastic File System"
                - "Amazon Elastic Load Balancing"
                - "Amazon Elasticsearch Service"
                - "Amazon Glacier"
                - "Amazon Registrar"
                - "Amazon Relational Database Service"
                - "Amazon Route 53"
                - "Amazon Simple Email Service"
                - "Amazon Simple Notification Service"
                - "Amazon Simple Queue Service"
                - "Amazon Simple Storage Service"
                - "Amazon Virtual Private Cloud"
                - "AmazonCloudWatch"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/billing/aws/tags/':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/credential_id_query'
      - $ref: '#/parameters/cost_tag_key'
    get:
      tags:
        - Organizations amazon cost
      description: Get the tags possibilities for the cost filtering of the organization with a specific account AWS.
      operationId: getOrgCostTags
      responses:
        '200':
          description: The tags possibilities for filtering the AWS costs.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  type: string
          examples:
            application/json:
              data:
                - "env"
                - "project"
                - "client"
                - "Name"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/billing':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      tags:
        - Organization Billing
      description: Get the billing information of the organization.
      operationId: getOrgBilling
      responses:
        '200':
          description: The information of the organization billing which has the specified Canonical.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/BillingInformation'
          examples:
            application/json:
              data:
                email: anduinwrynn@ali.com
                name: Anduin Wrynn
                language: fr
                address:
                  line1: Ironforge
                  line2: Stormwind
                tax_information:
                  tax_id: "123454"
                  type: vat
                subscription:
                  amount: 20
                  quantity: 4
                  current_period_end: 1501131026
                source:
                  last4: "3456"
                  expiration_month: 8
                  expiration_year: 2019
                  brand: Visa
                created_at: 1520505050
                updated_at: 1520505050
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Organization Billing
      description: Update the information of the organization billing.
      operationId: updateOrgBilling
      parameters:
        - in: body
          name: body
          description: The information of the organization to update.
          required: true
          schema:
            $ref: '#/definitions/NewBillingInformation'
      responses:
        '200':
          description: >-
            Billing Organization updated. The body contains information of the updated
            organization.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/BillingInformation'
          examples:
            application/json:
              data:
                email: anduinwrynn@ali.com
                name: Anduin Wrynn
                language: fr
                address:
                  line1: Ironforge
                  line2: Stormwind
                tax_information:
                  tax_id: "123454"
                  type: vat
                subscription:
                  amount: 20.20
                  quantity: 4
                  current_period_end: 1501131026
                source:
                  last4: "3456"
                  expiration_month: 8
                  expiration_year: 2019
                  brand: Visa
                created_at: 1520505050
                updated_at: 1520505050
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/billing/start':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      tags:
        - Organization Billing
      description: Starts the Billing
      operationId: getOrgStartBilling
      responses:
        '200':
          description: The information to start the billing process
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/BillingInformationStart'
          examples:
            application/json:
              data:
                client_secret: pi_1EBOxFDkAXTfDBI4F12XaW18_secret_skUGiJsNWm5sVtI1VXYhE2VqL
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/children':
    get:
      parameters:
        - $ref: '#/parameters/organization_canonical'
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
        - in: query
          name: organization_name
          type: string
          description: Search by the organization's name
        - in: query
          name: organization_created_at
          type: string
          format: date-time
          description: Search by organization's creation date
        - $ref: '#/parameters/order_by_query'
      tags:
        - Organization Children
      description: Get the children organizations that the authenticated user has access.
      operationId: getOrgChildren
      responses:
        '200':
          description: List of the children organizations which the authenticated user has access.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/OrganizationBasicInfo'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - canonical: org1
                  id: 1
                  name: Organization 1
                  blocked: []
                  ci_team_name: asfdOPNljk
                  created_at: 1503225026
                  updated_at: 1503335026
                - canonical: org2
                  id: 1
                  name: Organization 2
                  blocked: []
                  ci_team_name: asfdOPNljk
                  created_at: 1501131026
                  updated_at: 1503333026
                - canonical: org3
                  id: 1
                  name: Organization 3
                  blocked: []
                  ci_team_name: asfdOPNljk
                  created_at: 1500135021
                  updated_at: 1503332021
              pagination:
                index: 1
                size: 10
                total: 3
        '422':
          $ref: '#/responses/unprocessable_entity'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organization Children
      description: >-
        Create a new organization child, making the authenticated user the owner of
        it.
      operationId: createOrgChild
      parameters:
        - $ref: '#/parameters/organization_canonical'
        - in: body
          name: body
          description: The information of the organization to create.
          required: true
          schema:
            $ref: '#/definitions/NewOrganization'
      responses:
        '200':
          description: >-
            Organization created. The body contains the information of the new
            created organization.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/OrganizationBasicInfo'
          examples:
            application/json:
              data:
                id: 1
                canonical: org1
                name: Organization 1
                blocked: []
                ci_team_name: asfdOPNljk
                created_at: 1503225026
                updated_at: 1503335026
  '/organizations/{organization_canonical}/cloud_providers':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Cloud providers
      description: Get the list of Cloud Providers
      operationId: getCloudProviders
      responses:
        '200':
          description: List of Cloud Providers
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/CloudProvider'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - id: 1
                  canonical: 'aws'
                  abbreviation: 'AWS'
                  name: 'Amazon Web Services'
                - id: 2
                  canonical: 'google'
                  abbreviation: 'GCP'
                  name: 'Google Cloud Platform'
                - id: 3
                  canonical: 'azurem'
                  abbreviation: 'Azure'
                  name: 'Azure'
                - id: 4
                  canonical: 'flexibleengine'
                  abbreviation: 'FlexibleEngine'
                  name: 'Flexible Engine'
                - id: 5
                  canonical: 'openstack'
                  abbreviation: 'OpenStack'
                  name: 'OpenStack'
              pagination:
                index: 1
                size: 10
                total: 2
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/config_repositories':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/default'
      tags:
        - Organization Config Repositories
      description: Return all the config repositories
      operationId: getConfigRepositories
      responses:
        '200':
          description: List of the config repositories.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ConfigRepository'
          examples:
            application/json:
              data:
                - id: 1
                  name: My personal repo
                  url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                  branch: 'configs'
                  default: true
                  created_at: 1503225026
                  updated_at: 1503335026
                - id: 2
                  name: My personal repo 2
                  url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                  branch: 'configs'
                  default: false
                  created_at: 1503225026
                  updated_at: 1503335026
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organization Config Repositories
      parameters:
        - in: body
          name: body
          description: The information of the config repository to create.
          required: true
          schema:
            $ref: '#/definitions/CreateConfigRepository'
      description: Creates a config repository
      operationId: createConfigRepository
      responses:
        '200':
          description: Success creation
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ConfigRepository'
          examples:
            application/json:
              data:
                id: 1
                name: My personal repo
                url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                branch: 'configs'
                default: true
                credential_id: 1
                created_at: 1503225026
                updated_at: 1503335026
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/config_repositories/{config_repository_id}/config':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/config_repository_id'
    post:
      tags:
        - Organization Config Repositories
      description: Create Service Catalog config files in the Config Repository.
      operationId: createConfigRepositoryConfig
      parameters:
        - in: body
          name: body
          description: >
            The body contains Service Catalog's config files and paths where
            they'll be created in the Config Repository.
          required: true
          schema:
            $ref: '#/definitions/SCConfig'
      responses:
        '204':
          description: SC config files have been created successfully
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/config_repositories/{config_repository_id}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/config_repository_id'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization Config Repositories
      description: Return the Config Repository
      operationId: getConfigRepository
      responses:
        '200':
          description: Organization Config Repository.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ConfigRepository'
          examples:
            application/json:
              data:
                id: 1
                name: My personal repo
                url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                branch: 'configs'
                default: true
                created_at: 1503225026
                updated_at: 1503335026
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Organization Config Repositories
      description: Update a config repository
      operationId: updateConfigRepository
      parameters:
        - in: body
          name: body
          description: The information of the config repository to create.
          required: true
          schema:
            $ref: '#/definitions/UpdateConfigRepository'
      responses:
        '200':
          description: Success creation
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ConfigRepository'
          examples:
            application/json:
              data:
                id: 1
                name: My personal repo
                url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                branch: 'configs'
                default: true
                credential_id: 1
                created_at: 1503225026
                updated_at: 1503335026
        '411':
          $ref: '#/responses/required_content_length_header'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization Config Repositories
      description: delete a Config Repositories
      operationId: deleteConfigRepository
      responses:
        '204':
          description: Organization Config repository has been deleted
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/credentials':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/credential_type_query'
      tags:
        - Organization Credentials
      description: Return all the Credentials
      operationId: getCredentials
      responses:
        '200':
          description: List of the Credentials
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/CredentialSimple'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - id: 1
                  name: name-key
                  type: ssh
                  path: my/path
                  raw:
                    ssh_key: key
                - id: 2
                  name: name-key
                  type: ssh
                  path: my/path
                  raw:
                    ssh_key: key
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organization Credentials
      description: >-
        Create a new Credential, based on the type you will have to pass different
        parameters within the body:

        * ssh: ssh_key

        * aws: access_key, secret_key

        * gcp: json_key

        * azure: client_id, client_secret, subscription_id, tenant_id

        * azure_storage: account_name, access_key

        * basic_auth: username, password

        * elasticsearch: username, password, ca_cert

        * swift: auth_url, username, password, domain_id, tenant_id
      operationId: createCredential
      parameters:
        - in: body
          name: body
          description: The information of the organization to create.
          required: true
          schema:
            $ref: '#/definitions/CreateCredential'
      responses:
        '200':
          description: >-
            Credential created. The body contains the information of the new
            created Credential.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Credential'
          examples:
            application/json:
              data:
                id: 2
                name: name-key
                type: ssh
                path: my/path
                raw:
                  ssh_key: key
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/credentials/{credential_id}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/credential_id'
    get:
      tags:
        - Organization Credentials
      description: Get the information of the Credential.
      operationId: getCredential
      responses:
        '200':
          description: The information of the Credential which has the specified ID.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Credential'
          examples:
            application/json:
              data:
                id: 2
                name: name-key
                type: ssh
                path: my/path
                raw:
                  ssh_key: key
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization Credentials
      description: Delete the Credential.
      operationId: deleteCredential
      responses:
        '204':
          description: Credential has been deleted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '409':
          description: Credential deletion has internal conflict
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Organization Credentials
      description: >-
        Update an existing Credential, based on the type you will have to pass different
        parameters within the body:

        * ssh: ssh_key

        * aws: access_key, secret_key

        * gcp: json_key

        * azure: client_id, client_secret, subscription_id, tenant_id

        * azure_storage: account_name, access_key

        * basic_auth: username, password

        * elasticsearch: username, password, ca_cert

        * swift: auth_url, username, password, domain_id, tenant_id
      operationId: updateCredential
      parameters:
        - in: body
          name: body
          description: The information of the organization to update.
          required: true
          schema:
            $ref: '#/definitions/UpdateCredential'
      responses:
        '200':
          description: Credential updated.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Credential'
          examples:
            application/json:
              data:
                id: 2
                name: name-key
                type: ssh
                path: my/path
                raw:
                  ssh_key: key
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/environments':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      tags:
        - Organization Environments
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      description: Get all the environments of the Organization
      operationId: getEnvironments
      responses:
        '200':
          description: Returns all the Environments
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Environment'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - id: 2
                  canonical: 'staging'
                  created_at: 1503225026
                  updated_at: 1503335026
                - id: 3
                  canonical: 'dev'
                  created_at: 1503225026
                  updated_at: 1503335026
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/external_backends':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical_query'
      - $ref: '#/parameters/environment_canonical_query'
    get:
      tags:
          - Organization External Backends
      description: Get the list of organization external backends
      operationId: getExternalBackends
      responses:
        '200':
          description: The list of the external backends
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ExternalBackend'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - id: 1
                  project_canonical: project1
                  credential_id: 1
                  purpose: 'logs'
                  configuration:
                    engine: AWSCloudWatchLogs
                    region: eu-west1
                - id: 2
                  project_canonical: project2
                  credential_id: 2
                  purpose: 'logs'
                  configuration:
                    engine: AWSCloudWatchLogs
                    region: eu-west1
                - id: 3
                  project_canonical: project1
                  environment_canonical: envA
                  credential: 3
                  purpose: 'remotee_tfstate'
                  configuration:
                    engine: AWSRemoteTFState
                    region: eu-west1
                    bucket: mybucket
                    key: /my/key
                - id: 4
                  project_canonical: project2
                  environment_canonical: envA
                  credential: 4
                  purpose: 'logs'
                  configuration:
                    engine: AWSRemoteTFState
                    container: mycontainer
                    blob: /my/blob
                - id: 5
                  project_canonical: project2
                  environment_canonical: envB
                  credential_id: 5
                  purpose: 'remote_tfstate'
                  configuration:
                    engine: GCPRemoteTFState
                    bucket: mybucket
                    object: /my/object
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organization External Backends
      description: Save information about the external backend
      operationId: createExternalBackend
      parameters:
        - in: body
          name: body
          description: The information of the external backend
          required: true
          schema:
            $ref: '#/definitions/NewExternalBackend'
      responses:
        '200':
          description: external backend has been registered
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ExternalBackend'
          examples:
            application/json:
              data:
                id: 1
                project_canonical: project1
                credential_id: 1
                purpose: 'logs'
                configuration:
                  engine: AWSCloudWatchLogs
                  region: eu-west1
  '/organizations/{organization_canonical}/external_backends/{external_backend_id}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/external_backend_id'
    get:
      tags:
        - Organization External Backends
      description: Get the external backend
      operationId: getExternalBackend
      responses:
        '200':
          description: The external backend
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ExternalBackend'
          examples:
            application/json:
              data:
                id: 1
                project_canonical: project1
                credential_id: 1
                purpose: 'logs'
                configuration:
                  engine: AWSCloudWatchLogs
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Organization External Backends
      description: Update an External Backend
      operationId: updateExternalBackend
      parameters:
        - in: body
          name: body
          description: The information of the external backend new data
          required: true
          schema:
            $ref: '#/definitions/NewExternalBackend'
      responses:
        '200':
          description: Success update
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ExternalBackend'
          examples:
            application/json:
              data:
                id: 1
                project_canonical: project1
                credential_id: 1
                purpose: 'logs'
                configuration:
                  engine: AWSCloudWatchLogs
                  region: eu-west1
        '411':
          $ref: '#/responses/required_content_length_header'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization External Backends
      description: delete an External Backend
      operationId: deleteExternalBackend
      responses:
        '204':
          description: Organization Service Catalog Sources has been deleted
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/forms/config':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
    post:
      parameters:
        - in: body
          name: body
          description: The information of the filled forms for a new project.
          required: true
          schema:
            $ref: '#/definitions/FormInputs'
      tags:
        - Organization Forms
      description: Generate a set of configs based on the forms inputs
      operationId: createFormsConfig
      responses:
        '200':
          description: Set of config to create the project / push onto repositories
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
          examples:
            application/json:
              data:
                prod:
                  pipeline:
                    pipeline:
                      path: "pipeline/magento.yml"
                      content: "groups:\n\n- name: magento-((env))\n  jobs:\n  - magento-((env))-build\n  - full-deploy-front-magento-((env))\n  - app-deploy-front-magento-((env))\n  - terraform-plan-magento-((env))\n  - terraform-apply-magento-((env))\n  - magento-((env))-unittests\n  - magento-((env))-functional-tests\n\nresource_types:\n\n- name: terraform\n  type: docker-image\n  source:\n    repository: ljfranklin/terraform-resource\n\nresources:\n\n- name: terraform-magento-((env))\n  type: terraform\n  source:\n    storage:\n      bucket: ((terraform_storage_bucket_name))\n      bucket_path: ((terraform_storage_bucket_path))\n      region_name: ((aws_default_region))\n      access_key_id: \"((terraform_storage_access_key))\"\n      secret_access_key: \"((terraform_storage_secret_key))\"\n    vars:\n      access_key: ((aws_access_key))\n      secret_key: ((aws_secret_key))\n    env:\n      AWS_ACCESS_KEY_ID: ((aws_access_key))\n      AWS_DEFAULT_REGION: ((aws_default_region))\n      AWS_SECRET_ACCESS_KEY: ((aws_secret_key))\n"
                    variables:
                      path: "pipeline/variables.sample.yml"
                      destination: "pipeline/prod-variables.yml"
                      content: "env: prod\nmagento_deploy_bucket_name: magento-deploy\nmagento_deploy_bucket_object_path: /catalog-magento/prod/magento.tar.gz\nmagento_deploy_bucket_region: eu-west-1\nmagento_deploy_bucket_access_key: ...\nmagento_deploy_bucket_secret_access_key: ...\nterraform_storage_access_key: ...\nterraform_storage_secret_key: ...\nterraform_storage_bucket_name: magento-terraform-remote-state\nterraform_storage_bucket_path: magento/prod\naws_access_key: ...\naws_secret_key: ...\naws_default_region: eu-west-1\n\nansible_vault_password: ...\nbastion_url: admin@bastion.cycloid.io\nbastion_private_key_pair: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\ncatalog_magento_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\nmagento_git_repository: git@github.com:MyUser/code-magento.git\nmagento_git_branch: master\nmagento_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\n\nmagento_config_git_repository: git@github.com:MyUser/config-magento.git\nmagento_config_git_branch: master\nmagento_config_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n"
                  ansible:
                    magento:
                      path: "ansible/environments/front.yml.sample"
                      destination: "ansible/environments/prod-front.yml"
                      content: "# In this file you could override any variables present in default_front.yaml file\n\n# Usually you might want to override those variables :\n# magento_backend_frontname: admin\n# magento_admin_firstname: admin\n# magento_admin_lastname: admin\n# magento_admin_email: root@localhost.local\n# magento_admin_user: admin\n\n# magento_admin_password: 4Bigs3cr3t\n\n# In case you want to use vault to encrypt this password use the following command to generate the ansible vault var :\n# echo -n \"4Bigs3cr3t\" | ansible-vault encrypt_string --stdin-name=magento_admin_password\n#>> magento_admin_password: !vault |\n#>>           $ANSIBLE_VAULT;1.1;AES256\n#>>           37363232383334316164366337366430316535636130376134323366313565356365363662653539\n#>>           3161303331303565643831383839626263653362636466660a316530613935393464366536383839\n#>>           30303836326138306339623431356234333239343435623333343333623938633761636132303662\n#>>           3135343861383531660a393934316237363961663865393939313966373838653339326565353263\n#>>           6238\n"
                  terraform:
                    magento:
                      path: "terraform/magento.tf.sample"
                      destination: "terraform/magento/prod/magento.tf"
                      content: "variable \"rds_password\" {\n    default = \"ChangeMePls\"\n}\n\nmodule \"magento\" {\n  source = \"module-magento\"\n\n  env                      = \"prod\"\n  vpc_id                   = \"<vpc-id>\"\n  private_subnets_ids      = [\"private-subnets\"]\n  magento_ssl_cert         = \"<ssl-cert-arn>\"\n  bastion_sg_allow         = \"<bastion-sg>\"\n  public_subnets_ids       = [\"<public-subnets>\"]\n\n  rds_password             = \"${var.rds_password}\"\n\n  # project = \"magento\"\n\n  # FIXME optimized false : should be changes with the instance type ?\n\n  # rds_database         = \"magento\"\n  # rds_disk_size        = 10\n  # rds_multiaz          = false\n  # rds_storage_type     = \"gp2\"\n  # rds_subnet           = \"<rds-subnet-id>\"\n  # rds_type             = \"db.t2.small\"\n  # rds_username         = \"magento\"\n  # rds_engine           = \"\"mysql\"\n  # rds_engine_version   = \"5.7.16\"\n  # rds_backup_retention = 7\n  # rds_parameters       = \"\"\n\n  # cache_subnet                     = \"cache-subnet-id\"\n  # elasticache_type                 = \"cache.t2.micro\"\n  # elasticache_nodes                = \"1\n  # elasticache_parameter_group_name = \"default.redis3.2\"\n  # elasticache_engine               = \"redis\"\n  # elasticache_port                 = \"6379\"\n  # front_count           = \"1\"\n  # front_disk_size       = \"60\"\n  # front_disk_type       = \"gp2\"\n  # front_type            = \"t2.small\"\n\n}\n"
                dev:
                  pipeline:
                    pipeline:
                      path: "pipeline/magento.yml"
                      content: "groups:\n\n- name: magento-((env))\n  jobs:\n  - magento-((env))-build\n  - full-deploy-front-magento-((env))\n  - app-deploy-front-magento-((env))\n  - terraform-plan-magento-((env))\n  - terraform-apply-magento-((env))\n  - magento-((env))-unittests\n  - magento-((env))-functional-tests\n\nresource_types:\n\n- name: terraform\n  type: docker-image\n  source:\n    repository: ljfranklin/terraform-resource\n\nresources:\n\n- name: terraform-magento-((env))\n  type: terraform\n  source:\n    storage:\n      bucket: ((terraform_storage_bucket_name))\n      bucket_path: ((terraform_storage_bucket_path))\n      region_name: ((aws_default_region))\n      access_key_id: \"((terraform_storage_access_key))\"\n      secret_access_key: \"((terraform_storage_secret_key))\"\n    vars:\n      access_key: ((aws_access_key))\n      secret_key: ((aws_secret_key))\n    env:\n      AWS_ACCESS_KEY_ID: ((aws_access_key))\n      AWS_DEFAULT_REGION: ((aws_default_region))\n      AWS_SECRET_ACCESS_KEY: ((aws_secret_key))\n"
                    variables:
                      path: "pipeline/variables.sample.yml"
                      destination: "pipeline/prod-variables.yml"
                      content: "env: dev\nmagento_deploy_bucket_name: magento-deploy\nmagento_deploy_bucket_object_path: /catalog-magento/dev/magento.tar.gz\nmagento_deploy_bucket_region: eu-west-1\nmagento_deploy_bucket_access_key: ...\nmagento_deploy_bucket_secret_access_key: ...\nterraform_storage_access_key: ...\nterraform_storage_secret_key: ...\nterraform_storage_bucket_name: magento-terraform-remote-state\nterraform_storage_bucket_path: magento/dev\naws_access_key: ...\naws_secret_key: ...\naws_default_region: eu-west-1\n\nansible_vault_password: ...\nbastion_url: admin@bastion.cycloid.io\nbastion_private_key_pair: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\ncatalog_magento_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\nmagento_git_repository: git@github.com:MyUser/code-magento.git\nmagento_git_branch: master\nmagento_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\n\nmagento_config_git_repository: git@github.com:MyUser/config-magento.git\nmagento_config_git_branch: master\nmagento_config_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n"
                  ansible:
                    magento:
                      path: "ansible/environments/front.yml.sample"
                      destination: "ansible/environments/dev-front.yml"
                      content: "# In this file you could override any variables present in default_front.yaml file\n\n# Usually you might want to override those variables :\n# magento_backend_frontname: admin\n# magento_admin_firstname: admin\n# magento_admin_lastname: admin\n# magento_admin_email: root@localhost.local\n# magento_admin_user: admin\n\n# magento_admin_password: 4Bigs3cr3t\n\n# In case you want to use vault to encrypt this password use the following command to generate the ansible vault var :\n# echo -n \"4Bigs3cr3t\" | ansible-vault encrypt_string --stdin-name=magento_admin_password\n#>> magento_admin_password: !vault |\n#>>           $ANSIBLE_VAULT;1.1;AES256\n#>>           37363232383334316164366337366430316535636130376134323366313565356365363662653539\n#>>           3161303331303565643831383839626263653362636466660a316530613935393464366536383839\n#>>           30303836326138306339623431356234333239343435623333343333623938633761636132303662\n#>>           3135343861383531660a393934316237363961663865393939313966373838653339326565353263\n#>>           6238\n"
                  terraform:
                    magento:
                      path: "terraform/magento.tf.sample"
                      destination: "terraform/magento/dev/magento.tf"
                      content: "variable \"rds_password\" {\n    default = \"ChangeMePls\"\n}\n\nmodule \"magento\" {\n  source = \"module-magento\"\n\n  env                      = \"prod\"\n  vpc_id                   = \"<vpc-id>\"\n  private_subnets_ids      = [\"private-subnets\"]\n  magento_ssl_cert         = \"<ssl-cert-arn>\"\n  bastion_sg_allow         = \"<bastion-sg>\"\n  public_subnets_ids       = [\"<public-subnets>\"]\n\n  rds_password             = \"${var.rds_password}\"\n\n  # project = \"magento\"\n\n  # FIXME optimized false : should be changes with the instance type ?\n\n  # rds_database         = \"magento\"\n  # rds_disk_size        = 10\n  # rds_multiaz          = false\n  # rds_storage_type     = \"gp2\"\n  # rds_subnet           = \"<rds-subnet-id>\"\n  # rds_type             = \"db.t2.small\"\n  # rds_username         = \"magento\"\n  # rds_engine           = \"\"mysql\"\n  # rds_engine_version   = \"5.7.16\"\n  # rds_backup_retention = 7\n  # rds_parameters       = \"\"\n\n  # cache_subnet                     = \"cache-subnet-id\"\n  # elasticache_type                 = \"cache.t2.micro\"\n  # elasticache_nodes                = \"1\n  # elasticache_parameter_group_name = \"default.redis3.2\"\n  # elasticache_engine               = \"redis\"\n  # elasticache_port                 = \"6379\"\n  # front_count           = \"1\"\n  # front_disk_size       = \"60\"\n  # front_disk_type       = \"gp2\"\n  # front_type            = \"t2.small\"\n\n}\n"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'

  '/organizations/{organization_canonical}/forms/validate':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    post:
      parameters:
        - in: body
          name: body
          description: The content of the forms file to be validated.
          required: true
          schema:
            $ref: '#/definitions/FormsValidation'
      tags:
        - Organization Forms
      description: Validate a forms file definition
      operationId: validateFormsFile
      responses:
        '200':
          description: The result of validating the provided configuration
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/FormsValidationResult'
          examples:
            application/json:
              data:
                errors:
                  - "resource 'aws_elb.front'"
                  - "resource 'aws_elb.front'"
                  - "resource 'aws_elb.front'"
                  - "resource 'aws_elb.front'"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/buckets':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of S3 buckets of the running AWS infrastructure and
        associated with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSBuckets
      responses:
        '200':
          description: >-
            The list of AWS S3 buckets which matches the scope specified by the
            filter.
          schema:
            type: object
            description: >-
              Although this response contains a collection of items, it doesn't
              have pagination because the AWS SDK, to request the S3 Buckets
              resources, doesn't provide any pagination mechanism.
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceBucket'
          examples:
            application/json:
              data:
                - CreationDate: '2017-03-29T05:15:27Z'
                  Name: config-bucket-785324424875
                  Tags: []
                - CreationDate: '2017-03-29T01:12:21Z'
                  Name: data-some-log-dbm
                  Tags:
                    - Key: client
                      Value: Cycloid
                - CreationDate: '2017-03-29T10:28:14Z'
                  Name: dev-sdk.web.fr
                  Tags: []
                - CreationDate: '2017-06-19T14:57:15Z'
                  Name: marianorajoy.es
                  Tags:
                    - Key: owner
                      Value: Mariano Rajoy
                - CreationDate: '2017-03-29T18:01:25Z'
                  Name: dtrump.com
                  Tags: []
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/aws_infrastructure_resource_query'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the number of resources classified by types, of the running AWS
        infrastructure of the organization and associated AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization and/or a set of type of resource.
      operationId: getOrgRunningInfraAWS
      responses:
        '200':
          description: >-
            The number of resources classifed per type which maches the scope
            specified by the filter.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/AWSInfrastructureResourcesAggregation'
          examples:
            application/json:
              data:
                instances:
                  total_amount: 94875
                vpcs:
                  total_amount: 98
                images:
                  total_amount: 6
                security_groups:
                  total_amount: 9
                subnets:
                  total_amount: 31
                volumes:
                  total_amount: 45
                snapshots:
                  total_amount: 786
                load_balancers_v2:
                  total_amount: 4
                db_instances:
                  total_amount: 34
                buckets:
                  total_amount: 10
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/db_instances':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/aws_next_token'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of RDS DB instnaces of the running AWS infrastructure and
        associated with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSDBInstances
      responses:
        '200':
          description: >-
            The list of AWS RDS DB Instances which matches the scope specified
            by the filter.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceDBInstance'
              pagination:
                $ref: '#/definitions/PaginationAWS'
          examples:
            application/json:
              data:
                - AllocatedStorage: 50
                  AutoMinorVersionUpgrade: true
                  AvailabilityZone: eu-west-1b
                  BackupRetentionPeriod: 7
                  CACertificateIdentifier: rds-ca-2015
                  CharacterSetName:
                  CopyTagsToSnapshot: false
                  DBClusterIdentifier:
                  DBInstanceArn: arn:aws:rds:eu-west-1:785324424875:db:studiotour-rds-api-gateway-dev
                  DBInstanceClass: db.t2.small
                  DBInstanceIdentifier: studiotour-rds-api-gateway-dev
                  DBInstanceStatus: available
                  DBName: api_gateway_dev
                  DBParameterGroups:
                  - DBParameterGroupName: rds-optimized-postgresql-warnerbros-dev
                    ParameterApplyStatus: in-sync
                  DBSecurityGroups:
                  DBSubnetGroup:
                    DBSubnetGroupArn:
                    DBSubnetGroupDescription: subnet-rds-warnerbros-dev
                    DBSubnetGroupName: subnet-rds-warnerbros-dev
                    SubnetGroupStatus: Complete
                    Subnets:
                    - SubnetAvailabilityZone:
                        Name: eu-west-1b
                      SubnetIdentifier: subnet-1ee9cf68
                      SubnetStatus: Active
                    - SubnetAvailabilityZone:
                        Name: eu-west-1c
                      SubnetIdentifier: subnet-5ccca204
                      SubnetStatus: Active
                    - SubnetAvailabilityZone:
                        Name: eu-west-1a
                      SubnetIdentifier: subnet-53614d37
                      SubnetStatus: Active
                    VpcId: vpc-257d2d41
                  DbInstancePort: 0
                  DbiResourceId: db-LLW4DT3OHVULRQ4GLZWSJ3MOVQ
                  DomainMemberships:
                  EnabledCloudwatchLogsExports:
                  Endpoint:
                    Address: studiotour-rds-api-gateway-dev.cwniakpxsi80.eu-west-1.rds.amazonaws.com
                    HostedZoneId: Z29XKXDKYMONMX
                    Port: 5432
                  Engine: postgres
                  EngineVersion: 9.4.7
                  EnhancedMonitoringResourceArn:
                  IAMDatabaseAuthenticationEnabled: false
                  InstanceCreateTime: '2017-12-05T18:21:34.311Z'
                  Iops:
                  KmsKeyId:
                  LatestRestorableTime: '2018-02-06T11:40:39Z'
                  LicenseModel: postgresql-license
                  MasterUsername: studiotour
                  MonitoringInterval: 0
                  MonitoringRoleArn:
                  MultiAZ: false
                  OptionGroupMemberships:
                  - OptionGroupName: default:postgres-9-4
                    Status: in-sync
                  PendingModifiedValues:
                    AllocatedStorage:
                    BackupRetentionPeriod:
                    CACertificateIdentifier:
                    DBInstanceClass:
                    DBInstanceIdentifier:
                    DBSubnetGroupName:
                    EngineVersion:
                    Iops:
                    LicenseModel:
                    MasterUserPassword:
                    MultiAZ:
                    PendingCloudwatchLogsExports:
                    Port:
                    StorageType:
                  PerformanceInsightsEnabled: false
                  PerformanceInsightsKMSKeyId:
                  PreferredBackupWindow: 02:00-04:00
                  PreferredMaintenanceWindow: tue:06:00-tue:07:00
                  PromotionTier:
                  PubliclyAccessible: false
                  ReadReplicaDBClusterIdentifiers:
                  ReadReplicaDBInstanceIdentifiers:
                  ReadReplicaSourceDBInstanceIdentifier:
                  SecondaryAvailabilityZone:
                  StatusInfos:
                  StorageEncrypted: false
                  StorageType: gp2
                  TdeCredentialArn:
                  Timezone:
                  VpcSecurityGroups:
                  - Status: active
                    VpcSecurityGroupId: sg-64d29802
                  Tags: []
              pagination:
                next: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/elasticache_clusters':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/aws_next_token'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of Elasticache clusters of the running AWS infrastructure
        and associated with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSElasticacheClusters
      responses:
        '200':
          description: >-
            The list of AWS elasticache clusters which matches the scope
            specified by the filter.

          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceElasticacheCluster'
              pagination:
                $ref: '#/definitions/PaginationAWS'
          examples:
            application/json:
              data:
                - AtRestEncryptionEnabled: false
                  AuthTokenEnabled: false
                  AutoMinorVersionUpgrade: true
                  CacheClusterCreateTime: '2015-11-23T11:24:24.677Z'
                  CacheClusterId: cache0
                  CacheClusterStatus: available
                  CacheNodeType: cache.t2.micro
                  CacheNodes:
                  CacheParameterGroup:
                    CacheNodeIdsToReboot:
                    CacheParameterGroupName: default.redis2.8
                    ParameterApplyStatus: in-sync
                  CacheSecurityGroups:
                  CacheSubnetGroupName: warnerbros-cache0-eu-we1
                  ClientDownloadLandingPage: 'https://console.aws.amazon.com/elasticache/home#client-download:'
                  ConfigurationEndpoint:
                  Engine: redis
                  EngineVersion: 2.8.23
                  NotificationConfiguration:
                  NumCacheNodes: 1
                  PendingModifiedValues:
                    CacheNodeIdsToRemove:
                    CacheNodeType:
                    EngineVersion:
                    NumCacheNodes:
                  PreferredAvailabilityZone: eu-west-1a
                  PreferredMaintenanceWindow: tue:06:00-tue:07:00
                  ReplicationGroupId:
                  SecurityGroups:
                  - SecurityGroupId: sg-fff37b9b
                    Status: active
                  SnapshotRetentionLimit:
                  SnapshotWindow:
                  TransitEncryptionEnabled: false
                  Tags:
                  - Key: project
                    Value: website
                  - Key: client
                    Value: cycloid
                  - Key: env
                    Value: prod
                  - Key: role
                    Value: cache
              pagination:
                next: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/images':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of images of the running AWS infrastructure and associated
        with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSImages
      responses:
        '200':
          description: >-
            The list of AWS images which matches the scope specified by the
            filter.
          schema:
            type: object
            description: >-
              Although this response contains a collection of items, it doesn't
              have pagination because the AWS SDK, to request the images
              resources, doesn't provide any pagination mechanism.
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceImage'
          examples:
            application/json:
              data:
                - Architecture: x86_64
                  BlockDeviceMappings:
                  - DeviceName: "/dev/xvda"
                    Ebs:
                      DeleteOnTermination: true
                      Encrypted: false
                      Iops:
                      KmsKeyId:
                      SnapshotId: snap-e978d105
                      VolumeSize: 8
                      VolumeType: standard
                    NoDevice:
                    VirtualName:
                  CreationDate: '2016-05-24T21:14:11.000Z'
                  Description: hashicorp vault
                  EnaSupport:
                  Hypervisor: xen
                  ImageId: ami-01d94872
                  ImageLocation: 661913936052/vault
                  ImageOwnerAlias:
                  ImageType: machine
                  KernelId:
                  Name: vault
                  OwnerId: '661913936052'
                  Platform:
                  ProductCodes:
                  Public: false
                  RamdiskId:
                  RootDeviceName: "/dev/xvda"
                  RootDeviceType: ebs
                  SriovNetSupport:
                  State: available
                  StateReason:
                  Tags: []
                  VirtualizationType: hvm
                - Architecture: x86_64
                  BlockDeviceMappings:
                  - DeviceName: "/dev/xvda"
                    Ebs:
                      DeleteOnTermination: true
                      Encrypted: false
                      Iops:
                      KmsKeyId:
                      SnapshotId: snap-0d4d246f98692cab9
                      VolumeSize: 8
                      VolumeType: gp2
                    NoDevice:
                    VirtualName:
                  CreationDate: '2017-09-15T17:45:50.000Z'
                  Description:
                  EnaSupport:
                  Hypervisor: xen
                  ImageId: ami-34995b4d
                  ImageLocation: 661913936052/youdeploy_pipeline_demo 1505497225
                  ImageOwnerAlias:
                  ImageType: machine
                  KernelId:
                  Name: youdeploy_pipeline_demo 1505497225
                  OwnerId: '661913936052'
                  Platform:
                  ProductCodes:
                  Public: false
                  RamdiskId:
                  RootDeviceName: "/dev/xvda"
                  RootDeviceType: ebs
                  SriovNetSupport: simple
                  State: available
                  StateReason:
                  Tags:
                  - Key: client
                    Value: cycloid
                  - Key: env
                    Value: demo
                  - Key: Name
                    Value: demo-pipeline-1505497225
                  - Key: role
                    Value: front
                  - Key: project
                    Value: demo-website
                  VirtualizationType: hvm
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/instances':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/aws_next_token'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of instances of the running AWS infrastructure and associated
        with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSInstances
      responses:
        '200':
          description: >-
            The list of AWS instances which matches the scope specified by the
            filter.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceInstance'
              pagination:
                $ref: '#/definitions/PaginationAWS'
          examples:
            application/json:
              data:
                - AmiLaunchIndex: 0
                  Architecture: x86_64
                  BlockDeviceMappings:
                  - DeviceName: "/dev/xvda"
                    Ebs:
                      AttachTime: '2016-09-02T08:07:12Z'
                      DeleteOnTermination: true
                      Status: attached
                      VolumeId: vol-c888994f
                  ClientToken: ''
                  EbsOptimized: false
                  ElasticGpuAssociations:
                  EnaSupport:
                  Hypervisor: xen
                  IamInstanceProfile:
                    Arn: arn:aws:iam::661913936052:instance-profile/profile-front-website-prod
                    Id: AIPAJFKQFTYM7K77E2SWU
                  ImageId: ami-e079f893
                  InstanceId: i-2000dcad
                  InstanceLifecycle:
                  InstanceType: t2.micro
                  KernelId:
                  KeyName: cycloid
                  LaunchTime: '2016-09-19T07:11:18Z'
                  Monitoring:
                    State: disabled
                  NetworkInterfaces:
                  - Association:
                      IpOwnerId: amazon
                      PublicDnsName: ec2-54-194-186-145.eu-west-1.compute.amazonaws.com
                      PublicIp: 54.194.186.145
                    Attachment:
                      AttachTime: '2016-09-02T08:07:11Z'
                      AttachmentId: eni-attach-10d509cf
                      DeleteOnTermination: true
                      DeviceIndex: 0
                      Status: attached
                    Description: ''
                    Groups:
                    - GroupId: sg-64565003
                      GroupName: website-front-prod
                    - GroupId: sg-3543334e
                      GroupName: allow_metrics
                    - GroupId: sg-c1db70a6
                      GroupName: allow_bastion
                    Ipv6Addresses:
                    MacAddress: 06:9a:1a:77:6c:db
                    NetworkInterfaceId: eni-b1f859fd
                    OwnerId: '661913936052'
                    PrivateDnsName: ip-10-42-2-4.eu-west-1.compute.internal
                    PrivateIpAddress: 10.42.2.4
                    PrivateIpAddresses:
                    - Association:
                        IpOwnerId: amazon
                        PublicDnsName: ec2-54-194-186-145.eu-west-1.compute.amazonaws.com
                        PublicIp: 54.194.186.145
                      Primary: true
                      PrivateDnsName: ip-10-42-2-4.eu-west-1.compute.internal
                      PrivateIpAddress: 10.42.2.4
                    SourceDestCheck: true
                    Status: in-use
                    SubnetId: subnet-6b5a8f1d
                    VpcId: vpc-21fb3e45
                  Placement:
                    Affinity:
                    AvailabilityZone: eu-west-1b
                    GroupName: ''
                    HostId:
                    SpreadDomain:
                    Tenancy: default
                  Platform:
                  PrivateDnsName: ip-10-42-2-4.eu-west-1.compute.internal
                  PrivateIpAddress: 10.42.2.4
                  ProductCodes:
                  PublicDnsName: ec2-54-194-186-145.eu-west-1.compute.amazonaws.com
                  PublicIpAddress: 54.194.186.145
                  RamdiskId:
                  RootDeviceName: "/dev/xvda"
                  RootDeviceType: ebs
                  SecurityGroups:
                  - GroupId: sg-64565003
                    GroupName: website-front-prod
                  - GroupId: sg-3543334e
                    GroupName: allow_metrics
                  - GroupId: sg-c1db70a6
                    GroupName: allow_bastion
                  SourceDestCheck: true
                  SpotInstanceRequestId:
                  SriovNetSupport:
                  State:
                    Code: 16
                    Name: running
                  StateReason:
                    Code: Client.UserInitiatedShutdown
                    Message: 'Client.UserInitiatedShutdown: User initiated shutdown'
                  StateTransitionReason: ''
                  SubnetId: subnet-6b5a8f1d
                  Tags:
                  - Key: project
                    Value: website
                  - Key: client
                    Value: cycloid
                  - Key: Name
                    Value: CYCLOID-WEBSITE-FRONT1-EU-WE1-PROD
                  - Key: env
                    Value: prod
                  - Key: role
                    Value: front
                  VirtualizationType: hvm
                  VpcId: vpc-21fb3e45
              pagination:
                next: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/load_balancers_v1':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/aws_next_token'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of load balancers (ELB) of the running AWS
        infrastructure and associated with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSLoadBalancersV1
      responses:
        '200':
          description: >-
            The list of AWS load balancers (ELB) which matches the scope
            specified by the filter.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceLoadBalancerV1'
              pagination:
                $ref: '#/definitions/PaginationAWS'
          examples:
            application/json:
              data:
                - AvailabilityZones:
                  - eu-west-1b
                  - eu-west-1c
                  - eu-west-1a
                  BackendServerDescriptions:
                  CanonicalHostedZoneName: WEBSITE-FRONT-PROD-1823870670.eu-west-1.elb.amazonaws.com
                  CanonicalHostedZoneNameID: Z32O12XQLNTSW2
                  CreatedTime: '2016-09-02T08:07:35.52Z'
                  DNSName: WEBSITE-FRONT-PROD-1823870670.eu-west-1.elb.amazonaws.com
                  HealthCheck:
                    HealthyThreshold: 2
                    Interval: 30
                    Target: HTTP:80/
                    Timeout: 20
                    UnhealthyThreshold: 2
                  Instances:
                  - InstanceId: i-2000dcad
                  - InstanceId: i-911e05af
                  ListenerDescriptions:
                  - Listener:
                      InstancePort: 80
                      InstanceProtocol: HTTP
                      LoadBalancerPort: 80
                      Protocol: HTTP
                      SSLCertificateId:
                    PolicyNames:
                  - Listener:
                      InstancePort: 80
                      InstanceProtocol: HTTP
                      LoadBalancerPort: 443
                      Protocol: HTTPS
                      SSLCertificateId: arn:aws:iam::661913936052:server-certificate/cloudfront/cycloid-2018
                    PolicyNames:
                    - website-front-prod
                    - ELBSecurityPolicy-2016-08
                  LoadBalancerName: WEBSITE-FRONT-PROD
                  Policies:
                    AppCookieStickinessPolicies:
                    LBCookieStickinessPolicies:
                    - CookieExpirationPeriod: 3600
                      PolicyName: website-front-prod
                    OtherPolicies:
                    - ELBSecurityPolicy-2016-08
                  Scheme: internet-facing
                  SecurityGroups:
                  - sg-9c494ffb
                  SourceSecurityGroup:
                    GroupName: website-elb-front-prod
                    OwnerAlias: '661913936052'
                  Subnets:
                  - subnet-550fac31
                  - subnet-6b5a8f1d
                  - subnet-b95dbde1
                  VPCId: vpc-21fb3e45
                  Tags:
                  - Key: client
                    Value: cycloid
                - AvailabilityZones:
                  - eu-west-1b
                  - eu-west-1c
                  - eu-west-1a
                  BackendServerDescriptions:
                  CanonicalHostedZoneName: WEBSITE-FRONT-PREPROD-1528600560.eu-west-1.elb.amazonaws.com
                  CanonicalHostedZoneNameID: Z32O12XQLNTSW2
                  CreatedTime: '2016-09-02T08:07:35.91Z'
                  DNSName: WEBSITE-FRONT-PREPROD-1528600560.eu-west-1.elb.amazonaws.com
                  HealthCheck:
                    HealthyThreshold: 2
                    Interval: 30
                    Target: HTTP:80/
                    Timeout: 20
                    UnhealthyThreshold: 2
                  Instances:
                  - InstanceId: i-ab00dc26
                  - InstanceId: i-9ec9a815
                  ListenerDescriptions:
                  - Listener:
                      InstancePort: 80
                      InstanceProtocol: HTTP
                      LoadBalancerPort: 80
                      Protocol: HTTP
                      SSLCertificateId:
                    PolicyNames:
                  - Listener:
                      InstancePort: 80
                      InstanceProtocol: HTTP
                      LoadBalancerPort: 443
                      Protocol: HTTPS
                      SSLCertificateId: arn:aws:iam::661913936052:server-certificate/cloudfront/cycloid-2018
                    PolicyNames:
                    - website-front-preprod
                    - ELBSecurityPolicy-2016-08
                  LoadBalancerName: WEBSITE-FRONT-PREPROD
                  Policies:
                    AppCookieStickinessPolicies:
                    LBCookieStickinessPolicies:
                    - CookieExpirationPeriod: 3600
                      PolicyName: AWSConsole-LBCookieStickinessPolicy-WEBSITE-FRONT-PREPROD-1473338142315
                    - CookieExpirationPeriod: 3600
                      PolicyName: AWSConsole-LBCookieStickinessPolicy-WEBSITE-FRONT-PREPROD-1473337367977
                    - CookieExpirationPeriod: 3600
                      PolicyName: website-front-preprod
                    - CookieExpirationPeriod: 3600
                      PolicyName: AWSConsole-LBCookieStickinessPolicy-WEBSITE-FRONT-PREPROD-1473337375883
                    OtherPolicies:
                    - ELBSecurityPolicy-2016-08
                  Scheme: internet-facing
                  SecurityGroups:
                  - sg-9b494ffc
                  SourceSecurityGroup:
                    GroupName: website-elb-front-preprod
                    OwnerAlias: '661913936052'
                  Subnets:
                  - subnet-550fac31
                  - subnet-6b5a8f1d
                  - subnet-b95dbde1
                  VPCId: vpc-21fb3e45
                  Tags: []
              pagination:
                next: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/load_balancers_v2':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/aws_next_token'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of load balancers (ELB v2 or a.k.a ALB)  of the running
        AWS infrastructure and associated with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSLoadBalancersV2
      responses:
        '200':
          description: >-
            The list of AWS load balancers (ELB v2 or a.k.a ALB) which matches
            the scope specified by the filter.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceLoadBalancerV2'
              pagination:
                $ref: '#/definitions/PaginationAWS'
          examples:
            application/json:
              data:
                - AvailabilityZones:
                  - LoadBalancerAddresses:
                    SubnetId: subnet-225f3155
                    ZoneName: eu-west-1b
                  - LoadBalancerAddresses:
                    SubnetId: subnet-74f1712d
                    ZoneName: eu-west-1c
                  - LoadBalancerAddresses:
                    SubnetId: subnet-cd793fa8
                    ZoneName: eu-west-1a
                  CanonicalHostedZoneId: Z32O12XQLNTSW2
                  CreatedTime: '2016-12-14T15:32:58.83Z'
                  DNSName: alb-studiotour-front-prex-1430105063.eu-west-1.elb.amazonaws.com
                  IpAddressType: ipv4
                  LoadBalancerArn: arn:aws:elasticloadbalancing:eu-west-1:785324424875:loadbalancer/app/alb-studiotour-front-prex/f81f78ed3ec382cf
                  LoadBalancerName: alb-studiotour-front-prex
                  Scheme: internet-facing
                  SecurityGroups:
                  - sg-4c10e028
                  State:
                    Code: active
                    Reason:
                  Type: application
                  VpcId: vpc-315ed454
                  Tags: []
                - AvailabilityZones:
                  - LoadBalancerAddresses:
                    SubnetId: subnet-3ba8a072
                    ZoneName: eu-west-1b
                  - LoadBalancerAddresses:
                    SubnetId: subnet-45d1d622
                    ZoneName: eu-west-1a
                  - LoadBalancerAddresses:
                    SubnetId: subnet-6b034030
                    ZoneName: eu-west-1c
                  CanonicalHostedZoneId: Z32O12XQLNTSW2
                  CreatedTime: '2017-12-19T09:12:39.84Z'
                  DNSName: studiotour-apicache-staging-1022167638.eu-west-1.elb.amazonaws.com
                  IpAddressType: ipv4
                  LoadBalancerArn: arn:aws:elasticloadbalancing:eu-west-1:785324424875:loadbalancer/app/studiotour-apicache-staging/f6404ce290fc3434
                  LoadBalancerName: studiotour-apicache-staging
                  Scheme: internet-facing
                  SecurityGroups:
                  - sg-02510079
                  State:
                    Code: active
                    Reason:
                  Type: application
                  VpcId: vpc-d7d3cdb0
                  Tags:
                  - Key: client
                    Value: cycloid
                - AvailabilityZones:
                  - LoadBalancerAddresses:
                    SubnetId: subnet-1fe9cf69
                    ZoneName: eu-west-1b
                  - LoadBalancerAddresses:
                    SubnetId: subnet-5e614d3a
                    ZoneName: eu-west-1a
                  - LoadBalancerAddresses:
                    SubnetId: subnet-5ecca206
                    ZoneName: eu-west-1c
                  CanonicalHostedZoneId: Z32O12XQLNTSW2
                  CreatedTime: '2017-12-19T17:08:25.2Z'
                  DNSName: studiotour-apicache-dev-845432836.eu-west-1.elb.amazonaws.com
                  IpAddressType: ipv4
                  LoadBalancerArn: arn:aws:elasticloadbalancing:eu-west-1:785324424875:loadbalancer/app/studiotour-apicache-dev/9f76887ef888cf4a
                  LoadBalancerName: studiotour-apicache-dev
                  Scheme: internet-facing
                  SecurityGroups:
                  - sg-3980d042
                  State:
                    Code: active
                    Reason:
                  Type: application
                  VpcId: vpc-257d2d41
                  Tags: []
              pagination:
                next: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/security_groups':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/aws_next_token'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of security groups of the running AWS infrastructure and
        associated with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSSecurityGroups
      responses:
        '200':
          description: >-
            The list of AWS security groups which matches the scope specified
            by the filter.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceSecurityGroup'
              pagination:
                $ref: '#/definitions/PaginationAWS'
          examples:
            application/json:
              data:
                - Description: Allow metrics server to collect metrics
                  GroupId: sg-35c7b54e
                  GroupName: test_allow_metrics
                  IpPermissions:
                  - FromPort: 9100
                    IpProtocol: tcp
                    IpRanges:
                    Ipv6Ranges:
                    PrefixListIds:
                    ToPort: 9100
                    UserIdGroupPairs:
                    - Description:
                      GroupId: sg-cada71ad
                      GroupName:
                      PeeringStatus: active
                      UserId: '661913936052'
                      VpcId: vpc-21fb3e45
                      VpcPeeringConnectionId: pcx-ab75ccc2
                  IpPermissionsEgress:
                  - FromPort:
                    IpProtocol: "-1"
                    IpRanges:
                    - CidrIp: 0.0.0.0/0
                      Description:
                    Ipv6Ranges:
                    PrefixListIds:
                    ToPort:
                    UserIdGroupPairs:
                  OwnerId: '661913936052'
                  Tags:
                  - Key: project
                    Value: infra
                  - Key: Name
                    Value: allow-metrics
                  - Key: client
                    Value: cycloid
                  VpcId: vpc-0296ad66
              pagination:
                next: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/snapshots':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/aws_next_token'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of snapshots of the running AWS infrastructure and associated
        with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSSnapshots
      responses:
        '200':
          description: >-
            The list of AWS snapshots which matches the scope specified by the
            filter.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceSnapshot'
              pagination:
                $ref: '#/definitions/PaginationAWS'
          examples:
            application/json:
              data:
                - DataEncryptionKeyId:
                  Description: Created by CreateImage(i-7c6ea6bc) for ami-67affc14 from vol-fadc527c
                  Encrypted: false
                  KmsKeyId:
                  OwnerAlias:
                  OwnerId: '661913936052'
                  Progress: 100%
                  SnapshotId: snap-f4c73492
                  StartTime: '2016-11-17T16:17:18Z'
                  State: completed
                  StateMessage:
                  Tags: []
                  VolumeId: vol-fadc527c
                  VolumeSize: 8
                - DataEncryptionKeyId:
                  Description: Created by CreateImage(i-78a845ee) for ami-9d5a09ee from vol-73d82bc3
                  Encrypted: false
                  KmsKeyId:
                  OwnerAlias:
                  OwnerId: '661913936052'
                  Progress: 100%
                  SnapshotId: snap-94f92ff2
                  StartTime: '2016-11-16T16:46:39Z'
                  State: completed
                  StateMessage:
                  Tags: []
                  VolumeId: vol-73d82bc3
                  VolumeSize: 8
              pagination:
                next: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/subnets':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of subnets of the running AWS infrastructure and associated
        with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSSubnets
      responses:
        '200':
          description: >-
            The list of AWS subnets instances which matches the scope specified
            by the filter.
          schema:
            type: object
            description: >-
              Although this response contains a collection of items, it doesn't
              have pagination because the AWS SDK, to request the subnets
              resources, doesn't provide any pagination mechanism.
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceSubnet'
          examples:
            application/json:
              data:
                - AssignIpv6AddressOnCreation: false
                  AvailabilityZone: eu-west-1b
                  AvailableIpAddressCount: 251
                  CidrBlock: 10.1.3.0/24
                  DefaultForAz: false
                  Ipv6CidrBlockAssociationSet:
                  MapPublicIpOnLaunch: false
                  State: available
                  SubnetId: subnet-373f3241
                  Tags:
                  - Key: client
                    Value: cycloid
                  - Key: Name
                    Value: private-subnet-eu-west-1b
                  VpcId: vpc-0296ad66
                - AssignIpv6AddressOnCreation: false
                  AvailabilityZone: eu-west-1a
                  AvailableIpAddressCount: 251
                  CidrBlock: 10.1.1.0/24
                  DefaultForAz: false
                  Ipv6CidrBlockAssociationSet:
                  MapPublicIpOnLaunch: false
                  State: available
                  SubnetId: subnet-6e131c0a
                  Tags:
                  - Key: client
                    Value: cycloid
                  - Key: Name
                    Value: private-subnet-eu-west-1a
                  VpcId: vpc-0296ad66
                - AssignIpv6AddressOnCreation: false
                  AvailabilityZone: eu-west-1a
                  AvailableIpAddressCount: 251
                  CidrBlock: 10.2.1.0/24
                  DefaultForAz: false
                  Ipv6CidrBlockAssociationSet:
                  MapPublicIpOnLaunch: false
                  State: available
                  SubnetId: subnet-76131c12
                  Tags:
                  - Key: client
                    Value: cycloid
                  - Key: Name
                    Value: private-subnet-eu-west-1a
                  VpcId: vpc-0c96ad68
                - AssignIpv6AddressOnCreation: false
                  AvailabilityZone: eu-west-1c
                  AvailableIpAddressCount: 251
                  CidrBlock: 10.42.4.0/24
                  DefaultForAz: false
                  Ipv6CidrBlockAssociationSet:
                  MapPublicIpOnLaunch: true
                  State: available
                  SubnetId: subnet-b95dbde1
                  Tags:
                  - Key: client
                    Value: cycloid
                  - Key: Name
                    Value: public-subnet-eu-west-1c
                  VpcId: vpc-21fb3e45
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/volumes':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/aws_next_token'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of volumes of the running AWS infrastructure and associated
        with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSVolumes
      responses:
        '200':
          description: >-
            The list of AWS volumes which matches the scope specified by the
            filter.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceVolume'
              pagination:
                $ref: '#/definitions/PaginationAWS'
          examples:
            application/json:
              data:
                - Attachments:
                  - AttachTime: '2017-04-26T09:31:12Z'
                    DeleteOnTermination: false
                    Device: "/dev/xvdf"
                    InstanceId: i-02e0848c23c9cf89d
                    State: attached
                    VolumeId: vol-0e976363ad5f4f523
                  AvailabilityZone: eu-west-1c
                  CreateTime: '2017-04-26T09:30:51.516Z'
                  Encrypted: false
                  Iops:
                  KmsKeyId:
                  Size: 10
                  SnapshotId: ''
                  State: in-use
                  Tags:
                  - Key: Name
                    Value: cycloid-kubernetes-etcd2-eu-we1-prod
                  VolumeId: vol-0e976363ad5f4f523
                  VolumeType: standard
                - Attachments:
                  - AttachTime: '2016-09-02T08:07:12Z'
                    DeleteOnTermination: true
                    Device: "/dev/xvda"
                    InstanceId: i-2000dcad
                    State: attached
                    VolumeId: vol-c888994f
                  AvailabilityZone: eu-west-1b
                  CreateTime: '2016-09-02T08:07:12.162Z'
                  Encrypted: false
                  Iops:
                  KmsKeyId:
                  Size: 10
                  SnapshotId: snap-de88bcce
                  State: in-use
                  Tags: []
                  VolumeId: vol-c888994f
                  VolumeType: standard
                - Attachments:
                  - AttachTime: '2016-09-02T08:07:12Z'
                    DeleteOnTermination: true
                    Device: "/dev/xvda"
                    InstanceId: i-ab00dc26
                    State: attached
                    VolumeId: vol-01889986
                  AvailabilityZone: eu-west-1b
                  CreateTime: '2016-09-02T08:07:12.887Z'
                  Encrypted: false
                  Iops:
                  KmsKeyId:
                  Size: 10
                  SnapshotId: snap-de88bcce
                  State: in-use
                  Tags: []
                  VolumeId: vol-01889986
                  VolumeType: standard
              pagination:
                next: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/infrastructures/aws/vpcs':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/credential_id_query'
        - $ref: '#/parameters/project_canonical_query'
        - $ref: '#/parameters/aws_tags'
      tags:
        - Organization Infrastructure
      deprecated: true
      description: >-
        Get the list of VPCs of the running AWS infrastructure and associated
        with the AWS account (credential).
        The parameters allow to select the scope of the request to one project
        of the organization.
      operationId: getOrgRunningInfraAWSVPCs
      responses:
        '200':
          description: >-
            The list of AWS VPCs which matches the scope specified by the
            filter.
          schema:
            description: >-
              Although this response contains a collection of items, it doesn't
              have pagination because the AWS SDK, to request the VPCs resources,
              doesn't provide any pagination mechanism.
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/AWSInfrastructureResourceVPC'
          examples:
            application/json:
              data:
                - CidrBlock: 172.31.0.0/16
                  CidrBlockAssociationSet:
                  - AssociationId: vpc-cidr-assoc-5bd62d32
                    CidrBlock: 172.31.0.0/16
                    CidrBlockState:
                      State: associated
                      StatusMessage:
                  DhcpOptionsId: dopt-2e748c47
                  InstanceTenancy: default
                  Ipv6CidrBlockAssociationSet:
                  IsDefault: true
                  State: available
                  Tags: []
                  VpcId: vpc-462bd42f
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/invitations/{verification_token}':
    parameters:
      - $ref: '#/parameters/verification_token'
    get:
      tags:
        - Organization invitations
      description: Get the email address used for the pending invitation
      operationId: getPendingInvitation
      security: []
      responses:
        '200':
          description: The email address used for the pending invitation
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/PendingInvite'
          examples:
            application/json:
              data:
                email: user@user.com
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/environment_canonical'
    get:
      tags:
        - Organization Logs
      description: >-
        Get the list of sources configured for the specified project's
        environment of the organization.
      operationId: getProjEnvLogSources
      responses:
        '200':
          description: The list of sources related to the project's environment.
          schema:
            type: object
            description: The list of log sources.
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/LogSource'
          examples:
            application/json:
              data:
                - id: 'access.log'
                - id: 'exception.log'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/logs/sources/{log_source_id}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/environment_canonical'
      - $ref: '#/parameters/log_source_id'
    get:
      parameters:
        - $ref: '#/parameters/timestamp_range_begin_query'
        - $ref: '#/parameters/timestamp_range_end_query'
        - $ref: '#/parameters/raw_query'
      tags:
        - Organization Logs
      description: >-
        Get log's entries information  of the specified log stream stream which
        is associated to the project's environment of the specified organization.
        The log's entries to request can be filtered using the unix timestamp
        ranges and/or the query as follow
        - When unix timestamps are defined, they are converted to the specific
          query language used by the configured underlying log system (e.g AWS
          Cloud Watch, ElasticSearch, etc.) and appended to the query value
          respecting the syntax but not checking the content of the query, which
          means that if the whole query must be enclosed by curly brackets hence
          the query value is enclosed on them, the time range filter will be
          added inside not just appended at the end, because otherwise it would
          cause wrong syntax; on the other hand, not checking the content means
          that if the query contains a timerange filter, the whole query will
          contain both and the result will be the one returned by on the
          underlying log system, being an error or not.
        - When no time range are defined, then the query is used as it has been
          send, there is not modification on the query to send to the underlying
          log system, hence the result will be the one returned by it.
        - If none of the filters (timestamp range and query) are sent, then
          a 422 status code will be responded.
        - Some constraints are established by the underlying log system, so
          depending which one has been configured some parameters may be
          required or not.
      operationId: getProjEnvLogEntries
      responses:
        '200':
          description: >-
            The list of log's entries which are comprehended by the begin and
            end timestamps and are selected by the optional query.
          schema:
            type: object
            description: The list of log lines
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/LogSourceEntry'
          examples:
            application/json:
              data:
                - timestamp: "0123456789"
                  host: 'theowlhost'
                  message: '178.154.171.21 - - [21/Sep/2017:02:51:22 +0200] "GET /1663-large_default/tienda-de-campana-basica-para-2-personas.jpg HTTP/1.0" 302 773 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)"'
                - timestamp: "0123456795"
                  host: 'mymon'
                  message: '141.8.132.28 - - [21/Sep/2017:02:51:27 +0200] "GET /1663-large_default/tienda-de-campana-basica-para-2-personas.jpg/ HTTP/1.0" 302 731 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)"'
                - timestamp: "0123456800"
                  host: 'theowlhost'
                  message: '46.229.168.65 - - [21/Sep/2017:02:51:28 +0200] "GET /mosquitera-enrollable-lateral.html HTTP/1.0" 200 25313 "-" "Mozilla/5.0 (compatible; SemrushBot/1.2~bl; +http://www.semrush.com/bot.html)"'
                - timestamp: "0123456805"
                  host: 'mymon'
                  message: '141.10.132.56 - - [21/Sep/2017:02:51:56 +0200] "GET /1663-large_default/tienda-de-campana-basica-para-2-personas.jpg/ HTTP/1.0" 302 731 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)"'
                - timestamp: "0123456810"
                  host: 'burrowing'
                  message: '46.229.168.65 - - [21/Sep/2017:02:52:03 +0200] "GET /mosquitera-enrollable-lateral.html HTTP/1.0" 200 25313 "-" "Mozilla/5.0 (compatible; SemrushBot/1.2~bl; +http://www.semrush.com/bot.html)"'
                - timestamp: "0123456823"
                  host: 'theowlhost'
                  message: '141.10.132.56 - - [21/Sep/2017:02:52:23 +0200] "GET /1663-large_default/tienda-de-campana-basica-para-2-personas.jpg/ HTTP/1.0" 302 731 "-" "Mozilla/5.0 (compatible; YandexBot/3.0; +http://yandex.com/bots)"'
                - timestamp: "0123456834"
                  host: 'elf'
                  message: '123.229.145.65 - - [21/Sep/2017:02:52:49 +0200] "GET /mosquitera-enrollable-lateral.html HTTP/1.0" 200 25313 "-" "Mozilla/5.0 (compatible; SemrushBot/1.2~bl; +http://www.semrush.com/bot.html)"'
                - timestamp: "0123456834"
                  host: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaelf'
                  message: '123.229.145.65 - - [21/Sep/2017:02:52:49 +0200] "GET /mosquitera-enrollable-lateral.html HTTP/1.0" 200 25313 "-" "Mozilla/5.0 (compatible; SemrushBot/1.2~bl; +http://www.semrush.com/bot.html)"'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/members':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
        - in: query
          name: user_given_name
          type: string
          description: Search by the user's given name
        - in: query
          name: user_family_name
          type: string
          description: Search by the user's family name
        - in: query
          name: role_name
          type: string
          description: Search by the role's name
        - in: query
          name: user_canonical
          type: string
          description: Search by the user canonical
        - in: query
          name: user_created_at
          type: string
          format: date-time
          description: Search by user creation date
        - in: query
          name: member_created_at
          type: string
          format: date-time
          description: Search by member joining date
        - $ref: '#/parameters/order_by_query'
      tags:
        - Organization members
      description: Get the members of an organization.
      operationId: getOrgMembers
      responses:
        '200':
          description: List of the members of the organization.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/MemberOrg'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - username: user-1
                  id: 1
                  given_name: Mariano
                  family_name: Jimenez
                  email: mariano.jimenez@fakeemail.com
                  picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                  created_at: 1503225026
                  role:
                    id: 3
                    name: developer
                    description: A developer of the team
                    policies:
                      - id: 21
                        code: 'team:read'
                        entities: []
                        description: Grant the access to read the teams of an organization
                      - id: 42
                        code: 'member:read'
                        entities: []
                        description: Grant the access to read the members
                      - id: 60
                        code: 'project:read'
                        entities: []
                        description: Grant the access to projects
                - username: user2
                  id: 1
                  given_name: Jordi
                  family_name: Capdevila
                  email: jordi.capdevila@fakeemail.com
                  picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                  created_at: 1503281026
                  role:
                    id: 2
                    name: project manager
                    description: A project manager
                    policies:
                      - id: 21
                        code: 'team:read'
                        entities: []
                        description: Grant the access to read the teams of an organization
                      - id: 22
                        code: 'team:edit'
                        entities: []
                        description: Grant the access to edit teams
                      - id: 60
                        code: 'project:read'
                        entities: []
                        description: Grant the access to projects
                      - id: 61
                        code: 'project:create'
                        entities: []
                        description: >-
                          Grant the access to create a project in the
                          organization
                      - id: 62
                        code: 'project:edit'
                        entities: []
                        description: Grant the access to edit projects
                - username: user-3
                  id: 1
                  given_name: Ivan
                  family_name: Drago
                  email: ivan.drago@fakeemail.com
                  picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                  created_at: 1502225026
                  role:
                    id: 3
                    name: developer
                    description: A developer of the team
                    policies:
                      - id: 21
                        code: 'team:read'
                        entities: []
                        description: Grant the access to read the teams of an organization
                      - id: 42
                        code: 'member:read'
                        entities: []
                        description: Grant the access to read the members
                      - id: 60
                        code: 'project:read'
                        entities: []
                        description: Grant the access to projects
              pagination:
                index: 1
                size: 10
                total: 3
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/members-invitations':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    put:
      tags:
        - Organization members
      description: Invite a user to be a member of the organization.
      operationId: inviteUserToOrgMember
      parameters:
        - in: body
          name: body
          description: The user's member invitation.
          required: true
          schema:
            $ref: '#/definitions/NewMemberInvitation'
      responses:
        '204':
          description: >-
            The user has been invited to be a member of the organization. The
            verification is pending.
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/members/{username}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/username'
    get:
      tags:
        - Organization members
      description: Get the information of a member of the organization.
      operationId: getOrgMember
      responses:
        '200':
          description: The information of the member of the organization.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/MemberOrg'
          examples:
            application/json:
              data:
                id: 1
                username: user2
                given_name: Jordi
                family_name: Capdevila
                email: jordi.capdevila@fakeemail.com
                picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                created_at: 1503281026
                role:
                  id: 2
                  name: project manager
                  description: A project manager
                  policies:
                    - id: 21
                      code: 'team:read'
                      entities: []
                      description: Grant the access to read the teams of an organization
                    - id: 22
                      code: 'team:edit'
                      entities: []
                      description: Grant the access to edit teams
                    - id: 60
                      code: 'project:read'
                      entities: []
                      description: Grant the access to projects
                    - id: 61
                      code: 'project:create'
                      entities: []
                      description: Grant the access to create a project in the organization
                    - id: 62
                      code: 'project:edit'
                      entities: []
                      description: Grant the access to edit projects
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Organization members
      description: Update member of the organization.
      operationId: updateOrgMember
      parameters:
        - in: body
          name: body
          description: The member information to be updated.
          required: true
          schema:
            $ref: '#/definitions/MemberAssignation'
      responses:
        '200':
          description: The information of the member of the organization.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/MemberOrg'
          examples:
            application/json:
              data:
                id: 1
                username: user2
                given_name: Jordi
                family_name: Capdevila
                email: jordi.capdevila@fakeemail.com
                picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                created_at: 1503281026
                role:
                  id: 2
                  name: project manager
                  description: A project manager
                  policies:
                    - id: 21
                      code: 'team:read'
                      entities: []
                      description: Grant the access to read the teams of an organization
                    - id: 22
                      code: 'team:edit'
                      entities: []
                      description: Grant the access to edit teams
                    - id: 60
                      code: 'project:read'
                      entities: []
                      description: Grant the access to projects
                    - id: 61
                      code: 'project:create'
                      entities: []
                      description: Grant the access to create a project in the organization
                    - id: 62
                      code: 'project:edit'
                      entities: []
                      description: Grant the access to edit projects
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization members
      description: Remove a member of the organization.
      operationId: removeOrgMember
      responses:
        '204':
          description: Member has been removed.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/pipelines':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization pipelines
      description: Get all the pipelines that the authenticated user has access to.
      operationId: getPipelines
      responses:
        '200':
          description: List of all the pipelines which authenticated user has access to.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Pipeline'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - id: 154
                  name: approval-resource
                  paused: true
                  public: false
                  groups: []
                  team_name: cycloid-products
                  environment: dev
                  use_case: "approval-of-resources"
                  project:
                    id: 5
                    canonical: "proj-1"
                    name: "project1"
                    created_at: 1500135021
                    updated_at: 1500135021
                    service_catalog_ref: "cycloidio:stack-magento"
                - id: 196
                  name: youdeploy-frontend
                  paused: false
                  public: false
                  environment: dev
                  use_case: "frontend"
                  groups:
                    - name: pull-requests
                      jobs:
                        - pr-code-validate
                      resources: []
                    - name: preprod
                      jobs:
                        - preprod-code-validate
                        - preprod-build-deploy
                      resources: []
                  team_name: cycloid-products
                  project:
                    id: 5
                    canonical: "proj-1"
                    name: "project1"
                    created_at: 1500135021
                    updated_at: 1500135021
                    service_catalog_ref: "cycloidio:stack-magento"
                - id: 252
                  name: ci-youdeploy-http-api
                  use_case: "ci-cd-pipelines"
                  environment: dev
                  paused: false
                  public: false
                  groups:
                    - name: all
                      jobs:
                        - code-validation-develop
                        - code-validation-pull-requests
                      resources: []
                    - name: develop
                      jobs:
                        - code-validation-develop
                      resources: []
                    - name: pull-requests
                      jobs:
                        - code-validation-pull-requests
                      resources: []
                  team_name: cycloid-products
                  project:
                    id: 5
                    canonical: "proj-1"
                    name: "project1"
                    created_at: 1500135021
                    updated_at: 1500135021
                    service_catalog_ref: "cycloidio:stack-magento"
              pagination:
                index: 1
                size: 10
                total: 5
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/pipelines/{inpath_pipeline_name}/diff':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/pipeline_name'
    put:
      parameters:
        - in: body
          name: body
          description: The pipeline configuration
          required: true
          schema:
            $ref: '#/definitions/UpdatePipeline'
      tags:
        - Organization pipelines
      description: The diff between the provided pipeline configuration and the pipeline from the given name.
      operationId: diffPipeline
      responses:
        '200':
          description: The diff between the provided pipeline configuration and the existing pipeline has been done.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/PipelineDiffs'
          examples:
            application/json:
              data:
                jobs:
                - name: foo
                  label: job
                  status: added
                  diff:
                  - delta_type: "+"
                    line: "- terraform-plan-api"
                groups:
                - name: bar
                  label: group
                  status: removed
                  diff:
                  - delta_type: "-"
                    line: "- test-develop"
                resources:
                - name: bli
                  label: resource
                  status: changed
                  diff:
                  - delta_type: "-"
                    line: "  - key: foo"
                  - delta_type: "+"
                    line: "  - key: bar"
                resource_types:
                - name: glop
                  label: resource type
                  status: removed
                  diff:
                  - delta_type: "-"
                    line: "name: terraform"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization pipelines
      description: Get the pipelines that the authenticated user has access to.
      operationId: getProjectPipelines
      responses:
        '200':
          description: List of the pipelines which authenticated user has access to.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Pipeline'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - id: 154
                  name: approval-resource
                  paused: true
                  public: false
                  groups: []
                  team_name: cycloid-products
                  environment: dev
                  use_case: "approval-resource"
                  project:
                    id: 5
                    canonical: "proj-1"
                    name: "project1"
                    created_at: 1500135021
                    updated_at: 1500135021
                    service_catalog_ref: 'cycloidio:stack-magento'
                - id: 196
                  name: youdeploy-frontend
                  paused: false
                  public: false
                  environment: dev
                  use_case: "frontend-use-case"
                  groups:
                    - name: pull-requests
                      jobs:
                        - pr-code-validate
                      resources: []
                    - name: preprod
                      jobs:
                        - preprod-code-validate
                        - preprod-build-deploy
                      resources: []
                  team_name: cycloid-products
                  project:
                    id: 5
                    canonical: "proj-1"
                    name: "project1"
                    created_at: 1500135021
                    updated_at: 1500135021
                    service_catalog_ref: 'cycloidio:stack-magento'
                - id: 238
                  name: ci-website
                  paused: true
                  environment: dev
                  public: false
                  use_case: "website-use-case"
                  groups:
                    - name: all
                      jobs:
                        - code-validation-preprod
                        - build-container-preprod
                        - tag-container-image-preprod
                        - clean-container-preprod
                      resources: []
                    - name: preprod
                      jobs:
                        - code-validation-preprod
                        - build-container-preprod
                        - tag-container-image-preprod
                        - clean-container-preprod
                      resources: []
                  team_name: cycloid-products
                  project:
                    id: 5
                    canonical: "proj-1"
                    name: "project1"
                    created_at: 1500135021
                    updated_at: 1500135021
                    service_catalog_ref: 'cycloidio:stack-magento'
              pagination:
                index: 1
                size: 10
                total: 5
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      parameters:
        - in: body
          name: body
          description: The configuration of the pipeline to create.
          required: true
          schema:
            $ref: '#/definitions/NewPipeline'
      tags:
        - Organization pipelines
      description: Create a new pipeline
      operationId: createPipeline
      responses:
        '200':
          description: The information of the pipeline which has been created.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Pipeline'
          examples:
            application/json:
              data:
                id: 238
                name: ci-website
                paused: true
                public: false
                environment: dev
                use_case: "website-ci-use-case"
                groups:
                  - name: all
                    jobs:
                      - code-validation-preprod
                      - build-container-preprod
                      - tag-container-image-preprod
                      - clean-container-preprod
                    resources: []
                  - name: preprod
                    jobs:
                      - code-validation-preprod
                      - build-container-preprod
                      - tag-container-image-preprod
                      - clean-container-preprod
                    resources: []
                team_name: cycloid-products
                project:
                  id: 5
                  canonical: "proj-1"
                  name: "project1"
                  created_at: 1500135021
                  updated_at: 1500135021
                  service_catalog_ref: 'cycloidio:stack-magento'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
    get:
      tags:
        - Organization pipelines
      description: Get the configuration of the pipeline.
      operationId: getPipeline
      responses:
        '200':
          description: The information of the pipeline which has the specified name.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Pipeline'
          examples:
            application/json:
              data:
                id: 238
                name: ci-website
                paused: true
                public: false
                environment: dev
                use_case: "website-ci-use-case"
                groups:
                  - name: all
                    jobs:
                      - code-validation-preprod
                      - build-container-preprod
                      - tag-container-image-preprod
                      - clean-container-preprod
                    resources: []
                  - name: preprod
                    jobs:
                      - code-validation-preprod
                      - build-container-preprod
                      - tag-container-image-preprod
                      - clean-container-preprod
                    resources: []
                team_name: cycloid-products
                project:
                  id: 5
                  canonical: "proj-1"
                  name: "project1"
                  created_at: 1500135021
                  updated_at: 1500135021
                  service_catalog_ref: 'cycloidio:stack-magento'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization pipelines
      description: Delete the pipeline.
      operationId: deletePipeline
      responses:
        '204':
          description: Pipeline has been deleted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      parameters:
        - in: body
          name: body
          description: The pipeline configuration
          required: true
          schema:
            $ref: '#/definitions/UpdatePipeline'
      tags:
        - Organization pipelines
      description: Update the configuration of the given pipeline name.
      operationId: updatePipeline
      responses:
        '200':
          description: The information of the pipeline which has been updated.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Pipeline'
          examples:
            application/json:
              data:
                id: 238
                name: ci-website
                paused: true
                public: false
                environment: dev
                use_case: "website-ci-use-case"
                groups:
                  - name: all
                    jobs:
                      - code-validation-preprod
                      - build-container-preprod
                      - tag-container-image-preprod
                      - clean-container-preprod
                    resources: []
                  - name: preprod
                    jobs:
                      - code-validation-preprod
                      - build-container-preprod
                      - tag-container-image-preprod
                      - clean-container-preprod
                    resources: []
                team_name: cycloid-products
                project:
                  id: 5
                  canonical: "proj-1"
                  name: "project1"
                  created_at: 1500135021
                  updated_at: 1500135021
                  service_catalog_ref: 'cycloidio:stack-magento'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/policies':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Policies
      description: Get the list of Policies
      operationId: getPolicies
      responses:
        '200':
          description: List of Policies
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Policy'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - id: 1
                  code: 'organization:delete'
                  description: Grant the access to delete the organization
                - id: 2
                  code: 'organization:edit'
                  description: Grant the access to edit the organization
                - id: 20
                  code: 'team:create'
                  description: Grant the access to create teams
                - id: 21
                  code: 'team:read'
                  description: Grant the access to read the teams of an organization
                - id: 22
                  code: 'team:edit'
                  description: Grant the access to edit teams
                - id: 23
                  code: 'team:delete'
                  description: Grant the access to delete teams
                - id: 40
                  code: 'member:invite'
                  description: >-
                    Grant the access to invite members to join to the
                    organization
                - id: 41
                  code: 'member:remove'
                  description: Grant the access to remove members
                - id: 42
                  code: 'member:read'
                  description: Grant the access to read the members
                - id: 60
                  code: 'project:read'
                  entities: ["10", "32"]
                  description: Grant the access to projects
                - id: 61
                  code: 'project:create'
                  entities: []
                  description: Grant the access to create a project in the organization
                - id: 62
                  code: 'project:edit'
                  entities: []
                  description: Grant the access to edit projects
              pagination:
                index: 1
                size: 10
                total: 2
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds/{build_id}/abort':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
      - $ref: '#/parameters/build_id'
    put:
      tags:
        - Organization pipelines jobs build
      description: Abort a specific build.
      operationId: abortBuild
      responses:
        '204':
          description: The build has been aborted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
    get:
      tags:
        - Organization pipelines jobs build
      parameters:
        - $ref: '#/parameters/concourse_page_since'
        - $ref: '#/parameters/concourse_page_until'
        - $ref: '#/parameters/concourse_page_limit'
      description: Get the pipeline job's builds that the authenticated user has access to.
      operationId: getBuilds
      responses:
        '200':
          description: >-
            List the pipeline job's builds which authenticated user has access
            to.
          schema:
            type: object
            required:
              - data
              - pagination_concourse
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Build'
              pagination_concourse:
                $ref: '#/definitions/PaginationConcourse'
          examples:
            application/json:
              data:
                - id: 11406
                  team_name: cycloid-products
                  name: '82'
                  status: failed
                  job_name: build-container-preprod
                  api_url: /api/v1/builds/11406
                  pipeline_name: ci-website
                  start_time: 1504185240
                  end_time: 1504185344
                  reap_time: 0
                - id: 11404
                  team_name: cycloid-products
                  name: '81'
                  status: failed
                  job_name: build-container-preprod
                  api_url: /api/v1/builds/11404
                  pipeline_name: ci-website
                  start_time: 1504184979
                  end_time: 1504185078
                  reap_time: 0
                - id: 11402
                  team_name: cycloid-products
                  name: '80'
                  status: failed
                  job_name: build-container-preprod
                  api_url: /api/v1/builds/11402
                  pipeline_name: ci-website
                  start_time: 1504184038
                  end_time: 1504184140
                  reap_time: 0
              pagination_concourse:
                next:
                  since: 11402
                  until: 0
                  limit: 3
                previous:
                  since: 11508
                  until: 0
                  limit: 3
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organization pipelines jobs build
      description: Create a new build for the job
      operationId: createBuild
      responses:
        '200':
          description: Create a new build for the pipeline's job and returns its details
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Build'
          examples:
            application/json:
              data:
                id: 11406
                team_name: cycloid-products
                name: '82'
                status: failed
                job_name: build-container-preprod
                api_url: /api/v1/builds/11406
                pipeline_name: ci-website
                start_time: 1504185240
                end_time: 1504185344
                reap_time: 0
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds/{build_id}/events':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
      - $ref: '#/parameters/build_id'
    get:
      tags:
        - Organization pipelines jobs build
      description: Get the events of a build.
      operationId: getBuildEvents
      produces:
        - text/event-stream
        - application/json
      responses:
        '200':
          description: Stream is starting
          x-produces:
            - text/event-stream
          headers:
            Content-Type:
              type: string
              enum:
                - text/event-stream
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds/{build_id}/plan':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
      - $ref: '#/parameters/build_id'
    get:
      tags:
        - Organization pipelines jobs build
      description: Get the plan of the build.
      operationId: getBuildPlan
      responses:
        '200':
          description: The information of the build's plan which has the specified id.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/PublicPlan'
          examples:
            application/json:
              data:
                schema: exec.v2
                plan:
                  id: 59b6ed1d
                  do:
                    - id: 59b6ed1b
                      get:
                        type: git
                        name: concourse
                        resource: concourse
                        version:
                          ref: 37a827fb8056bfb88848823f49ae8efe9515e2ea
                    - id: 59b6ed1c
                      task:
                        name: build
                        privileged: false
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds/{build_id}/preparation':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
      - $ref: '#/parameters/build_id'
    get:
      tags:
        - Organization pipelines jobs build
      description: Get the preparation of the Build.
      operationId: getBuildPreparation
      produces:
        - application/json
      responses:
        '200':
          description: Return the Preparation
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Preparation'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds/{build_id}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
      - $ref: '#/parameters/build_id'
    get:
      tags:
        - Organization pipelines jobs build
      description: Get the information of the build.
      operationId: getBuild
      responses:
        '200':
          description: The information of the build which has the specified id.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Build'
          examples:
            application/json:
              data:
                id: 11406
                team_name: cycloid-products
                name: '82'
                status: failed
                job_name: build-container-preprod
                api_url: /api/v1/builds/11406
                pipeline_name: ci-website
                start_time: 1504185240
                end_time: 1504185344
                reap_time: 0
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/builds/{build_id}/resources':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
      - $ref: '#/parameters/build_id'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization pipelines jobs build
      description: Get the resources of the build.
      operationId: getBuildResources
      responses:
        '200':
          description: The resources of the build's which has the specified id.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/BuildInputsOutputs'
          examples:
            application/json:
              data:
                inputs:
                  - name: git-website-preprod
                    resource: git-website-preprod
                    type: git
                    version:
                      ref: 59ecb8ec73d7c4ea4c3827440ed1429268cf4c94
                    metadata:
                      - name: commit
                        value: 59ecb8ec73d7c4ea4c3827440ed1429268cf4c94
                      - name: author
                        value: Adrien Jerphagnon
                      - name: author_date
                        value: '2017-07-19 15:23:46 +0200'
                      - name: committer
                        value: Adrien Jerphagnon
                      - name: committer_date
                        value: '2017-07-19 15:23:46 +0200'
                      - name: branch
                        value: master
                      - name: message
                        value: Up assets version
                    pipeline_id: 238
                    first_occurrence: true
                  - name: vault-preprod
                    resource: vault-preprod
                    type: vault
                    version:
                      date: '1500470493'
                    metadata: []
                    pipeline_id: 238
                    first_occurrence: true
                  - name: vault-preprod
                    resource: vault-preprod
                    type: vault
                    version:
                      date: '1500470521'
                    metadata: []
                    pipeline_id: 238
                    first_occurrence: true
                outputs:
                  - id: 0
                    name: "website preprod"
                    type: ''
                    metadata: []
                    resource: ecr-website-preprod
                    version:
                      digest: >-
                        sha256:58c226280d56dcfe5f7f1de2cce6f22eac36fa95ce8e1b9c604523c4a50d7401
                    enabled: false
                  - id: 0
                    name: "slack alert preprod"
                    type: ''
                    metadata: []
                    resource: slack-alert-preprod
                    version:
                      timestamp: '1500470978'
                    enabled: false
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/config':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
    get:
      tags:
        - Organization pipelines
      description: Get the YAML configuration of the pipeline.
      operationId: getPipelineConfig
      responses:
        200:
          description:
            This endpoint returns the config of the pipeline.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: string
          examples:
            application/json:
              data: "{\"resources\":[{\"name\":\"5m\",\"type\":\"time\",\"source\":{\"interval\":\"5m\"}}],\"jobs\":[{\"name\":\"job-hello-world\",\"public\":true,\"plan\":[{\"get\":\"5m\",\"trigger\":true},{\"task\":\"hello-world\",\"privileged\":true,\"config\":{\"platform\":\"linux\",\"image_resource\":{\"type\":\"docker-image\",\"source\":{\"repository\":\"busybox\"}},\"run\":{\"path\":\"echo\",\"args\":[\"hello world\"]}}}]}]}"
        403:
          $ref: '#/responses/not_enough_permissions'
        404:
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization pipelines jobs
      description: Get the jobs of the pipeline that the authenticated user has access to.
      operationId: getJobs
      responses:
        '200':
          description: List of the pipeline's jobs which authenticated user has access to.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Job'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - id: 1273
                  name: code-validation-preprod
                  paused: false
                  first_logged_build_id: 0
                  disable_manual_trigger: false
                  next_build:
                    id: 11214
                    team_name: ieijcu
                    name: some-build
                    status: running
                    api_url: /api/v1/builds/11408
                  finished_build:
                    id: 11405
                    team_name: cycloid-products
                    name: '33'
                    status: succeeded
                    job_name: code-validation-preprod
                    api_url: /api/v1/builds/11405
                    pipeline_name: ci-website
                    start_time: 1504185102
                    end_time: 1504185134
                    reap_time: 0
                  inputs:
                    - name: git-website-preprod
                      resource: git-website-preprod
                      passed: []
                      trigger: true
                      tags: []
                  outputs: []
                  groups:
                    - all
                    - preprod
                - id: 1274
                  name: build-container-preprod
                  paused: false
                  first_logged_build_id: 0
                  disable_manual_trigger: false
                  next_build:
                    id: 11214
                    team_name: ieijcu
                    name: some-build
                    status: running
                    api_url: /api/v1/builds/11408
                  finished_build:
                    id: 11406
                    team_name: cycloid-products
                    name: '82'
                    status: failed
                    job_name: build-container-preprod
                    api_url: /api/v1/builds/11406
                    pipeline_name: ci-website
                    start_time: 1504185240
                    end_time: 1504185344
                    reap_time: 0
                  inputs:
                    - name: git-website-preprod
                      resource: git-website-preprod
                      passed:
                        - code-validation-preprod
                      trigger: true
                      tags: []
                    - name: vault-preprod
                      resource: vault-preprod
                      passed: []
                      trigger: false
                      tags: []
                  outputs:
                    - name: slack-alert-preprod
                      resource: slack-alert-preprod
                    - name: slack-alert-preprod
                      resource: slack-alert-preprod
                    - name: ecr-website-preprod
                      resource: ecr-website-preprod
                  groups:
                    - all
                    - preprod
                - id: 1275
                  name: tag-container-image-preprod
                  paused: false
                  first_logged_build_id: 0
                  disable_manual_trigger: false
                  next_build:
                    id: 11214
                    team_name: ieijcu
                    name: some-build
                    status: running
                    api_url: /api/v1/builds/11408
                  finished_build:
                    id: 10793
                    team_name: cycloid-products
                    name: '16'
                    status: succeeded
                    job_name: tag-container-image-preprod
                    api_url: /api/v1/builds/10793
                    pipeline_name: ci-website
                    start_time: 1500471046
                    end_time: 1500471211
                    reap_time: 0
                  inputs:
                    - name: git-website-preprod
                      resource: git-website-preprod
                      passed:
                        - build-container-preprod
                      trigger: false
                      tags: []
                    - name: ecr-website-preprod
                      resource: ecr-website-preprod
                      passed:
                        - build-container-preprod
                      trigger: true
                      tags: []
                  outputs:
                    - name: ecr-website-preprod
                      resource: ecr-website-preprod
                  groups:
                    - all
                    - preprod
                - id: 1276
                  name: clean-container-preprod
                  paused: false
                  first_logged_build_id: 0
                  disable_manual_trigger: false
                  next_build:
                    id: 11214
                    team_name: ieijcu
                    name: some-build
                    status: running
                    api_url: /api/v1/builds/11408
                  finished_build:
                    id: 10794
                    team_name: cycloid-products
                    name: '13'
                    status: succeeded
                    job_name: clean-container-preprod
                    api_url: /api/v1/builds/10794
                    pipeline_name: ci-website
                    start_time: 1500471262
                    end_time: 1500471305
                    reap_time: 0
                  inputs:
                    - name: ecr-website-preprod
                      resource: ecr-website-preprod
                      passed:
                        - tag-container-image-preprod
                      trigger: true
                      tags: []
                  outputs: []
                  groups:
                    - all
                    - preprod
              pagination:
                index: 1
                size: 10
                total: 4
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/pause':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
    put:
      tags:
        - Organization pipelines jobs
      description: Pause a job
      operationId: pauseJob
      responses:
        '204':
          description: Job has been paused.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
    get:
      tags:
        - Organization pipelines jobs
      description: Get the information of the job.
      operationId: getJob
      responses:
        '200':
          description: The configuration of the job which has the specified name.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Job'
          examples:
            application/json:
              data:
                id: 1274
                name: build-container-preprod
                paused: false
                first_logged_build_id: 0
                disable_manual_trigger: false
                next_build:
                  id: 11214
                  team_name: ieijcu
                  name: some-build
                  status: running
                  api_url: /api/v1/builds/11408
                finished_build:
                  id: 11406
                  team_name: cycloid-products
                  name: '82'
                  status: failed
                  job_name: build-container-preprod
                  api_url: /api/v1/builds/11406
                  pipeline_name: ci-website
                  start_time: 1504185240
                  end_time: 1504185344
                  reap_time: 0
                inputs:
                  - name: git-website-preprod
                    resource: git-website-preprod
                    passed:
                      - code-validation-preprod
                    trigger: true
                    tags: []
                  - name: vault-preprod
                    resource: vault-preprod
                    passed: []
                    trigger: false
                    tags: []
                outputs:
                  - name: slack-alert-preprod
                    resource: slack-alert-preprod
                  - name: slack-alert-preprod
                    resource: slack-alert-preprod
                  - name: ecr-website-preprod
                    resource: ecr-website-preprod
                groups:
                  - all
                  - preprod
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/tasks/{step_name}/cache':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
      - $ref: '#/parameters/step_name'
    delete:
      parameters:
        - $ref: '#/parameters/cache_path_query'
      tags:
        - Organization pipelines jobs
      description: Clear task cache
      operationId: clearTaskCache
      responses:
        '200':
          description: Cache has been cleared.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ClearTaskCache'
          examples:
            application/json:
              data:
                caches_removed: 42
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/jobs/{job_name}/unpause':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/job_name'
    put:
      tags:
        - Organization pipelines jobs
      description: Unpause a job
      operationId: unpauseJob
      responses:
        '204':
          description: Job has been unpause.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/pause':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
    put:
      tags:
        - Organization pipelines
      description: Pause a pipeline
      operationId: pausePipeline
      responses:
        '204':
          description: Pipeline has been paused.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/rename':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/pipeline_name_query'
    put:
      tags:
        - Organization pipelines
      description: Rename a pipeline
      operationId: renamePipeline
      responses:
        '204':
          description: Pipeline has been renamed.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/check':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
    post:
      parameters:
        - in: body
          name: body
          description: Check for new version from the specified version.
          required: false
          schema:
            $ref: '#/definitions/CIVersion'
      tags:
        - Organization pipelines resources
      description: Trigger a check for a specified resource.
      operationId: checkResource
      responses:
        '200':
          description: The resource checked result.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ResourceCheck'
          examples:
            application/json:
              data:
                id: 42
                status: "docker-image"
                create_time: 1500135021
                start_time: 1500135021
                end_time: 1500135021
                check_error: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization pipelines resources
      description: Get the resources of the pipeline.
      operationId: getPipelineResources
      responses:
        '200':
          description: The resources of the pipeline's which has the specified name.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Resource'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - name: ecr-website-preprod
                  type: docker-image
                  groups: []
                  paused: false
                  failing_to_check: false
                  check_error: ''
                - name: git-website-preprod
                  type: git
                  groups: []
                  paused: false
                  failing_to_check: false
                  check_error: ''
                - name: vault-preprod
                  type: vault
                  groups: []
                  paused: false
                  failing_to_check: false
                  check_error: ''
                - name: slack-alert-preprod
                  type: slack-notification
                  groups: []
                  paused: false
                  failing_to_check: false
                  check_error: ''
              pagination:
                index: 1
                size: 10
                total: 4
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/pin_comment':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
    put:
      parameters:
        - in: body
          name: body
          description: Specify the comment to put on a pinned resource.
          required: true
          schema:
            $ref: '#/definitions/PinComment'
      tags:
        - Organization pipelines resources
      description: Set pin comment on a specified resource
      operationId: resourceSetPinComment
      responses:
        '204':
          description: Resource pin has been commented
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
    get:
      tags:
        - Organization pipelines resources
      description: Get a specific resource of the pipeline.
      operationId: getResource
      responses:
        '200':
          description: The resource of the pipeline's which has the specified name.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Resource'
          examples:
            application/json:
              data:
                name: ecr-website-preprod
                type: docker-image
                groups: []
                paused: false
                failing_to_check: false
                check_error: ''
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/unpin':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
    put:
      tags:
        - Organization pipelines resources
      description: Unpin a specified resource
      operationId: unpinResource
      responses:
        '204':
          description: Resource has been unpinned
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
      - $ref: '#/parameters/filter_version'
    get:
      tags:
        - Organization pipelines resources
      parameters:
        - $ref: '#/parameters/concourse_page_since'
        - $ref: '#/parameters/concourse_page_until'
        - $ref: '#/parameters/concourse_page_limit'
      description: Get versions of a pipeline's resource
      operationId: getResourceVersions
      responses:
        '200':
          description: Get versions of a specified resource.
          schema:
            type: object
            required:
              - data
              - pagination_concourse
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ResourceVersion'
              pagination_concourse:
                $ref: '#/definitions/PaginationConcourse'
          examples:
            application/json:
              data:
                - id: 45
                  type: time
                  resource: time-resource
                  enabled: true
                  version:
                    time: "2018-06-07T16:12:02.037357287Z"
                - id: 46
                  type: time
                  resource: time-resource
                  enabled: true
                  version:
                    time: "2018-06-07T16:13:02.037357287Z"
              pagination_concourse:
                next:
                  since: 11402
                  until: 0
                  limit: 3
                previous:
                  since: 11896
                  until: 0
                  limit: 3
        '422':
          $ref: '#/responses/unprocessable_entity'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/disable':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
      - $ref: '#/parameters/resource_version_id'
    put:
      tags:
        - Organization pipelines resources
      description: Disable a specified version of a resource
      operationId: disableResourceVersion
      responses:
        '204':
          description: Resource version have been disabled
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/enable':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
      - $ref: '#/parameters/resource_version_id'
    put:
      tags:
        - Organization pipelines resources
      description: Enable a specified version of a resource
      operationId: enableResourceVersion
      responses:
        '204':
          description: Resource version have been enabled
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/input_to':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
      - $ref: '#/parameters/resource_version_id'
    get:
      tags:
        - Organization pipelines resources
      description: Get builds that used a specified resource version as input.
      operationId: getBuildsWithVersionAsInput
      responses:
        '200':
          description: The resource of the pipeline's which has the specified name.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Build'
          examples:
            application/json:
              data:
                - id: 11406
                  team_name: cycloid-products
                  name: '82'
                  status: failed
                  job_name: build-container-preprod
                  api_url: /api/v1/builds/11406
                  pipeline_name: ci-website
                  start_time: 1504185240
                  end_time: 1504185344
                  reap_time: 0
                - id: 11404
                  team_name: cycloid-products
                  name: '81'
                  status: failed
                  job_name: build-container-preprod
                  api_url: /api/v1/builds/11404
                  pipeline_name: ci-website
                  start_time: 1504184979
                  end_time: 1504185078
                  reap_time: 0
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/output_of':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
      - $ref: '#/parameters/resource_version_id'
    get:
      tags:
        - Organization pipelines resources
      description: Get builds that used a specified resource version as output.
      operationId: getBuildsWithVersionAsOutput
      responses:
        '200':
          description: The resource of the pipeline's which has the specified name.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Build'
          examples:
            application/json:
              data:
                - id: 11406
                  team_name: cycloid-products
                  name: '82'
                  status: failed
                  job_name: build-container-preprod
                  api_url: /api/v1/builds/11406
                  pipeline_name: ci-website
                  start_time: 1504185240
                  end_time: 1504185344
                  reap_time: 0
                - id: 11404
                  team_name: cycloid-products
                  name: '81'
                  status: failed
                  job_name: build-container-preprod
                  api_url: /api/v1/builds/11404
                  pipeline_name: ci-website
                  start_time: 1504184979
                  end_time: 1504185078
                  reap_time: 0
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/resources/{resource_name}/versions/{resource_version_id}/pin':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
      - $ref: '#/parameters/resource_name'
      - $ref: '#/parameters/resource_version_id'
    put:
      tags:
        - Organization pipelines resources
      description: Pin a specified version of a resource
      operationId: pinResourceVersion
      responses:
        '204':
          description: Resource version has been pinned
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/unpause':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
    put:
      tags:
        - Organization pipelines
      description: Unpause a pipeline
      operationId: unpausePipeline
      responses:
        '204':
          description: Pipeline has been unpaused.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/pipelines/{inpath_pipeline_name}/variables':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/pipeline_name'
    get:
      tags:
        - Organization pipelines
      description: Get the YAML variables of the pipeline.
      operationId: getPipelineVariables
      responses:
        200:
          description:
            This endpoint returns the variables of the pipeline.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/PipelineVariables'
          examples:
            application/json:
              data:
                yaml_vars: "var1: some_var"
                has_saved_yaml_vars: true
        403:
          $ref: '#/responses/not_enough_permissions'
        404:
          $ref: '#/responses/not_found_entity_in_path'
        409:
          description: Project has no config repository configured
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/project_name_query'
        - $ref: '#/parameters/project_created_at_query'
        - $ref: '#/parameters/project_description_query'
        - $ref: '#/parameters/owner_query'
        - $ref: '#/parameters/order_by_query'
      tags:
        - Organization projects
      description: Get list of projects of the organization.
      operationId: getProjects
      responses:
        '200':
          description: List of the projects which the organization has.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ProjectsItem'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - canonical: proj-1
                  description: my-description1
                  id: 1
                  cloud_provider:
                    id: 4
                    canonical: 'aws'
                    abbreviation: 'AWS'
                    name: 'Amazon Web Services'
                    created_at: 1503225026
                    updated_at: 1503335026
                  owner:
                    username: user-1
                    id: 1
                    given_name: Mariano
                    family_name: Jimenez
                    email: mariano.jimenez@fakeemail.com
                    picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                    created_at: 1503225026
                    role:
                      id: 42
                      name: "standard role"
                      description: "this is the standard role"
                      policies:
                      - id: 1
                        code: "team:create"
                        description: "this is the policy"
                  environments:
                    - dev
                    - staging
                    - production
                  service_catalog_name: Magento Stack
                  service_catalog_ref: cycloidio:stack-magento
                  created_at: 1503225026
                  updated_at: 1503335026
                  name: Project 1
                - canonical: proj2
                  description: my-description2
                  id: 1
                  cloud_provider:
                    id: 2
                    canonical: 'google'
                    abbreviation: 'GCP'
                    name: 'Google Cloud Platform'
                    created_at: 1503225026
                    updated_at: 1503335026
                  environments:
                    - dev
                    - staging
                  service_catalog_name: Magento Stack 2
                  service_catalog_ref: cycloidio:stack-magento2
                  created_at: 1501131026
                  updated_at: 1503333026
                  name: Project 2
                - canonical: proj3
                  description: my-description3
                  id: 1
                  environments: []
                  service_catalog_name: Some other stack
                  service_catalog_ref: cycloidio:stack-something
                  created_at: 1500135021
                  updated_at: 1503332021
                  name: Project 3
                - canonical: proj-4
                  description: my-description4
                  id: 1
                  owner:
                    username: user-2
                    id: 10
                    given_name: Mariana
                    family_name: Jimenezo
                    email: mariana.jimenezo@fakeemail.com
                    picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                    created_at: 1503225026
                    role:
                      id: 42
                      name: "standard role"
                      description: "this is the standard role"
                      policies:
                      - id: 1
                        code: "team:create"
                        description: "this is the policy"
                  environments:
                    - dev
                    - staging
                    - production
                  service_catalog_name: Magento Stack 3
                  service_catalog_ref: cycloidio:stack-magento3
                  created_at: 1500035021
                  updated_at: 1502332021
                  name: Project 4
              pagination:
                index: 1
                size: 10
                total: 4
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organization projects
      description: Create a new project with envs and pipelines in the organization.
      operationId: createProject
      parameters:
        - in: body
          name: body
          description: The information of the project to create.
          required: true
          schema:
            $ref: '#/definitions/NewProject'
      responses:
        '200':
          description: >-
            Project created. The body contains the information of the new project
            of the organization.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Project'
          examples:
            application/json:
              data:
                id: 1
                canonical: proj3
                service_catalog_name: Magento Stack
                service_catalog_ref: cycloidio:stack-magento
                description: the-description
                created_at: 1500135021
                updated_at: 1503332021
                name: Project 3
                environments:
                  - dev
                  - staging
                  - prod
                cloud_provider:
                  id: 4
                  canonical: 'aws'
                  abbreviation: 'AWS'
                  name: 'Amazon Web Services'
                  created_at: 1503225026
                  updated_at: 1503335026
                owner:
                  username: user-1
                  id: 1
                  given_name: Mariano
                  family_name: Jimenez
                  email: mariano.jimenez@fakeemail.com
                  picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                  created_at: 1503225026
                  role:
                    id: 42
                    name: "standard role"
                    description: "this is the standard role"
                    policies:
                    - id: 1
                      code: "team:create"
                      description: "this is the policy"
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/environment_canonical'
    delete:
      tags:
        - Organization projects
      description: Delete a project environment of the organization, and the project itself if it's the last environment.
      operationId: deleteProjectEnvironment
      responses:
        '204':
          description: Project environment has been deleted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}/environments/{environment_canonical}/infrastructure':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
      - $ref: '#/parameters/environment_canonical'
    get:
      tags:
        - Organization Infrastructure
      description: >-
        Get the infrastructure of the Project on the environment
      operationId: getProjInfrastructure
      responses:
        '200':
          description: Get the Infrastructure View of the Project's environment
          schema:
            type: object
            description: The Infrastrucure from the Project's environment
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Infrastructure'
          examples:
            application/json:
              data:
                graph:
                  nodes:
                    - id: "UUID-node-1"
                      canonical: "aws_lb.front"
                      position: [0,0]
                      resource:
                        canonical: "aws_lb"
                        keywords: ["some","key"]
                        category: "some category"
                        image: 'http://via.placeholder.com/150x150'
                        description: "description of the resourse"
                        short_description: "resource"
                        is_node: true
                        is_edge: false
                    - id: "UUID-node-2"
                      canonical: "aws_instance.front"
                      position: [0,0]
                      resource:
                        canonical: "aws_instance"
                        keywords: ["some","key"]
                        category: "some category"
                        image: 'http://via.placeholder.com/150x150'
                        description: "description of the resourse"
                        short_description: "resource"
                        is_node: true
                        is_edge: false
                  edges:
                    - id: "UUID-edge-1"
                      source: "UUID-node-1"
                      target: "UUID-node-2"
                      canonicals:
                        - "aws_security_group.front"
                config:
                  resource:
                    aws_lb:
                      front:
                        access_logs.#: "1"
                        access_logs.0.bucket: ""
                        access_logs.0.enabled: "false"
                        access_logs.0.prefix: ""
                        arn: "arn:aws:elasticloadbalancing:eu-west-1:99999994:loadbalancer/app/repetto-front-prod/fa8c187e287baaf1"
                        arn_suffix: "app/repetto-front-prod/fa8c187e287baaf1"
                        dns_name: "repetto-front-prod-1356916011.eu-west-1.elb.amazonaws.com"
                        enable_deletion_protection: "false"
                        enable_http2: "true"
                        id: "arn:aws:elasticloadbalancing:eu-west-1:99999994:loadbalancer/app/repetto-front-prod/fa8c187e287baaf1"
                        idle_timeout: "600"
                        internal: "false"
                        ip_address_type: "ipv4"
                        load_balancer_type: "application"
                        name: "repetto-front-prod"
                        security_groups.#: "1"
                        security_groups.3982542233: "sg-815549fb"
                        subnet_mapping.#: "3"
                        subnet_mapping.1243641484.allocation_id: ""
                        subnet_mapping.1243641484.subnet_id: "subnet-e8f5368e"
                        subnet_mapping.1617803526.allocation_id: ""
                        subnet_mapping.1617803526.subnet_id: "subnet-4caca117"
                        subnet_mapping.707871693.allocation_id: ""
                        subnet_mapping.707871693.subnet_id: "subnet-08c11040"
                        subnets.#: "3"
                        subnets.1359096304: "subnet-08c11040"
                        subnets.3529352084: "subnet-4caca117"
                        subnets.4038704495: "subnet-e8f5368e"
                        tags.%: "6"
                        tags.Name: "repetto-repetto-front-eu-we1-prod"
                        tags.client: "repetto"
                        tags.cycloid.io: "true"
                        tags.env: "prod"
                        tags.project: "repetto"
                        tags.role: "front"
                        vpc_id: "vpc-5972c43f"
                        zone_id: "Z32O12XQLNTSW2"
                    aws_instance:
                      front:
                        ami: ami-0211a849817dcceca
                        arn: arn:aws:ec2:eu-west-1:99999992:instance/i-08ffccfdf54168280
                        associate_public_ip_address: false
                        availability_zone: eu-west-1a
                        cpu_core_count: 1
                        cpu_threads_per_core: 2
                        credit_specification:
                          - cpu_credits: unlimited
                        disable_api_termination: false
                        ebs_block_device: []
                        ebs_optimized: false
                        ephemeral_block_device: []
                        get_password_data: false
                        host_id:
                        iam_instance_profile: cycloid_profile-front-sample-magento-prod
                        id: i-08ffccfdf54168280
                        instance_initiated_shutdown_behavior:
                        instance_state: running
                        instance_type: t3.small
                        ipv6_address_count: 0
                        ipv6_addresses: []
                        key_name: cycloid
                        monitoring: false
                        network_interface: []
                        network_interface_id:
                        password_data: ''
                        placement_group: ''
                        primary_network_interface_id: eni-01eac7f767b723514
                        private_dns: ip-10-3-1-38.eu-west-1.compute.internal
                        private_ip: 10.3.1.38
                        public_dns: ''
                        public_ip: ''
                        root_block_device:
                          - delete_on_termination: true
                            encrypted: false
                            iops: 180
                            kms_key_id: ''
                            volume_id: vol-0a0da4a72f6548eb0
                            volume_size: 60
                            volume_type: gp2
                        security_groups: []
                        source_dest_check: true
                        subnet_id: subnet-7e131c1a
                        tags:
                          Name: sample-magento-front0-eu-we1-prod
                          bar: bla
                          client: cycloid
                          cycloid.io: 'true'
                          env: prod
                          foo: test
                          monitoring_discovery: 'false'
                          project: sample-magento
                          role: front
                        tenancy: default
                        timeouts:
                        user_data:
                        user_data_base64:
                        volume_tags:
                          Name: sample-magento-front0-eu-we1-prod
                          bar: bla
                          client: cycloid
                          cycloid.io: 'true'
                          env: prod
                          foo: test
                          monitoring_discovery: 'false'
                          project: sample-magento
                          role: front
                        vpc_security_group_ids:
                          - sg-0d6e0e07fbc6ec626
                          - sg-ddeee6bb
                    aws_security_group:
                      front:
                        cidr_blocks:
                          - "0.0.0.0/0"
                        description: ""
                        from_port: 443
                        id: "sgrule-3405156902"
                        ipv6_cidr_blocks: []
                        prefix_list_ids: []
                        protocol: "tcp"
                        security_group_id: "sg-0f4d72e0081ca0c09"
                        self: false
                        source_security_group_id: null
                        to_port: 443
                        type: "ingress"

        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/projects/{project_canonical}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/project_canonical'
    get:
      tags:
        - Organization projects
      description: Get a project of the organization.
      operationId: getProject
      responses:
        '200':
          description: >-
            The information of the project of the organization which has the
            specified ID.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Project'
          examples:
            application/json:
              data:
                id: 1
                canonical: proj2
                environments:
                  - dev
                  - staging
                service_catalog_ref: cycloidio:stack-magento
                created_at: 1501131026
                updated_at: 1503333026
                name: Project 2
                cloud_provider:
                  id: 4
                  canonical: 'aws'
                  abbreviation: 'AWS'
                  name: 'Amazon Web Services'
                  created_at: 1503225026
                  updated_at: 1503335026
                owner:
                  username: user-1
                  id: 1
                  given_name: Mariano
                  family_name: Jimenez
                  email: mariano.jimenez@fakeemail.com
                  picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                  created_at: 1503225026
                  role:
                    id: 42
                    name: "standard role"
                    description: "this is the standard role"
                    policies:
                    - id: 1
                      code: "team:read"
                      description: "this is the policy"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization projects
      description: Delete a project of the organization.
      operationId: deleteProject
      responses:
        '204':
          description: Project has been deleted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Organization projects
      description: >-
        Update the information of a project of the organization.
        If the project has some information on the fields which aren't required
        and they are not sent or set to their default vaules, which depend of their
        types, the information will be removed.
      operationId: updateProject
      parameters:
        - in: body
          name: body
          description: The information of the project to update.
          required: true
          schema:
            $ref: '#/definitions/UpdateProject'
      responses:
        '200':
          description: >-
            Project updated. The body contains information of the updated
            project.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Project'
          examples:
            application/json:
              data:
                id: 1
                canonical: proj-1
                cloud_provider:
                  id: 4
                  canonical: 'aws'
                  abbreviation: 'AWS'
                  name: 'Amazon Web Services'
                  created_at: 1503225026
                  updated_at: 1503335026
                owner:
                  username: user-1
                  id: 10
                  given_name: Mariano
                  family_name: Jimenez
                  email: mariano.jimenez@fakeemail.com
                  picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                  created_at: 1503225026
                  role:
                    id: 42
                    name: "standard role"
                    description: "this is the standard role"
                    policies:
                    - id: 1
                      code: "team:read"
                      description: "this is the policy"
                created_at: 1503225026
                updated_at: 1503335026
                name: Project 1
                environments:
                  - dev
                  - staging
                  - prod
                service_catalog_ref: cycloidio:stack-magento
                config_repository_id: 5
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/roles':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization Roles
      description: Get the list of roles available in the organization.
      operationId: getOrgRoles
      responses:
        '200':
          description: List of roles which are available in the organization.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Role'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - id: 1
                  name: owner
                  description: Organization owner
                  policies:
                    - id: 1
                      code: 'organization:delete'
                      entities: []
                      description: Grant the access to delete the organization
                    - id: 2
                      code: 'organization:edit'
                      entities: ["1", "2", "5"]
                      description: Grant the access to edit the organization
                    - id: 20
                      code: 'team:create'
                      entities: []
                      description: Grant the access to create teams
                    - id: 21
                      code: 'team:read'
                      entities: []
                      description: Grant the access to read the teams of an organization
                    - id: 22
                      code: 'team:edit'
                      entities: ["11", "12", "15"]
                      description: Grant the access to edit teams
                    - id: 23
                      code: 'team:delete'
                      entities: ["11", "12", "15"]
                      description: Grant the access to delete teams
                    - id: 40
                      code: 'member:invite'
                      entities: []
                      description: >-
                        Grant the access to invite members to join to the
                        organization
                    - id: 41
                      code: 'member:remove'
                      entities: []
                      description: Grant the access to remove members
                    - id: 42
                      code: 'member:read'
                      entities: []
                      description: Grant the access to read the members
                    - id: 60
                      code: 'project:read'
                      entities: []
                      description: Grant the access to projects
                    - id: 61
                      code: 'project:create'
                      entities: []
                      description: Grant the access to create a project in the organization
                    - id: 62
                      code: 'project:edit'
                      entities: []
                      description: Grant the access to edit projects
                    - id: 63
                      code: 'project:delete'
                      entities: []
                      description: Grant the access to delete projects
                - id: 2
                  name: project manager
                  description: A project manager
                  policies:
                    - id: 21
                      code: 'team:read'
                      entities: []
                      description: Grant the access to read the teams of an organization
                    - id: 22
                      code: 'team:edit'
                      entities: []
                      description: Grant the access to edit teams
                    - id: 60
                      code: 'project:read'
                      entities: ["11", "21", "51", "71"]
                      description: Grant the access to projects
                    - id: 61
                      code: 'project:create'
                      entities: []
                      description: Grant the access to create a project in the organization
                    - id: 62
                      code: 'project:edit'
                      entities: ["4", "6"]
                      description: Grant the access to edit projects
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      parameters:
        - in: body
          name: body
          description: The information of the organization's role to create.
          required: true
          schema:
            $ref: '#/definitions/NewRole'
      tags:
        - Organization Roles
      description: Create a new role available in the organization.
      operationId: createOrgRole
      responses:
        '200':
          description: New role created in the organization.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/NewRole'
          examples:
            application/json:
              data:
                name: newRole
                description: Organization new role
                policies:
                  - id: 1
                    entities: ["1", "2", "3"]
                    description: Grant the access to delete the organization
                  - id: 2
                    entities: []
                  - id: 3
                    entities: []
                  - id: 4
                    entities: []
                  - id: 5
                    entities: []
                  - id: 6
                    entities: ["4", "5", "7"]
                  - id: 7
                    entities: []
                  - id: 8
                    entities: []
                  - id: 9
                    entities: ["1", "2", "3", "4", "5", "6", "7"]
                  - id: 10
                    entities: ["23"]
                  - id: 11
                    entities: []
                  - id: 12
                    entities: []
                  - id: 13
                    entities: ["23"]
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/roles/{role_id}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/role_id'
    get:
      tags:
        - Organization Roles
      description: Get the role available in the organization with an ID.
      operationId: getOrgRole
      responses:
        '200':
          description: Role available in the organization with such ID.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Role'
          examples:
            application/json:
              data:
                id: 17
                name: existing
                description: Organization existing role
                policies:
                  - id: 1
                    code: 'organization:delete'
                    entities: ["42", "56"]
                    description: Grant the access to delete the organization
                  - id: 2
                    code: 'organization:edit'
                    entities: ["24"]
                    description: Grant the access to edit the organization
                  - id: 20
                    code: 'team:create'
                    entities: []
                    description: Grant the access to create teams
                  - id: 21
                    code: 'team:read'
                    entities: ["10", "12", "14", "15"]
                    description: Grant the access to read the teams of an organization
                  - id: 22
                    code: 'team:edit'
                    entities: []
                    description: Grant the access to edit teams
                  - id: 23
                    code: 'team:delete'
                    entities: []
                    description: Grant the access to delete teams
                  - id: 40
                    code: 'member:invite'
                    entities: []
                    description: >-
                      Grant the access to invite members to join to the
                      organization
                  - id: 41
                    code: 'member:remove'
                    entities: []
                    description: Grant the access to remove members
                  - id: 42
                    code: 'member:read'
                    entities: []
                    description: Grant the access to read the members
                  - id: 60
                    code: 'project:read'
                    entities: ["4", "15", "83"]
                    description: Grant the access to projects
                  - id: 61
                    code: 'project:create'
                    entities: []
                    description: Grant the access to create a project in the organization
                  - id: 62
                    code: 'project:edit'
                    entities: []
                    description: Grant the access to edit projects
                  - id: 63
                    code: 'project:delete'
                    entities: []
                    description: Grant the access to delete projects
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      parameters:
        - in: body
          name: body
          description: The information of the organization's role to update.
          required: true
          schema:
            $ref: '#/definitions/NewRole'
      tags:
        - Organization Roles
      description: Update an existing role in the organization.
      operationId: updateOrgRole
      responses:
        '200':
          description: Updated role belonging to the organization.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Role'
          examples:
            application/json:
              data:
                id: 42
                name: updatedRole

                description: Organization updated role
                policies:
                  - id: 10
                    code: 'organization:delete'
                    entities: ["1", "32", "54"]
                    description: Grant the access to delete the organization
                  - id: 20
                    code: 'organization:edit'
                    entities: ["1", "54"]
                    description: Grant the access to edit the organization
                  - id: 200
                    code: 'team:create'
                    entities: []
                    description: Grant the access to create teams
                  - id: 210
                    code: 'team:read'
                    entities: []
                    description: Grant the access to read the teams of an organization
                  - id: 220
                    code: 'team:edit'
                    entities: []
                    description: Grant the access to edit teams
                  - id: 230
                    code: 'team:delete'
                    entities: ["32", "12", "6"]
                    description: Grant the access to delete teams
                  - id: 600
                    code: 'project:read'
                    entities: []
                    description: Grant the access to projects
                  - id: 610
                    code: 'project:create'
                    entities: []
                    description: Grant the access to create a project in the organization
                  - id: 620
                    code: 'project:edit'
                    entities: []
                    description: Grant the access to edit projects
                  - id: 630
                    code: 'project:delete'
                    entities: []
                    description: Grant the access to delete projects
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization Roles
      description: Delete an existing role in the organization.
      operationId: deleteOrgRole
      responses:
        '204':
          description: Organization role has been deleted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/service_catalog_sources':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization Service Catalog Sources
      description: Return all the private service catalogs
      operationId: getServiceCatalogSources
      responses:
        '200':
          description: List of the private service catalogs.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ServiceCatalogSource'
          examples:
            application/json:
              data:
                - id: 1
                  name: My personal repo
                  url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                  credential_id: 1
                  created_at: 1503225026
                  updated_at: 1503335026
                  branch: "my-favourite-branch"
                  service_catalogs:
                    - id: 1
                      name: foo
                      canonical: stack-foo
                      author: Cycloid CI
                      description: CI sample
                      keywords:
                        - ci
                      ref: cycloid:stack-foo
                      service_catalog_source_id: 1
                      trusted: true
                - id: 2
                  name: My personal repo 2
                  url: "https://github.com/cycloid-community-catalog/stack-dummy.git"
                  created_at: 1503225026
                  updated_at: 1503335026
                  branch: "my-second-favourite-branch"
                  service_catalogs:
                    - id: 2
                      name: bar
                      canonical: stack-bar
                      author: Cycloid CI
                      description: CI sample
                      keywords:
                        - ci
                      ref: cycloid:stack-bar
                      service_catalog_source_id: 2
                      trusted: true
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organization Service Catalog Sources
      parameters:
        - in: body
          name: body
          description: The information of the organization to create.
          required: true
          schema:
            $ref: '#/definitions/CreateServiceCatalogSource'
      description: Creates a Service catalog source
      operationId: createServiceCatalogSource
      responses:
        '200':
          description: Success creation
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ServiceCatalogSource'
          examples:
            application/json:
              data:
                id: 1
                name: My personal repo
                url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                credential_id: 1
                created_at: 1503225026
                updated_at: 1503335026
                branch: 'my-scs-branch'
                service_catalogs:
                  - id: 1
                    name: foo
                    canonical: stack-foo
                    author: Cycloid CI
                    description: CI sample
                    keywords:
                      - ci
                    ref: cycloid:stack-foo
                    service_catalog_source_id: 1
                    trusted: true
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_id}/refresh':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/service_catalog_source_id'
    post:
      tags:
        - Organization Service Catalog Sources
      description: Refresh a Service catalog source
      operationId: refreshServiceCatalogSource
      responses:
        '200':
          description: Success refresh
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ServiceCatalogSource'
          examples:
            application/json:
              data:
                id: 1
                name: My personal repo
                url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                credential_id: 1
                created_at: 1503225026
                updated_at: 1503335026
                branch: 'my-favourite-branch'
                service_catalogs:
                  created:
                    - id: 1
                      name: foo
                      canonical: stack-foo
                      author: Cycloid CI
                      description: CI sample
                      keywords:
                        - ci
                      ref: cycloid:stack-foo
                      service_catalog_source_id: 1
                      trusted: true
                  updated:
                    - id: 2
                      name: foo2
                      canonical: stack-foo2
                      author: Cycloid CI
                      description: CI sample
                      keywords:
                        - ci
                      ref: cycloid:stack-foo2
                      service_catalog_source_id: 1
                      trusted: true
                  deleted:
                    - id: 3
                      name: fo3
                      canonical: stack-foo3
                      author: Cycloid CI
                      description: CI sample
                      keywords:
                        - ci
                      ref: cycloid:stack-foo3
                      service_catalog_source_id: 1
                      trusted: true
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_id}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/service_catalog_source_id'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization Service Catalog Sources
      description: Return the Service Catalog Source
      operationId: getServiceCatalogSource
      responses:
        '200':
          description: Organization Service Catalog Sources.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ServiceCatalogSource'
          examples:
            application/json:
              data:
                id: 1
                name: My personal repo
                url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                created_at: 1503225026
                updated_at: 1503335026
                credential_id: 1
                branch: "my-scs-branch"
                service_catalogs:
                  - id: 1
                    name: foo
                    canonical: stack-foo
                    author: Cycloid CI
                    description: CI sample
                    keywords:
                      - ci
                    ref: cycloid:stack-foo
                    service_catalog_source_id: 1
                    trusted: true
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Organization Service Catalog Sources
      description: Update a Service catalog source
      operationId: updateServiceCatalogSource
      parameters:
        - in: body
          name: body
          description: The information of the organization to create.
          required: true
          schema:
            $ref: '#/definitions/UpdateServiceCatalogSource'
      responses:
        '200':
          description: Success update
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ServiceCatalogSource'
          examples:
            application/json:
              data:
                id: 1
                name: My personal repo
                url: 'git@github.com:cycloidio/youdeploy-http-api.git'
                credential_id: 1
                created_at: 1503225026
                updated_at: 1503335026
                branch: 'my-favourite-branch'
                service_catalogs:
                  created:
                    - id: 1
                      name: foo
                      canonical: stack-foo
                      author: Cycloid CI
                      description: CI sample
                      keywords:
                        - ci
                      ref: cycloid:stack-foo
                      service_catalog_source_id: 1
                      trusted: true
                  updated:
                    - id: 2
                      name: foo2
                      canonical: stack-foo2
                      author: Cycloid CI
                      description: CI sample
                      keywords:
                        - ci
                      ref: cycloid:stack-foo2
                      service_catalog_source_id: 1
                      trusted: true
                  deleted:
                    - id: 3
                      name: fo3
                      canonical: stack-foo3
                      author: Cycloid CI
                      description: CI sample
                      keywords:
                        - ci
                      ref: cycloid:stack-foo3
                      service_catalog_source_id: 1
                      trusted: true
        '411':
          $ref: '#/responses/required_content_length_header'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization Service Catalog Sources
      description: delete a Service catalog source
      operationId: deleteServiceCatalogSource
      responses:
        '204':
          description: Organization Service Catalog Sources has been deleted
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/service_catalog_sources/{service_catalog_source_id}/validate':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/service_catalog_source_id'
    post:
      tags:
        - Organization Service Catalog Sources
      description: Validate a Service catalog source
      operationId: validateServiceCatalogSource
      responses:
        '204':
          description: The SCS has been validated
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/teams':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/team_name_query'
        - $ref: '#/parameters/team_created_at_query'
        - $ref: '#/parameters/team_description_query'
        - $ref: '#/parameters/owner_query'
        - $ref: '#/parameters/order_by_query'
      tags:
        - Organization teams
      description: Get list of teams of the organization.
      operationId: getTeams
      responses:
        '200':
          description: List of the teams which the organization has.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Team'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - canonical: team1
                  id: 1
                  created_at: 1503225026
                  updated_at: 1503335026
                  name: Team 1
                  owner:
                    id: 99
                    username: 'superuser'
                    given_name: 'Owen'
                    family_name: 'Smith'
                    email: 'superuser@company.com'
                    created_at: 1503225026
                    role:
                      id: 22
                      name: 'Organization Admin'
                      description: "Can manage organization's projects"
                      policies:
                        - id: 33
                          code: 'organization:project:update'
                          description: "can update the organization's projects"
                        - id: 32
                          code: 'organization:project:delete'
                          description: "can delete the organization's projects"
                  roles:
                    - id: 3
                      name: developer
                      description: A developer of the team
                      policies:
                        - id: 21
                          code: 'team:read'
                          entities: ["1", "12", "42"]
                          description: Grant the access to read the teams of an organization
                        - id: 42
                          code: 'member:read'
                          entities: []
                          description: Grant the access to read the members
                        - id: 60
                          code: 'project:read'
                          entities: []
                          description: Grant the access to projects
                  member_count: 12
                  members_preview:
                    - id: 42
                      username: 'coder'
                      given_name: 'Cody'
                      family_name: 'Coder'
                      email: 'coder@company.com'
                      created_at: 678123
                    - id: 43
                      username: 'tester'
                      given_name: 'Tony'
                      family_name: 'Tester'
                      email: 'tester@company.com'
                      created_at: 678123
              pagination:
                index: 1
                size: 10
                total: 1
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organization teams
      description: Create a new team in the organization.
      operationId: createTeam
      parameters:
        - in: body
          name: body
          description: The information of the team to create.
          required: true
          schema:
            $ref: '#/definitions/NewTeam'
      responses:
        '200':
          description: >-
            Team created. The body contains the information of the new team of
            the organization.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Team'
          examples:
            application/json:
              data:
                id: 1
                canonical: team1
                created_at: 1503225026
                updated_at: 1503335026
                name: Team 1
                owner:
                  id: 99
                  username: 'superuser'
                  given_name: 'Owen'
                  family_name: 'Smith'
                  email: 'superuser@company.com'
                  created_at: 1503225026
                  role:
                    id: 22
                    name: 'Organization Admin'
                    description: "Can manage organization's projects"
                    policies:
                      - id: 33
                        code: 'organization:project:update'
                        description: "can update the organization's projects"
                      - id: 32
                        code: 'organization:project:delete'
                        description: "can delete the organization's projects"
                roles:
                  - id: 3
                    name: developer-ro
                    description: A developer of the team
                    policies:
                      - id: 21
                        code: 'team:read'
                        entities: []
                        description: Grant the access to read the teams of an organization
                      - id: 42
                        code: 'member:read'
                        entities: ["1", "2", "31"]
                        description: Grant the access to read the members
                      - id: 60
                        code: 'project:read'
                        entities: []
                        description: Grant the access to projects
                  - id: 5
                    name: project-admin
                    description: A group for project admin of the project 1
                    policies:
                      - id: 59
                        code: 'project:create'
                        entities: ["1"]
                        description: Grant the access to projects
                      - id: 60
                        code: 'project:read'
                        entities: ["1"]
                        description: Grant the access to projects
                      - id: 61
                        code: 'project:update'
                        entities: ["1"]
                        description: Grant the access to projects
                      - id: 62
                        code: 'project:delete'
                        entities: ["1"]
                        description: Grant the access to projects
                member_count: 12
                members_preview:
                  - id: 42
                    username: 'coder'
                    given_name: 'Cody'
                    family_name: 'Coder'
                    email: 'coder@company.com'
                    created_at: 678123
                  - id: 43
                    username: 'tester'
                    given_name: 'Tony'
                    family_name: 'Tester'
                    email: 'tester@company.com'
                    created_at: 678123
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/teams/{team_canonical}/members':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/team_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization team members
      description: Get the members of a team of the organization.
      operationId: getTeamMembers
      responses:
        '200':
          description: List of the members who are assigned to the team.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/MemberTeam'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - username: user-1
                  id: 1
                  given_name: Mariano
                  family_name: Jimenez
                  email: mariano.jimenez@fakeemail.com
                  picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                  created_at: 1503225026
                - username: user2
                  id: 1
                  given_name: Jordi
                  family_name: Capdevila
                  email: jordi.capdevila@fakeemail.com
                  picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                  created_at: 1503281026
                  invited_at: 1503281026
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organization team members
      description: Assign a user of the organization to be a member of a team.
      operationId: assignMemberToTeam
      parameters:
        - in: body
          name: body
          description: The assignation information for being a member or being updated.
          required: true
          schema:
            $ref: '#/definitions/NewTeamMemberAssignation'
      responses:
        '204':
          description: The user has been made a member of the team.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/teams/{team_canonical}/members/{username}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/team_canonical'
      - $ref: '#/parameters/username'
    get:
      tags:
        - Organization team members
      description: Get the information of a member of the team.
      operationId: getTeamMember
      responses:
        '200':
          description: The information of the member of the team.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/MemberTeam'
          examples:
            application/json:
              data:
                id: 1
                username: user-1
                given_name: Mariano
                family_name: Jimenez
                email: mariano.jimenez@fakeemail.com
                picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                created_at: 1503225026
                role:
                  id: 3
                  name: developer
                  description: A developer of the team
                  policies:
                    - id: 21
                      code: 'team:read'
                      entities: []
                      description: Grant the access to read the teams of an organization
                    - id: 42
                      code: 'member:read'
                      entities: []
                      description: Grant the access to read the members
                    - id: 60
                      code: 'project:read'
                      entities: []
                      description: Grant the access to projects
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization team members
      description: >-
        Unassign a member of the team. After this operation, the user will not
        be a member of the team.
      operationId: unassignMemberFromTeam
      responses:
        '204':
          description: The user has been unassigned of the team.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/teams/{team_canonical}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/team_canonical'
    get:
      tags:
        - Organization teams
      description: Get the information of a team of the organization.
      operationId: getTeam
      responses:
        '200':
          description: >-
            The information of the team of the organization which has the
            specified ID.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Team'
          examples:
            application/json:
              data:
                id: 1
                canonical: team-2
                created_at: 1503225026
                updated_at: 1503335026
                name: Team 2
                owner:
                  id: 99
                  username: 'superuser'
                  given_name: 'Owen'
                  family_name: 'Smith'
                  email: 'superuser@company.com'
                  created_at: 1503225026
                  role:
                    id: 22
                    name: 'Organization Admin'
                    description: "Can manage organization's projects"
                    policies:
                      - id: 33
                        code: 'organization:project:update'
                        description: "can update the organization's projects"
                roles:
                  - id: 2
                    name: project manager
                    description: A project manager
                    policies:
                      - id: 21
                        code: 'team:read'
                        entities: []
                        description: Grant the access to read the teams of an organization
                      - id: 22
                        code: 'team:edit'
                        entities: []
                        description: Grant the access to edit teams
                      - id: 60
                        code: 'project:read'
                        entities: ["12", "13", "14"]
                        description: Grant the access to projects
                      - id: 61
                        code: 'project:create'
                        entities: []
                        description: Grant the access to create a project in the organization
                      - id: 62
                        code: 'project:edit'
                        entities: ["12", "13", "14"]
                        description: Grant the access to edit projects
                member_count: 12
                members_preview:
                  - id: 42
                    username: 'cooluser'
                    given_name: 'given'
                    family_name: 'family'
                    email: 'cooluser@company.com'
                    created_at: 678123
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organization teams
      description: Delete a team of the organization.
      operationId: deleteTeam
      responses:
        '204':
          description: Team has been deleted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Organization teams
      description: Update the information of a team of the organization.
      operationId: updateTeam
      parameters:
        - in: body
          name: body
          description: The information of the team to update.
          required: true
          schema:
            $ref: '#/definitions/UpdateTeam'
      responses:
        '200':
          description: Team updated. The body contains information of the updated team.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Team'
          examples:
            application/json:
              data:
                id: 1
                canonical: team-3
                created_at: 1503220026
                updated_at: 1503335126
                name: Team 3
                owner:
                  id: 99
                  username: 'superuser'
                  given_name: 'Owen'
                  family_name: 'Smith'
                  email: 'superuser@company.com'
                  created_at: 1503225026
                  role:
                    id: 22
                    name: 'Organization Admin'
                    description: "Can manage organization's projects"
                    policies:
                      - id: 33
                        code: 'organization:project:update'
                        description: "can update the organization's projects"
                      - id: 32
                        code: 'organization:project:delete'
                        description: "can delete the organization's projects"
                roles:
                  - id: 2
                    name: project manager
                    description: A project manager
                    policies:
                      - id: 21
                        code: 'team:read'
                        entities: ["2"]
                        description: Grant the access to read the teams of an organization
                      - id: 22
                        code: 'team:update'
                        entities: ["2"]
                        description: Grant the access to edit teams
                      - id: 60
                        code: 'project:read'
                        entities: ["2"]
                        description: Grant the access to projects
                      - id: 61
                        code: 'project:create'
                        entities: ["2"]
                        description: Grant the access to create a project in the organization
                      - id: 62
                        code: 'project:update'
                        entities: ["2"]
                        description: Grant the access to edit projects
                  - id: 4
                    name: project ro
                    description: Provide readonly on teams & projects
                    policies:
                      - id: 21
                        code: 'team:read'
                        entities: []
                        description: Grant the access to read the teams of an organization
                      - id: 60
                        code: 'project:read'
                        entities: []
                        description: Grant the access to read projects of an organization
                member_count: 12
                members_preview:
                  - id: 42
                    username: 'coder'
                    given_name: 'Cody'
                    family_name: 'Coder'
                    email: 'coder@company.com'
                    created_at: 678123
                  - id: 43
                    username: 'tester'
                    given_name: 'Tony'
                    family_name: 'Tester'
                    email: 'tester@company.com'
                    created_at: 678123
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/workers':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
      tags:
        - Organization workers
      description: Get the workers that the authenticated user has access to.
      operationId: getWorkers
      responses:
        '200':
          description: List of the workers which authenticated user has access to.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Worker'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - name: worker1
                  state: running
                  version: "2.1"
                  platform: linux
                  ephemeral: false
                  active_containers: 256
                  active_volumes: 0
                  team: org1
                  start_time: 1552997739
                - name: worker2
                  state: running
                  version: "2.1"
                  platform: linux
                  tags:
                    - fastcpu
                  ephemeral: true
                  active_containers: 256
                  active_volumes: 10
                  start_time: 1552997639
                  team: org2
                - name: worker3
                  state: running
                  version: "2.1"
                  platform: linux
                  tags:
                    - ssd
                  ephemeral: true
                  active_containers: 300
                  active_volumes: 20
                  start_time: 1552997839
                  team: org3
              pagination:
                index: 1
                size: 5
                total: 3
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/ancestors':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      tags:
        - Organizations
      description: >-
        Get all the ancestors between the Organization and the User with the shortest path.
      operationId: getOrgAncestors
      responses:
        '200':
          description: Get all the ancestors between the Organization and the User with the shortest path. 0 index is the parent and n is the searched child
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/OrganizationBasicInfo'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - canonical: org1
                  id: 1
                  name: Organization 1
                  ci_team_name: asfdOPNljk
                  created_at: 1503225026
                  updated_at: 1503335026
                  blocked: []
                - canonical: org2
                  id: 2
                  name: Organization 2
                  ci_team_name: asfdOPNljk
                  created_at: 1501131026
                  updated_at: 1503333026
                  blocked:
                  - "require_payment"
                - canonical: org3
                  id: 3
                  name: Organization 3
                  ci_team_name: asfdOPNljk
                  created_at: 1500135021
                  updated_at: 1503332021
                  blocked:
                  - "require_payment"
              pagination:
                total: 42
                index: 33
                size: 10
        '401':
          $ref: '#/responses/unauthenticated'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/branches':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/credential_id_not_required_query'
      - $ref: '#/parameters/git_url_query'
    get:
      tags:
        - Organizations
      description: Return all the branches of repository
      operationId: getRepoBranches
      responses:
        '200':
          description: List of the repository branches
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: array
                items:
                  type: string
          examples:
            application/json:
              data:
                - "stacks"
                - "stacks2"
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  /organizations:
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
        - in: query
          name: organization_name
          type: string
          description: Search by the organization's name
        - in: query
          name: organization_created_at
          type: string
          format: date-time
          description: Search by organization's creation date
        - $ref: '#/parameters/order_by_query'
      tags:
        - Organizations
      description: Get the organizations that the authenticated user has access.
      operationId: getOrgs
      responses:
        '200':
          description: List of the organizations which authenticated user has access.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/OrganizationBasicInfo'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - canonical: org1
                  id: 1
                  name: Organization 1
                  ci_team_name: asfdOPNljk
                  created_at: 1503225026
                  updated_at: 1503335026
                  blocked: []
                - canonical: org2
                  id: 1
                  name: Organization 2
                  ci_team_name: asfdOPNljk
                  created_at: 1501131026
                  updated_at: 1503333026
                  blocked: []
                - canonical: org3
                  id: 1
                  name: Organization 3
                  ci_team_name: asfdOPNljk
                  created_at: 1500135021
                  updated_at: 1503332021
                  blocked: []
              pagination:
                index: 1
                size: 10
                total: 3
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organizations
      description: >-
        Create a new organization, making the authenticated user the owner of
        it.
      operationId: createOrg
      parameters:
        - in: body
          name: body
          description: The information of the organization to create.
          required: true
          schema:
            $ref: '#/definitions/NewOrganization'
      responses:
        '200':
          description: >-
            Organization created. The body contains the information of the new
            created organization.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/OrganizationBasicInfo'
          examples:
            application/json:
              data:
                id: 1
                canonical: org1
                name: Organization 1
                ci_team_name: asfdOPNljk
                created_at: 1503225026
                updated_at: 1503335026
                blocked: []
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/events':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      parameters:
        - $ref: '#/parameters/timestamp_range_begin_query'
        - $ref: '#/parameters/timestamp_range_end_query'
        - $ref: '#/parameters/event_type'
        - $ref: '#/parameters/event_severity'
      tags:
        - Organizations
      description: >-
        Retrieve the list of events which has been registered on the organization.
        The events to request can be filtered using by the unix timestamps (
        begin and end timestamps range), the event type and severity; when more
        than one are applied then they are applied with a logical AND.

        - The unix timestamps must be always be specified, the rest of the
          filters aren't required.
        - Some constraints are established by the third party system, which
          actual register the events; so in the hypothetical case that the same
          events would be registered in two different underlying systems, the
          list of retrieved events may be slightly different, in terms of the
          amount and the returned set, not the order.
      operationId: getOrgEvents
      responses:
        '200':
          description: >-
            The list of events which fulfills the query parameters filter
          schema:
            type: object
            description: The list of log lines
            required:
              - data
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/Event'
          examples:
            application/json:
              data:
                - timestamp: 0123456789
                  type: Cycloid
                  title: New member added
                  message: A new member has been added to the project Website
                  icon: fa-info-circle
                  severity: info
                  tags:
                    - key: project_canonical
                      value: website
                - timestamp: 0123456795
                  title: Unexpected error
                  type: Monitoring
                  message: An unexpected error has happened and provoked that an operation has not been performed
                  severity: crit
                  color: maroon
                  tags: []
                - timestamp: 0123456800
                  type: Cycloid
                  title: New deployment
                  message: Development environment of the project website has been deployed.
                  icon: fa-server
                  severity: info
                  color: teal
                  tags:
                    - key: project_canonical
                      value: website
                    - key: environment_canonical
                      value: development
                - timestamp: 0123456805
                  type: Monitoring
                  title: Worker is restarting
                  message: A concourse worker is restarting
                  severity: warn
                  tags: []
                - timestamp: 0123456810
                  type: Monitoring
                  title: Nodes are overloaded
                  message: Kubernetes nodes of the deployment \"my-mon-website\" are under heavy load
                  severity: warn
                  tags:
                    - key: kubernetes_deployemnt
                      value: my-mon-website
                - timestamp: 0123456823
                  type: AWS
                  title: AWS created
                  message: A new AWS instance has been created
                  icon: fa-aws
                  severity: info
                  tags: []
                - timestamp: 0123456834
                  type: AWS
                  title: AWS is ready
                  message: A new AWS instance is ready to accept requests
                  icon: fa-aws
                  severity: info
                  tags: []
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - Organizations
      description: Send a event on the organization to be registered.
      operationId: sendOrgEvent
      parameters:
        - in: body
          name: body
          description: The information associated with the event to register.
          required: true
          schema:
            $ref: '#/definitions/NewEvent'
      responses:
        '200':
          description: Event has been registered
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
  '/organizations/{organization_canonical}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      tags:
        - Organizations
      description: Get the information of the organization.
      operationId: getOrg
      responses:
        '200':
          description: The information of the organization which has the specified ID.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Organization'
          examples:
            application/json:
              data:
                id: 1
                canonical: org3
                ci_team_name: asfdOPNljk
                name: Organization 3
                blocked: []
                created_at: 1500135021
                updated_at: 1503332021
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Organizations
      description: Delete the organization.
      operationId: deleteOrg
      responses:
        '204':
          description: Organization has been deleted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Organizations
      description: Update the information of the organization.
      operationId: updateOrg
      parameters:
        - in: body
          name: body
          description: The information of the organization to update.
          required: true
          schema:
            $ref: '#/definitions/UpdateOrganization'
      responses:
        '200':
          description: >-
            Organization updated. The body contains information of the updated
            organization.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/Organization'
          examples:
            application/json:
              data:
                id: 1
                canonical: org2
                ci_team_name: asfdOPNljk
                name: Organization 2
                blocked: []
                created_at: 1501131026
                updated_at: 1503333026
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/summary':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    get:
      tags:
        - Organizations
      description: Get the summary of the organization
      operationId: getOrgSummary
      responses:
        '200':
          description: The summary object
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - summary
            properties:
              summary:
                $ref: '#/definitions/Summary'
          examples:
            application/json:
              summary:
                projects: 5
                pipelines: 5
                credentials: 5
                service_catalog_sources: 5
                config_repositories: 5
                teams: 5
                users: 5
                roles: 5
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
  '/organizations/{organization_canonical}/service_catalogs':
    parameters:
      - $ref: '#/parameters/organization_canonical'
    post:
      tags:
        - Service catalogs
      description: Create a new Service Catalog
      operationId: createServiceCatalog
      parameters:
        - in: body
          name: body
          description: The information of the ServiceCatalog.
          required: true
          schema:
            $ref: '#/definitions/NewServiceCatalog'
      responses:
        '202':
          description: The information of the service catalog.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ServiceCatalog'
          examples:
            application/json:
              data:
                id: 1
                name: stack-magento
                author: Cycloid
                canonical: stack-magento
                image: 'http://via.placeholder.com/150x150'
                description: Super magento stack
                type: stack
                trusted: true
                keywords:
                  - stack
                  - php
                ref: "orgCanonical:stackCanonical"
                status: private
                technologies:
                  - technology: nginx
                    version: "1.15"
                  - technology: debian
                    version: "9.1"
                  - technology: magento
                    version: "2.2"
                  - technology: Php
                    version: "7.2"
                  - technology: Redis
                    version: "2.4"
                  - technology: Elasticsearch
                    version: "6.2"
                created_at: 1503225026
                updated_at: 1503335026
                service_catalog_source_id: 1
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    get:
      parameters:
        - $ref: '#/parameters/page_index'
        - $ref: '#/parameters/page_size'
        - $ref: '#/parameters/service_catalog_status_query'
        - $ref: '#/parameters/service_catalog_own_query'
        - $ref: '#/parameters/service_catalog_trusted_query'
      tags:
        - Service catalogs
      description: Return all the service catalogs
      operationId: getServiceCatalogs
      responses:
        '200':
          description: List of the service catalogs.
          schema:
            type: object
            required:
              - data
              - pagination
            properties:
              data:
                type: array
                items:
                  $ref: '#/definitions/ServiceCatalog'
              pagination:
                $ref: '#/definitions/Pagination'
          examples:
            application/json:
              data:
                - name: stack-magento
                  id: 1
                  author: Cycloid
                  canonical: stack-magento
                  image: 'http://via.placeholder.com/150x150'
                  description: Super magento stack
                  trusted: true
                  keywords:
                    - stack
                    - php
                  ref: "orgCanonical:stackCanonical"
                  status: private
                  service_catalog_source_id: 1
                  technologies:
                    - technology: nginx
                      version: "1.15"
                    - technology: debian
                      version: "9.1"
                    - technology: magento
                      version: "2.2"
                    - technology: Php
                      version: "7.2"
                    - technology: Redis
                      version: "2.4"
                    - technology: Elasticsearch
                      version: "6.2"
                  created_at: 1503225026
                  updated_at: 1503335026
                - name: infra-classic-web
                  id: 2
                  author: Cycloid
                  canonical: stack-magento
                  image: 'http://via.placeholder.com/150x150'
                  description: Super magento stack
                  trusted: false
                  keywords:
                    - stack
                    - php
                  ref: "cycloidio:stack-magento"
                  status: private
                  service_catalog_source_id: 1
                  technologies:
                    - technology: nginx
                      version: "1.15"
                    - technology: debian
                      version: "9.1"
                    - technology: magento
                      version: "2.2"
                    - technology: Php
                      version: "7.2"
                    - technology: Redis
                      version: "2.4"
                    - technology: Elasticsearch
                      version: "6.2"
                  created_at: 1503225026
                  updated_at: 1503335026
              pagination:
                index: 1
                size: 10
                total: 2
        '403':
          $ref: '#/responses/not_enough_permissions'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/service_catalogs/{service_catalog_ref}/config':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/service_catalog_ref'
    get:
      tags:
        - Service catalogs
      description: Get the config of the service catalog
      operationId: getServiceCatalogConfig
      responses:
        '200':
          description: The config of the service catalog.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                type: object
          examples:
            application/json:
              data: {
                first-usecase: {
                  pipeline: {
                    pipeline: {
                      path: "pipeline/magento.yml",
                      content: "groups:\n\n- name: magento-((env))\n  jobs:\n  - magento-((env))-build\n  - full-deploy-front-magento-((env))\n  - app-deploy-front-magento-((env))\n  - terraform-plan-magento-((env))\n  - terraform-apply-magento-((env))\n  - magento-((env))-unittests\n  - magento-((env))-functional-tests\n\nresource_types:\n\n- name: terraform\n  type: docker-image\n  source:\n    repository: ljfranklin/terraform-resource\n\nresources:\n\n- name: terraform-magento-((env))\n  type: terraform\n  source:\n    storage:\n      bucket: ((terraform_storage_bucket_name))\n      bucket_path: ((terraform_storage_bucket_path))\n      region_name: ((aws_default_region))\n      access_key_id: \"((terraform_storage_access_key))\"\n      secret_access_key: \"((terraform_storage_secret_key))\"\n    vars:\n      access_key: ((aws_access_key))\n      secret_key: ((aws_secret_key))\n    env:\n      AWS_ACCESS_KEY_ID: ((aws_access_key))\n      AWS_DEFAULT_REGION: ((aws_default_region))\n      AWS_SECRET_ACCESS_KEY: ((aws_secret_key))\n"
                    },
                    variables: {
                      path: "pipeline/variables.sample.yml",
                      destination: "pipeline/($ environment $)-variables.yml",
                      content: "env: ($ environment $)\nmagento_deploy_bucket_name: magento-deploy\nmagento_deploy_bucket_object_path: /catalog-magento/($ environment $)/magento.tar.gz\nmagento_deploy_bucket_region: eu-west-1\nmagento_deploy_bucket_access_key: ...\nmagento_deploy_bucket_secret_access_key: ...\nterraform_storage_access_key: ...\nterraform_storage_secret_key: ...\nterraform_storage_bucket_name: magento-terraform-remote-state\nterraform_storage_bucket_path: magento/($ environment $)\naws_access_key: ...\naws_secret_key: ...\naws_default_region: eu-west-1\n\nansible_vault_password: ...\nbastion_url: admin@bastion.cycloid.io\nbastion_private_key_pair: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\ncatalog_magento_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\nmagento_git_repository: git@github.com:MyUser/code-magento.git\nmagento_git_branch: master\nmagento_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\n\nmagento_config_git_repository: git@github.com:MyUser/config-magento.git\nmagento_config_git_branch: master\nmagento_config_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n"
                    }
                  },
                  ansible: {
                    magento: {
                      path: "ansible/environments/front.yml.sample",
                      destination: "ansible/environments/($ environment $)-front.yml",
                      content: "# In this file you could override any variables present in default_front.yaml file\n\n# Usually you might want to override those variables :\n# magento_backend_frontname: admin\n# magento_admin_firstname: admin\n# magento_admin_lastname: admin\n# magento_admin_email: root@localhost.local\n# magento_admin_user: admin\n\n# magento_admin_password: 4Bigs3cr3t\n\n# In case you want to use vault to encrypt this password use the following command to generate the ansible vault var :\n# echo -n \"4Bigs3cr3t\" | ansible-vault encrypt_string --stdin-name=magento_admin_password\n#>> magento_admin_password: !vault |\n#>>           $ANSIBLE_VAULT;1.1;AES256\n#>>           37363232383334316164366337366430316535636130376134323366313565356365363662653539\n#>>           3161303331303565643831383839626263653362636466660a316530613935393464366536383839\n#>>           30303836326138306339623431356234333239343435623333343333623938633761636132303662\n#>>           3135343861383531660a393934316237363961663865393939313966373838653339326565353263\n#>>           6238\n"
                    }
                  },
                  terraform: {
                    magento: {
                      path: "terraform/magento.tf.sample",
                      destination: "terraform/magento/($ environment $)/magento.tf",
                      content: "variable \"rds_password\" {\n    default = \"ChangeMePls\"\n}\n\nmodule \"magento\" {\n  source = \"module-magento\"\n\n  env                      = \"($ environment $)\"\n  vpc_id                   = \"<vpc-id>\"\n  private_subnets_ids      = [\"private-subnets\"]\n  magento_ssl_cert         = \"<ssl-cert-arn>\"\n  bastion_sg_allow         = \"<bastion-sg>\"\n  public_subnets_ids       = [\"<public-subnets>\"]\n\n  rds_password             = \"${var.rds_password}\"\n\n  # project = \"magento\"\n\n  # FIXME optimized false : should be changes with the instance type ?\n\n  # rds_database         = \"magento\"\n  # rds_disk_size        = 10\n  # rds_multiaz          = false\n  # rds_storage_type     = \"gp2\"\n  # rds_subnet           = \"<rds-subnet-id>\"\n  # rds_type             = \"db.t2.small\"\n  # rds_username         = \"magento\"\n  # rds_engine           = \"\"mysql\"\n  # rds_engine_version   = \"5.7.16\"\n  # rds_backup_retention = 7\n  # rds_parameters       = \"\"\n\n  # cache_subnet                     = \"cache-subnet-id\"\n  # elasticache_type                 = \"cache.t2.micro\"\n  # elasticache_nodes                = \"1\n  # elasticache_parameter_group_name = \"default.redis3.2\"\n  # elasticache_engine               = \"redis\"\n  # elasticache_port                 = \"6379\"\n  # front_count           = \"1\"\n  # front_disk_size       = \"60\"\n  # front_disk_type       = \"gp2\"\n  # front_type            = \"t2.small\"\n\n}\n"
                    }
                  },
                  forms: {
                    pipeline: {
                      group1: [
                        {
                          widget: "text_area",
                          default: "nobucket",
                          type: "string",
                          description: "Bucket used to store magento code",
                          key: "magento_deploy_bucket_name",
                          name: "The bucket used"
                        },
                        {
                          widget: "text_area",
                          type: "string",
                          description: "Doesn't matter",
                          key: "no-exist",
                          name: "Some imaginary var"
                        }
                      ]
                    },
                    terraform: {
                      group2: [
                        {
                          widget: "simple_text",
                          type: "array",
                          description: "List of public network IDs",
                          key: "public_subnets_ids",
                          name: "Pub nets"
                        },
                        {
                          widget: "text_area",
                          type: "string",
                          description: "The VPC ID to run the project",
                          key: "vpc_id",
                          name: "VPC ID"
                        }
                      ]
                    }
                  }
                },
                second-usecase: {
                  pipeline: {
                    pipeline: {
                      path: "pipeline/magento.yml",
                      content: "groups:\n\n- name: magento-((env))\n  jobs:\n  - magento-((env))-build\n  - full-deploy-front-magento-((env))\n  - app-deploy-front-magento-((env))\n  - terraform-plan-magento-((env))\n  - terraform-apply-magento-((env))\n  - magento-((env))-unittests\n  - magento-((env))-functional-tests\n\nresource_types:\n\n- name: terraform\n  type: docker-image\n  source:\n    repository: ljfranklin/terraform-resource\n\nresources:\n\n- name: terraform-magento-((env))\n  type: terraform\n  source:\n    storage:\n      bucket: ((terraform_storage_bucket_name))\n      bucket_path: ((terraform_storage_bucket_path))\n      region_name: ((aws_default_region))\n      access_key_id: \"((terraform_storage_access_key))\"\n      secret_access_key: \"((terraform_storage_secret_key))\"\n    vars:\n      access_key: ((aws_access_key))\n      secret_key: ((aws_secret_key))\n    env:\n      AWS_ACCESS_KEY_ID: ((aws_access_key))\n      AWS_DEFAULT_REGION: ((aws_default_region))\n      AWS_SECRET_ACCESS_KEY: ((aws_secret_key))\n"
                    },
                    variables: {
                      path: "pipeline/variables.sample.yml",
                      destination: "pipeline/($ environment $)-variables.yml",
                      content: "env: ($ environment $)\nmagento_deploy_bucket_name: magento-deploy\nmagento_deploy_bucket_object_path: /catalog-magento/($ environment $)/magento.tar.gz\nmagento_deploy_bucket_region: eu-west-1\nmagento_deploy_bucket_access_key: ...\nmagento_deploy_bucket_secret_access_key: ...\nterraform_storage_access_key: ...\nterraform_storage_secret_key: ...\nterraform_storage_bucket_name: magento-terraform-remote-state\nterraform_storage_bucket_path: magento/($ environment $)\naws_access_key: ...\naws_secret_key: ...\naws_default_region: eu-west-1\n\nansible_vault_password: ...\nbastion_url: admin@bastion.cycloid.io\nbastion_private_key_pair: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\ncatalog_magento_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\nmagento_git_repository: git@github.com:MyUser/code-magento.git\nmagento_git_branch: master\nmagento_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n\n\nmagento_config_git_repository: git@github.com:MyUser/config-magento.git\nmagento_config_git_branch: master\nmagento_config_git_private_key: |-\n  -----BEGIN RSA PRIVATE KEY-----\n  -----END RSA PRIVATE KEY-----\n"
                    }
                  },
                  ansible: {
                    magento: {
                      path: "ansible/environments/front.yml.sample",
                      destination: "ansible/environments/($ environment $)-front.yml",
                      content: "# In this file you could override any variables present in default_front.yaml file\n\n# Usually you might want to override those variables :\n# magento_backend_frontname: admin\n# magento_admin_firstname: admin\n# magento_admin_lastname: admin\n# magento_admin_email: root@localhost.local\n# magento_admin_user: admin\n\n# magento_admin_password: 4Bigs3cr3t\n\n# In case you want to use vault to encrypt this password use the following command to generate the ansible vault var :\n# echo -n \"4Bigs3cr3t\" | ansible-vault encrypt_string --stdin-name=magento_admin_password\n#>> magento_admin_password: !vault |\n#>>           $ANSIBLE_VAULT;1.1;AES256\n#>>           37363232383334316164366337366430316535636130376134323366313565356365363662653539\n#>>           3161303331303565643831383839626263653362636466660a316530613935393464366536383839\n#>>           30303836326138306339623431356234333239343435623333343333623938633761636132303662\n#>>           3135343861383531660a393934316237363961663865393939313966373838653339326565353263\n#>>           6238\n"
                    }
                  },
                  terraform: {
                    magento: {
                      path: "terraform/magento.tf.sample",
                      destination: "terraform/magento/($ environment $)/magento.tf",
                      content: "variable \"rds_password\" {\n    default = \"ChangeMePls\"\n}\n\nmodule \"magento\" {\n  source = \"module-magento\"\n\n  env                      = \"($ environment $)\"\n  vpc_id                   = \"<vpc-id>\"\n  private_subnets_ids      = [\"private-subnets\"]\n  magento_ssl_cert         = \"<ssl-cert-arn>\"\n  bastion_sg_allow         = \"<bastion-sg>\"\n  public_subnets_ids       = [\"<public-subnets>\"]\n\n  rds_password             = \"${var.rds_password}\"\n\n  # project = \"magento\"\n\n  # FIXME optimized false : should be changes with the instance type ?\n\n  # rds_database         = \"magento\"\n  # rds_disk_size        = 10\n  # rds_multiaz          = false\n  # rds_storage_type     = \"gp2\"\n  # rds_subnet           = \"<rds-subnet-id>\"\n  # rds_type             = \"db.t2.small\"\n  # rds_username         = \"magento\"\n  # rds_engine           = \"\"mysql\"\n  # rds_engine_version   = \"5.7.16\"\n  # rds_backup_retention = 7\n  # rds_parameters       = \"\"\n\n  # cache_subnet                     = \"cache-subnet-id\"\n  # elasticache_type                 = \"cache.t2.micro\"\n  # elasticache_nodes                = \"1\n  # elasticache_parameter_group_name = \"default.redis3.2\"\n  # elasticache_engine               = \"redis\"\n  # elasticache_port                 = \"6379\"\n  # front_count           = \"1\"\n  # front_disk_size       = \"60\"\n  # front_disk_type       = \"gp2\"\n  # front_type            = \"t2.small\"\n\n}\n"
                    }
                  },
                  forms: {
                    pipeline: {
                      group1: [
                        {
                          widget: "text_area",
                          default: "nobucket",
                          type: "string",
                          description: "Bucket used to store magento code",
                          key: "magento_deploy_bucket_name",
                          name: "The bucket used"
                        },
                        {
                          widget: "text_area",
                          type: "string",
                          description: "Doesn't matter",
                          key: "no-exist",
                          name: "Some imaginary var"
                        }
                      ]
                    },
                    terraform: {
                      group2: [
                        {
                          widget: "simple_text",
                          type: "array",
                          description: "List of public network IDs",
                          key: "public_subnets_ids",
                          name: "Pub nets"
                        },
                        {
                          widget: "text_area",
                          type: "string",
                          description: "The VPC ID to run the project",
                          key: "vpc_id",
                          name: "VPC ID"
                        }
                      ]
                    }
                  }
                }
              }
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/service_catalogs/{service_catalog_ref}':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/service_catalog_ref'
    get:
      tags:
        - Service catalogs
      description: Get the information of the service catalog
      operationId: getServiceCatalog
      responses:
        '200':
          description: The information of the service catalog.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ServiceCatalog'
          examples:
            application/json:
              data:
                id: 1
                name: stack-magento
                author: Cycloid
                canonical: stack-magento
                image: 'http://via.placeholder.com/150x150'
                description: Super magento stack
                trusted: true
                keywords:
                  - stack
                  - php
                status: private
                ref: "cycloidio:stack-magento"
                technologies:
                  - technology: nginx
                    version: "1.15"
                  - technology: debian
                    version: "9.1"
                  - technology: magento
                    version: "2.2"
                  - technology: Php
                    version: "7.2"
                  - technology: Redis
                    version: "2.4"
                  - technology: Elasticsearch
                    version: "6.2"
                service_catalog_source_id: 1
                created_at: 1503225026
                updated_at: 1503335026
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Service catalogs
      description: Update the information of the service catalog
      operationId: updateServiceCatalog
      parameters:
        - in: body
          name: body
          description: The information of the ServiceCatalog Terraform.
          required: true
          schema:
            $ref: '#/definitions/NewServiceCatalog'
      responses:
        '200':
          description: >-
            Updated the Service Catalog
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/ServiceCatalog'
          examples:
            application/json:
              data:
                id: 1
                name: stack-magento
                author: Cycloid
                canonical: stack-magento
                image: 'http://via.placeholder.com/150x150'
                description: Super magento stack
                type: stack
                trusted: true
                keywords:
                  - stack
                  - php
                ref: "cycloidio:stack-magento"
                status: private
                technologies:
                  - technology: nginx
                    version: "1.15"
                  - technology: debian
                    version: "9.1"
                  - technology: magento
                    version: "2.2"
                  - technology: Php
                    version: "7.2"
                  - technology: Redis
                    version: "2.4"
                  - technology: Elasticsearch
                    version: "6.2"
                created_at: 1503225026
                updated_at: 1503335026
                service_catalog_source_id: 1
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - Service catalogs
      description: Delete the service catalog.
      operationId: deleteServiceCatalog
      responses:
        '204':
          description: Service Catalog has been deleted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '409':
          description: Service Catalog deletion has internal conflict
  '/organizations/{organization_canonical}/service_catalogs/{service_catalog_ref}/{use_case_canonical}/terraform':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/service_catalog_ref'
      - $ref: '#/parameters/use_case_canonical'
    get:
      tags:
        - Service catalogs
      description: Get the information of the service catalog Terraform config
      operationId: getServiceCatalogTerraform
      responses:
        '200':
          description: The information of Terraform
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/TerraformJSONConfig'
          examples:
            application/json:
              data:
                config:
                  data:
                    aws_ami:
                      debian_jessie_latest:
                        most_recent: true
                  resource:
                    aws_elb:
                      front:
                        name: "${var.project}-front-${var.env}"
                        tags:
                          name: some name
                  variable:
                    front_disk_size:
                      default: 60
                  provider:
                    aws:
                      access_key: "${var.access_key}"
                  locals:
                    codecommit_repository_name: something
                  output:
                    sensitive:
                      sensitive: true
                      value: VALUE
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Service catalogs
      description: Update/Create the information of the service catalog Terraform config
      operationId: updateServiceCatalogTerraform
      parameters:
        - in: body
          name: body
          description: The information of the ServiceCatalog Terraform.
          required: true
          schema:
            $ref: '#/definitions/TerraformJSONConfig'
      responses:
        '204':
          description: Configuration has been updated
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/service_catalogs/{service_catalog_ref}/terraform/diagram':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/service_catalog_ref'
    get:
      tags:
        - Service catalogs
      description: Get the information of the service catalog Terraform diagram
      operationId: getServiceCatalogTerraformDiagram
      responses:
        '200':
          description: The information of Terraform Diagram
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/TerraformJSONDiagram'
          examples:
            application/json:
              data:
                random:
                  data: true
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Service catalogs
      description: Update/Create the information of the service catalog Terraform diagram
      operationId: updateServiceCatalogTerraformDiagram
      parameters:
        - in: body
          name: body
          description: The information of the ServiceCatalog Terraform Diagram
          required: true
          schema:
            $ref: '#/definitions/TerraformJSONDiagram'
      responses:
        '204':
          description: Configuration has been updated
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/organizations/{organization_canonical}/service_catalogs/{service_catalog_ref}/terraform/diagram/image':
    parameters:
      - $ref: '#/parameters/organization_canonical'
      - $ref: '#/parameters/service_catalog_ref'
    get:
      tags:
        - Service catalogs
      description: Get the SC TF Image
      operationId: getServiceCatalogTerraformImage
      responses:
        '200':
          description: The SC TF Image
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/TerraformImage'
        '403':
          $ref: '#/responses/not_enough_permissions'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - Service catalogs
      description: Update/Create the Image for the SC TF Image
      operationId: updateServiceCatalogTerraformImage
      parameters:
        - in: body
          name: body
          description: The information of the ServiceCatalog Terraform Diagram
          required: true
          schema:
            $ref: '#/definitions/TerraformImage'
      responses:
        '204':
          description: Configuration has been updated
        '403':
          $ref: '#/responses/not_enough_permissions'
        '422':
          $ref: '#/responses/unprocessable_entity'
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        default:
          $ref: '#/responses/unexpected_error'
  '/user/email/verification':
    post:
      tags:
        - User
      description: Re-send the verification user's email to the indicated address.
      operationId: emailVerificationResend
      security: []
      parameters:
        - in: body
          name: body
          description: >-
            The email address to re-send the verification email.
            This endpoint doesn't return any error status code if the email
            doesn't exist nor it's already verified for avoiding that an attacker
            could find registered users email address.
          required: true
          schema:
            $ref: '#/definitions/UserEmail'
      responses:
        '204':
          description: The email verification has been re-sent.
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  /user/guide:
    put:
      tags:
        - User
      description:
        Update user's guide progress.
      operationId: updateUserGuide
      security: []
      parameters:
        - in: body
          name: body
          description: The guide's progress JSON schema
          schema:
            $ref: '#/definitions/UserGuide'
      responses:
        '204':
          description: The guide progress has been updated.
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  /user/login:
    post:
      tags:
        - User
      description: Authenticate a user and return a new JWT token.
      operationId: login
      security: []
      parameters:
        - in: body
          name: body
          description: The user content
          required: true
          schema:
            $ref: '#/definitions/UserLogin'
      responses:
        '200':
          description: The token which represents the session of the user.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/UserSession'
          examples:
            application/json:
              data:
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImY0YjdiZjZlLTE1NmYtNDYxMy05NmFiLWIwMzg5NzdiMWRkMSJ9.eyJpc3MiOiJodHRwczovL2N5Y2xvaWQuaW8iLCJzdWIiOiJodHRwczovL2N5Y2xvaWQuaW8iLCJhdWQiOiJjdXN0b21lciIsIm5iZiI6MTUwMzQ3NDg2NywiaWF0IjoxNTAzNDc0ODY3LCJqdGkiOiJjNDU5ODgwMS04YWQzLTRhMDctODIwZC02MzRmN2RkMWQ2MDgiLCJjeWNsb2lkIjp7InVzZXIiOnsiaWQiOjEsInVzZXJuYW1lIjoidXNlci0xIiwiZ2l2ZW5fbmFtZSI6Ik1hcmlhbm8iLCJmYW1pbHlfbmFtZSI6IkppbWVuZXoiLCJwaWN0dXJlX3VybCI6Imh0dHBzOi8vYXZhdGFyczIuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMTQ1NzkyMTAiLCJsb2NhbGUiOiJlbiJ9fX0.v6BuWwO6vN6PNW9d-Eqdoy7GHfUXKQ7byRbqwKRwHlA
        '401':
          $ref: '#/responses/unauthenticated'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  '/user/{social_type}/oauth':
    parameters:
      - $ref: '#/parameters/social_type'
    get:
      parameters:
        - $ref: '#/parameters/oauth_code'
      tags:
        - User
      description: >-
        Used to know if a user from the platform exists on that 'social_type'.
        If it exists we'll return the JWT 'token', if it does not we'll return
        the data of that user on the 'user' so it can be confirmed and created
      operationId: getOAuthUser
      security: []
      responses:
        '200':
          description: Used to know if a user from the platform exists on that 'social_type'.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/UserOAuth'
          examples:
            application/json:
              data: # new-user
                user:
                  email: "some@email.com"
                  given_name: "some name"
                  username: "some-name"
                  picture_url: "https://via.placeholder.com/150?text=cycloid.io"
                  social_id: "some-random-id"
              data: # existing-user
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImY0YjdiZjZlLTE1NmYtNDYxMy05NmFiLWIwMzg5NzdiMWRkMSJ9.eyJpc3MiOiJodHRwczovL2N5Y2xvaWQuaW8iLCJzdWIiOiJodHRwczovL2N5Y2xvaWQuaW8iLCJhdWQiOiJjdXN0b21lciIsIm5iZiI6MTUwMzQ3NDg2NywiaWF0IjoxNTAzNDc0ODY3LCJqdGkiOiJjNDU5ODgwMS04YWQzLTRhMDctODIwZC02MzRmN2RkMWQ2MDgiLCJjeWNsb2lkIjp7InVzZXIiOnsiaWQiOjEsInVzZXJuYW1lIjoidXNlci0xIiwiZ2l2ZW5fbmFtZSI6Ik1hcmlhbm8iLCJmYW1pbHlfbmFtZSI6IkppbWVuZXoiLCJwaWN0dXJlX3VybCI6Imh0dHBzOi8vYXZhdGFyczIuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMTQ1NzkyMTAiLCJsb2NhbGUiOiJlbiJ9LCJvcmdhbml6YXRpb24iOnsiaWQiOjIsImNhbm9uaWNhbCI6Im9yZzIiLCJuYW1lIjoiT3JnIDIifSwicGVybWlzc2lvbnMiOnsib3JnYW5pemF0aW9uOmRlbGV0ZSI6WyIxIl0sIm9yZ2FuaXphdGlvbjp1cGRhdGUiOltdLCJvcmdhbml6YXRpb246dGVhbTpjcmVhdGUiOltdLCJvcmdhbml6YXRpb246dGVhbTpyZWFkIjpbXSwib3JnYW5pemF0aW9uOnRlYW06ZGVsZXRlIjpbIjIiXSwib3JnYW5pemF0aW9uOm1lbWJlcjpjcmVhdGUiOltdLCJvcmdhbml6YXRpb246bWVtYmVyOnJlYWQiOltdLCJvcmdhbml6YXRpb246bWVtYmVyOmRlbGV0ZSI6W10sIm9yZ2FuaXphdGlvbjpwcm9qZWN0OnJlYWQiOltdfX19.CHA3146UEHwVW6nYkDgYeSukGeZIH55mi4O0LsemenA
        '401':
          $ref: '#/responses/unauthenticated'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - User
      description: >-
        Create a user from the OAuth 'social_type'
      operationId: createOAuthUser
      security: []
      parameters:
        - in: body
          name: body
          description: The user content
          required: true
          schema:
            $ref: '#/definitions/NewOAuthUser'
      responses:
        '200':
          description: Create a user from the OAuth 'social_type'
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/UserSession'
          examples:
            application/json:
              data:
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImY0YjdiZjZlLTE1NmYtNDYxMy05NmFiLWIwMzg5NzdiMWRkMSJ9.eyJpc3MiOiJodHRwczovL2N5Y2xvaWQuaW8iLCJzdWIiOiJodHRwczovL2N5Y2xvaWQuaW8iLCJhdWQiOiJjdXN0b21lciIsIm5iZiI6MTUwMzQ3NDg2NywiaWF0IjoxNTAzNDc0ODY3LCJqdGkiOiJjNDU5ODgwMS04YWQzLTRhMDctODIwZC02MzRmN2RkMWQ2MDgiLCJjeWNsb2lkIjp7InVzZXIiOnsiaWQiOjEsInVzZXJuYW1lIjoidXNlci0xIiwiZ2l2ZW5fbmFtZSI6Ik1hcmlhbm8iLCJmYW1pbHlfbmFtZSI6IkppbWVuZXoiLCJwaWN0dXJlX3VybCI6Imh0dHBzOi8vYXZhdGFyczIuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMTQ1NzkyMTAiLCJsb2NhbGUiOiJlbiJ9LCJvcmdhbml6YXRpb24iOnsiaWQiOjIsImNhbm9uaWNhbCI6Im9yZzIiLCJuYW1lIjoiT3JnIDIifSwicGVybWlzc2lvbnMiOnsib3JnYW5pemF0aW9uOmRlbGV0ZSI6WyIxIl0sIm9yZ2FuaXphdGlvbjp1cGRhdGUiOltdLCJvcmdhbml6YXRpb246dGVhbTpjcmVhdGUiOltdLCJvcmdhbml6YXRpb246dGVhbTpyZWFkIjpbXSwib3JnYW5pemF0aW9uOnRlYW06ZGVsZXRlIjpbIjIiXSwib3JnYW5pemF0aW9uOm1lbWJlcjpjcmVhdGUiOltdLCJvcmdhbml6YXRpb246bWVtYmVyOnJlYWQiOltdLCJvcmdhbml6YXRpb246bWVtYmVyOmRlbGV0ZSI6W10sIm9yZ2FuaXphdGlvbjpwcm9qZWN0OnJlYWQiOltdfX19.CHA3146UEHwVW6nYkDgYeSukGeZIH55mi4O0LsemenA
        '401':
          $ref: '#/responses/unauthenticated'
        default:
          $ref: '#/responses/unexpected_error'
  '/user/refresh_token':
    parameters:
      - $ref: '#/parameters/organization_canonical_query'
      - $ref: '#/parameters/child_canonical_query'
    get:
      tags:
        - User
      description: >-
        Refresh the user JWT and returns a new one if the previous is valid. The 'organization_canonical_query' has
        to be of an organization in which the user belongs to, and the 'child_canonical_query' of a child of the
        'organization_canonical_query' in any level (could be of a grand child).
      operationId: refreshToken
      responses:
        '200':
          description: The token which represents the session of the user.
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/UserSession'
          examples:
            application/json:
              data:
                token: >-
                  eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImY0YjdiZjZlLTE1NmYtNDYxMy05NmFiLWIwMzg5NzdiMWRkMSJ9.eyJpc3MiOiJodHRwczovL2N5Y2xvaWQuaW8iLCJzdWIiOiJodHRwczovL2N5Y2xvaWQuaW8iLCJhdWQiOiJjdXN0b21lciIsIm5iZiI6MTUwMzQ3NDg2NywiaWF0IjoxNTAzNDc0ODY3LCJqdGkiOiJjNDU5ODgwMS04YWQzLTRhMDctODIwZC02MzRmN2RkMWQ2MDgiLCJjeWNsb2lkIjp7InVzZXIiOnsiaWQiOjEsInVzZXJuYW1lIjoidXNlci0xIiwiZ2l2ZW5fbmFtZSI6Ik1hcmlhbm8iLCJmYW1pbHlfbmFtZSI6IkppbWVuZXoiLCJwaWN0dXJlX3VybCI6Imh0dHBzOi8vYXZhdGFyczIuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMTQ1NzkyMTAiLCJsb2NhbGUiOiJlbiJ9LCJvcmdhbml6YXRpb24iOnsiaWQiOjIsImNhbm9uaWNhbCI6Im9yZzIiLCJuYW1lIjoiT3JnIDIifSwicGVybWlzc2lvbnMiOnsib3JnYW5pemF0aW9uOmRlbGV0ZSI6WyIxIl0sIm9yZ2FuaXphdGlvbjp1cGRhdGUiOltdLCJvcmdhbml6YXRpb246dGVhbTpjcmVhdGUiOltdLCJvcmdhbml6YXRpb246dGVhbTpyZWFkIjpbXSwib3JnYW5pemF0aW9uOnRlYW06ZGVsZXRlIjpbIjIiXSwib3JnYW5pemF0aW9uOm1lbWJlcjpjcmVhdGUiOltdLCJvcmdhbml6YXRpb246bWVtYmVyOnJlYWQiOltdLCJvcmdhbml6YXRpb246bWVtYmVyOmRlbGV0ZSI6W10sIm9yZ2FuaXphdGlvbjpwcm9qZWN0OnJlYWQiOltdfX19.CHA3146UEHwVW6nYkDgYeSukGeZIH55mi4O0LsemenA
        '401':
          $ref: '#/responses/unauthenticated'
        default:
          $ref: '#/responses/unexpected_error'
  '/user/reset_password':
    post:
      tags:
        - User
      description: >-
        Request to reset the password.
        Due to security reasons, this endpoint doesn't return Not Found (404)
        when the email doesn't exist or belongs to a user primary email.
      operationId: passwordResetReq
      security: []
      parameters:
        - in: body
          name: body
          description: The reset password payload
          required: true
          schema:
            $ref: '#/definitions/UserPasswordResetReq'
      responses:
        '204':
          description: The password has been changed.
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - User
      description: >-
        Reset the user password when it has been forgotten.
        Due to security reasons, the endpoint doesn't return a Unprocessable
        Entity (422) when the token is invalid.
        404 Status code is returned if the user has been deleted of the system
        between the user password request and this request.
      operationId: passwordResetUpdate
      security: []
      parameters:
        - in: body
          name: body
          description: The reset password payload
          required: true
          schema:
            $ref: '#/definitions/UserPasswordResetUpdate'
      responses:
        '204':
          description: The password has been changed.
        '404':
          $ref: '#/responses/not_found_entity_in_path'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
  /user:
    get:
      tags:
        - User
      description: Get the information of the account of the authenticated user.
      operationId: getUserAccount
      responses:
        '200':
          description: The user account information.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/UserAccount'
          examples:
            application/json:
              data:
                created_at: 1503225026
                updated_at: 1503335026
                last_login: 1503413020
                emails:
                  - email: mariano@jimenez.com
                    verified: true
                    purpose: primary
                username: user-1
                given_name: Mariano
                family_name: Jimenez
                picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                locale: en
                guide:
                  tutorial:
                    welcome: false
                    letsgo: false
                    credentials: false
                    createProject: false
                    selectStack: false
                    configEnv: false
                    customEnvConfig: false
                    reviewDeploy: false
                    deployed: false
                    tasksDetails: false
                    finish: false
                  presentation: false
        default:
          $ref: '#/responses/unexpected_error'
    put:
      tags:
        - User
      description: Update the information of the account of the authenticated user.
      operationId: updateUserAccount
      parameters:
        - in: body
          name: body
          description: The user content
          required: true
          schema:
            $ref: '#/definitions/UpdateUserAccount'
      responses:
        '200':
          description: The updated user profile information.
          headers:
            Content-Length:
              description: The length of the response body in octets (8-bit bytes).
              type: integer
              format: int64
          schema:
            type: object
            required:
              - data
            properties:
              data:
                $ref: '#/definitions/UserAccount'
          examples:
            application/json:
              data:
                created_at: 1503225026
                updated_at: 1503335026
                last_login: 1503413020
                emails:
                  - email: mariano@jimenez.com
                    verified: true
                    purpose: primary
                username: user-1
                given_name: Mariano
                family_name: Jimenez
                picture_url: 'https://avatars2.githubusercontent.com/u/14579210'
                locale: en
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        '503':
          $ref: '#/responses/retry_operation'
        default:
          $ref: '#/responses/unexpected_error'
    post:
      tags:
        - User
      description: Create a new User (sign-up).
      operationId: signUp
      security: []
      parameters:
        - in: body
          name: body
          description: The user content
          required: true
          schema:
            $ref: '#/definitions/NewAccount'
      responses:
        '204':
          description: >-
            Account created. The account MUST be verified through the link sent
            to the email address.
        '411':
          $ref: '#/responses/required_content_length_header'
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
    delete:
      tags:
        - User
      description: The authenticated user delete itself from the system.
      operationId: deleteUserAccount
      responses:
        '204':
          description: User account has been deleted.
        '403':
          $ref: '#/responses/not_enough_permissions'
        default:
          $ref: '#/responses/unexpected_error'
  '/user/email/verification/{verification_token}':
    parameters:
      - $ref: '#/parameters/verification_token'
    put:
      tags:
        - User
      description: >-
        Verify that the email address is own by the user.
        Due to security reasons, this endpoint doesn't return Not Found (404)
        when the verification token doesn't exist.
      operationId: emailVerification
      security: []
      responses:
        '204':
          description: Email address has been verified.
        default:
          $ref: '#/responses/unexpected_error'
  '/webhooks/stripe':
    post:
      security: []
      consumes:
        - application/json
      tags:
        - Webhooks
      description: Webhooks subscribed to Stripe
      operationId: webhooksStripe
      parameters:
        - in: body
          name: body
          description: The webhook body
          required: true
          schema:
            type: string
            format: binary
      responses:
        '204':
          description: Webhook succeded
        '422':
          $ref: '#/responses/unprocessable_entity'
        default:
          $ref: '#/responses/unexpected_error'
